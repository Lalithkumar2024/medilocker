{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kumaran project\\\\medilocker\\\\src\\\\pages\\\\Pharmacy.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport axios from \"axios\";\nimport L from \"leaflet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\")\n});\nconst Pharmacy = () => {\n  _s();\n  const [location, setLocation] = useState({\n    lat: 13.0827,\n    lng: 80.2707\n  }); // Default: Chennai\n  const [pharmacies, setPharmacies] = useState([]);\n  useEffect(() => {\n    // Get current location\n    navigator.geolocation.getCurrentPosition(position => {\n      setLocation({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      });\n      fetchPharmacies(position.coords.latitude, position.coords.longitude);\n    }, () => {\n      // If denied, use default Chennai location\n      fetchPharmacies(location.lat, location.lng);\n    });\n  }, []);\n  const fetchPharmacies = async (lat, lng) => {\n    try {\n      const response = await axios.get(`https://nominatim.openstreetmap.org/search?format=json&q=pharmacy+near+${lat},${lng}`);\n      setPharmacies(response.data);\n    } catch (error) {\n      console.error(\"Error fetching pharmacies:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pharmacy\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"pharmacysection\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Find NearBy Pharmacy's\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [location.lat, location.lng],\n        zoom: 12,\n        style: {\n          height: \"500px\",\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: [location.lat, location.lng],\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: \"Your Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), pharmacies.map((pharmacy, index) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: [pharmacy.lat, pharmacy.lon],\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: pharmacy.display_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(Pharmacy, \"LTRHEQ0jCiwLb26mTR7kVJiUdOY=\");\n_c = Pharmacy;\nexport default Pharmacy;\nvar _c;\n$RefreshReg$(_c, \"Pharmacy\");","map":{"version":3,"names":["React","useState","useEffect","Header","Footer","MapContainer","TileLayer","Marker","Popup","axios","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","Pharmacy","_s","location","setLocation","lat","lng","pharmacies","setPharmacies","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fetchPharmacies","response","get","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","style","height","width","url","map","pharmacy","index","lon","display_name","_c","$RefreshReg$"],"sources":["D:/Kumaran project/medilocker/src/pages/Pharmacy.jsx"],"sourcesContent":["import React,{ useState, useEffect } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport axios from \"axios\";\r\nimport L from \"leaflet\";\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\r\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\r\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\r\n});\r\n\r\nconst Pharmacy = () => {\r\n\r\n    const [location, setLocation] = useState({ lat: 13.0827, lng: 80.2707 }); // Default: Chennai\r\n    const [pharmacies, setPharmacies] = useState([]);\r\n  \r\n    useEffect(() => {\r\n      // Get current location\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          setLocation({\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude,\r\n          });\r\n          fetchPharmacies(position.coords.latitude, position.coords.longitude);\r\n        },\r\n        () => {\r\n          // If denied, use default Chennai location\r\n          fetchPharmacies(location.lat, location.lng);\r\n        }\r\n      );\r\n    }, []);\r\n  \r\n    const fetchPharmacies = async (lat, lng) => {\r\n      try {\r\n        const response = await axios.get(\r\n          `https://nominatim.openstreetmap.org/search?format=json&q=pharmacy+near+${lat},${lng}`\r\n        );\r\n        setPharmacies(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching pharmacies:\", error);\r\n      }\r\n    };\r\n\r\n    return(\r\n        <div className=\"pharmacy\">\r\n            <Header/>\r\n            <section className=\"pharmacysection\">\r\n\r\n                <h3>Find NearBy Pharmacy's</h3>\r\n                <br />\r\n                {/* <iframe src=\"https://www.google.com/maps/embed?pb=!1m16!1m12!1m3!1d498371.65362274623!2d79.99166709241355!3d12.6132929863659!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!2m1!1sNearby%20Pharmacy!5e0!3m2!1sen!2sin!4v1743771070620!5m2!1sen!2sin\" \r\n                width=\"800\" height=\"650\" allowfullscreen=\"\" loading=\"lazy\" referrerpolicy=\"no-referrer-when-downgrade\"></iframe> */}\r\n\r\n                <MapContainer center={[location.lat, location.lng]} zoom={12} style={{ height: \"500px\", width: \"100%\" }}>\r\n                    <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n                    <Marker position={[location.lat, location.lng]}>\r\n                        <Popup>Your Location</Popup>\r\n                    </Marker>\r\n                    {pharmacies.map((pharmacy, index) => (\r\n                        <Marker key={index} position={[pharmacy.lat, pharmacy.lon]}>\r\n                        <Popup>{pharmacy.display_name}</Popup>\r\n                        </Marker>\r\n                    ))}\r\n                </MapContainer>\r\n\r\n            </section>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pharmacy;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}