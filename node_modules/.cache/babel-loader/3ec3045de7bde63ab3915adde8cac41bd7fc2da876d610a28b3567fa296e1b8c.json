{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kumaran project\\\\medilocker\\\\src\\\\pages\\\\LoginRegister.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState,useEffect } from \"react\";\n// import { useNavigate,useLocation } from \"react-router-dom\";\n// import \"../index.css\"; \n\n// const LoginRegister = () => {\n// const location = useLocation(); \n// const [isSignUp, setIsSignUp] = useState(location.pathname === \"/register\");\n\n// useEffect(() => {\n//   setIsSignUp(location.pathname === \"/register\");\n// }, [location.pathname]); \n\n// const handleToggle = (showSignUp) => {\n//     setIsSignUp(showSignUp);\n//     navigate(showSignUp ? \"/register\" : \"/login\"); \n// };\n// const [email, setEmail] = useState('');\n// const [password, setPassword] = useState('');\n// const [role, setRole] = useState('patient');\n// const [error, setError] = useState('');\n\n// const navigate = useNavigate(); \n\n// const sampleUsers = [\n//     { email: \"admin@medilocker.com\", password: \"admin123\", role: \"admin\" },\n//     { email: \"kumaran@medilocker.com\", password: \"kumaran123\", role: \"patient\" },\n//     { email: \"john@medilocker.com\", password: \"john123\", role: \"doctor\" }\n// ];\n\n// function handleLogin(e) {\n//     e.preventDefault();\n\n//     const user = sampleUsers.find(user => user.email === email && user.password === password && user.role === role);\n\n//     if (user) {\n//         localStorage.setItem(\"isLoggedIn\", \"true\");\n//         localStorage.setItem(\"userRole\", user.role);\n//         localStorage.setItem(\"userEmail\", user.email);\n\n//         console.log(\"Login Successful:\", user);\n//         if(user.role === \"admin\"){\n//            navigate(\"/admindashboard\");\n//         }else if (user.role === \"patient\"){\n//             navigate(\"/dashboard\");\n//         }else{\n//             navigate(\"/doctordashboard\");\n//         }           \n//     } else {\n//         setError(\"Invalid email, password, or role selection.\");\n//     }\n// }\n\n// const [name, setName] = useState('');\n// const [dob, setDob] = useState('');\n// const [phone, setPhone] = useState('');\n// const [confirmPassword, setConfirmPassword] = useState('');\n\n// function handleSubmit(e) {\n//     e.preventDefault();\n//     const user = { name, email, dob, phone, password, confirmPassword, role };\n//     console.log(user);\n// }\n\n// return (\n//     <div className=\"loginregister\">\n//         <section className=\"loginregistersection\">\n//             <div className={`wrapper ${isSignUp ? \"animated-signup\" : \"animated-signin\"}`}>\n//                 <div className=\"registerform card sign-up\">\n//                     <div className=\"card-body\">\n//                         <h2 className=\"card-title p-3\">Create an Account</h2>\n//                         <form>\n//                             <div className=\"form-floating mb-3\">\n//                                 <input type=\"text\"\n//                                     id=\"floatingName\"\n//                                     name=\"name\"\n//                                     value={name}\n//                                     onChange={(e) => setName(e.target.value)}\n//                                     placeholder=\"Enter your Name\"\n//                                     required\n//                                     autoComplete=\"off\"\n//                                     className=\"form-control\" />\n//                                 <label htmlFor=\"floatingName\">Name</label>\n//                             </div>\n//                             <div className=\"form-floating mb-3\">\n//                                 <input type=\"email\"\n//                                         id=\"floatingEmail\"\n//                                         name=\"email\"\n//                                         value={email}\n//                                         onChange={(e) => setEmail(e.target.value)}\n//                                         placeholder=\"Enter your Email\"\n//                                         required\n//                                         autoComplete=\"off\"\n//                                         className=\"form-control\" />\n//                                 <label htmlFor=\"floatingEmail\">Email</label>\n//                             </div>\n//                             <div className=\"form-floating mb-3\">\n//                                 <input type=\"date\"\n//                                     id=\"floatingDate\"\n//                                     name=\"dob\"\n//                                     value={dob}\n//                                     onChange={(e) => setDob(e.target.value)}\n//                                     required\n//                                     autoComplete=\"off\"\n//                                     className=\"form-control\" />\n//                                 <label htmlFor=\"floatingDate\">Date of Birth</label>\n//                             </div>\n//                             <div className=\"form-floating mb-3\">\n//                                 <input type=\"tel\"\n//                                     id=\"floatingPhone\"\n//                                     name=\"phone\"\n//                                     value={phone}\n//                                     onChange={(e) => setPhone(e.target.value)}\n//                                     placeholder=\"Enter your Phone\"\n//                                     required\n//                                     autoComplete=\"off\"\n//                                     className=\"form-control\" />\n//                                 <label htmlFor=\"floatingPhone\">Phone</label>\n//                             </div>\n//                             <div className=\"form-floating mb-3\">\n//                                 <input type=\"password\"\n//                                     id=\"floatingPassword\"\n//                                     name=\"password\"\n//                                     value={password}\n//                                     onChange={(e) => setPassword(e.target.value)}\n//                                     placeholder=\"Enter your Password\"\n//                                     required\n//                                     autoComplete=\"off\"\n//                                     className=\"form-control\" />\n//                                 <label htmlFor=\"floatingPassword\">Password</label>\n//                             </div>\n//                             <div className=\"form-floating mb-3\">\n//                                 <input type=\"password\"\n//                                     id=\"floatingConfirmPassword\"\n//                                     name=\"confirmPassword\"\n//                                     value={confirmPassword}\n//                                     onChange={(e) => setConfirmPassword(e.target.value)}\n//                                     placeholder=\"Confirm your Password\"\n//                                     required\n//                                     autoComplete=\"off\"\n//                                     className=\"form-control\" />\n//                                 <label htmlFor=\"floatingConfirmPassword\">Confirm Password</label>\n//                             </div>\n//                             <div className=\"mb-3 p-2\">\n//                                 <label className=\"form-label d-block fw-medium text-start\">Select Role:</label>\n//                                 <div className=\"d-flex align-items-center\">\n//                                     <input type=\"radio\" \n//                                         id=\"doctor\" \n//                                         name=\"role\" \n//                                         value=\"doctor\"\n//                                         checked={role === \"doctor\"} \n//                                         onChange={(e) => setRole(e.target.value)}\n//                                         className=\"me-1\" />\n//                                     <label htmlFor=\"doctor\" className=\"me-3\">Doctor</label>\n\n//                                     <input type=\"radio\" \n//                                         id=\"patient\" \n//                                         name=\"role\" \n//                                         value=\"patient\"\n//                                         checked={role === \"patient\"} \n//                                         onChange={(e) => setRole(e.target.value)}\n//                                         className=\"me-1\" />\n//                                     <label htmlFor=\"patient\">Patient</label>\n//                                 </div>\n//                             </div>\n//                             <div className=\"col-12 mt-4\">\n//                                 <button type=\"submit\" className=\"btn btn-success w-100\" onClick={handleSubmit}>Register</button>\n//                             </div>\n//                             <br />\n//                             <p className=\"form-text\">\n//                                 Already have an account? <a onClick={() => handleToggle(false)} className=\"signin-link link\">Log in</a>                            \n//                             </p>\n//                         </form>\n//                     </div>\n//                 </div>\n//                 <div className=\"loginform card sign-in\">\n//                     <div className=\"card-body mt-3\">\n//                         <h2 className=\"card-title mt-5 p-3\">Welcome Back!</h2>\n//                         <form onSubmit={handleLogin}>\n//                             <div className=\"form-floating mb-3\">\n//                                 <input type=\"email\"\n//                                     id=\"floatingInput\"\n//                                     name=\"email\"\n//                                     value={email}\n//                                     onChange={(e) => setEmail(e.target.value)}\n//                                     placeholder=\"Enter your email\"\n//                                     required\n//                                     autoComplete=\"off\"\n//                                     className=\"form-control\" />\n//                                 <label htmlFor=\"floatingInput\">Email</label>\n//                             </div>\n//                             <div className=\"form-floating mb-3\">\n//                                 <input type=\"password\"\n//                                     id=\"floatingPassword\"\n//                                     name=\"password\"\n//                                     value={password}\n//                                     onChange={(e) => setPassword(e.target.value)}\n//                                     placeholder=\"Enter your Password\"\n//                                     required\n//                                     autoComplete=\"off\"\n//                                     className=\"form-control\" />\n//                                 <label htmlFor=\"floatingPassword\">Password</label>\n//                             </div>\n//                             <div className=\"mb-3 p-2\">\n//                                 <label className=\"form-label d-block fw-medium text-start\">Select Role:</label>\n//                                 <div className=\"d-flex align-items-center\">\n//                                     <input type=\"radio\"\n//                                         id=\"admin\"\n//                                         name=\"role\"\n//                                         value=\"admin\"\n//                                         checked={role === \"admin\"}\n//                                         onChange={(e) => setRole(e.target.value)}\n//                                         className=\"me-1\" />\n//                                     <label htmlFor=\"admin\" className=\"me-3\">Admin</label>\n\n//                                     <input type=\"radio\"\n//                                         id=\"patient\"\n//                                         name=\"role\"\n//                                         value=\"patient\"\n//                                         checked={role === \"patient\"}\n//                                         onChange={(e) => setRole(e.target.value)}\n//                                         className=\"me-1\" />\n//                                     <label htmlFor=\"patient\" className=\"me-3\">Patient</label>\n\n//                                     <input type=\"radio\"\n//                                         id=\"doctor\"\n//                                         name=\"role\"\n//                                         value=\"doctor\"\n//                                         checked={role === \"doctor\"}\n//                                         onChange={(e) => setRole(e.target.value)}\n//                                         className=\"me-1\" />\n//                                     <label htmlFor=\"doctor\">Doctor</label>\n//                                 </div>\n//                             </div>\n\n//                             {error && <p className=\"text-danger\">{error}</p>}\n\n//                             <div className=\"col-12 mt-4\">\n//                                 <button type=\"submit\" className=\"btn btn-success w-100\">Login</button>\n//                             </div>\n//                             <br />\n//                             <p className=\"form-text\">\n//                                 <a href=\"/forgotpassword\" className=\"form-link forget\">Forgot Password?</a>\n//                             </p>\n//                             <p className=\"form-text\">\n//                                 Don't have an account? <a onClick={() => handleToggle(true)} className=\"signup-link form-link link\">Sign up</a>\n//                             </p>\n//                         </form>\n//                     </div>\n//                 </div>\n//             </div>\n//         </section>\n//     </div>\n//   );\n// };\n\n// export default LoginRegister;\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport \"../index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginRegister = () => {\n  _s();\n  const location = useLocation();\n  const [isSignUp, setIsSignUp] = useState(location.pathname === \"/register\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    setIsSignUp(location.pathname === \"/register\");\n  }, [location.pathname]);\n  const handleToggle = showSignUp => {\n    setIsSignUp(showSignUp);\n    navigate(showSignUp ? \"/register\" : \"/login\");\n  };\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    dob: \"\",\n    phone: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    role: \"patient\"\n  });\n  const [error, setError] = useState(\"\");\n  const sampleUsers = [{\n    email: \"admin@medilocker.com\",\n    password: \"admin123\",\n    role: \"admin\"\n  }, {\n    email: \"kumaran@medilocker.com\",\n    password: \"kumaran123\",\n    role: \"patient\"\n  }, {\n    email: \"john@medilocker.com\",\n    password: \"john123\",\n    role: \"doctor\"\n  }];\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const validateForm = () => {\n    if (isSignUp) {\n      if (!formData.name || !formData.email || !formData.dob || !formData.phone || !formData.password || !formData.confirmPassword) {\n        Swal.fire(\"Error\", \"All fields are required!\", \"error\");\n        return false;\n      }\n      if (formData.password !== formData.confirmPassword) {\n        Swal.fire(\"Error\", \"Passwords do not match!\", \"error\");\n        return false;\n      }\n    } else {\n      if (!formData.email || !formData.password) {\n        Swal.fire(\"Error\", \"Email and Password are required!\", \"error\");\n        return false;\n      }\n    }\n    return true;\n  };\n  const handleLogin = e => {\n    e.preventDefault();\n    if (!validateForm()) return;\n    const user = sampleUsers.find(user => user.email === formData.email && user.password === formData.password && user.role === formData.role);\n    if (user) {\n      localStorage.setItem(\"isLoggedIn\", \"true\");\n      localStorage.setItem(\"userRole\", user.role);\n      localStorage.setItem(\"userEmail\", user.email);\n      Swal.fire(\"Success\", \"Login Successful!\", \"success\");\n      navigate(user.role === \"admin\" ? \"/admindashboard\" : user.role === \"patient\" ? \"/dashboard\" : \"/doctordashboard\");\n    } else {\n      Swal.fire(\"Error\", \"Invalid email, password, or role selection.\", \"error\");\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!validateForm()) return;\n    Swal.fire(\"Success\", \"Registration Successful!\", \"success\");\n    console.log(\"Registered User:\", formData);\n    navigate(\"/login\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginregister\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"loginregistersection\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `wrapper ${isSignUp ? \"animated-signup\" : \"animated-signin\"}`,\n        children: isSignUp ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"registerform card sign-up\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"card-title p-3\",\n              children: \"Create an Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"name\",\n                placeholder: \"Name\",\n                value: formData.name,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                name: \"email\",\n                placeholder: \"Email\",\n                value: formData.email,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                name: \"dob\",\n                value: formData.dob,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"tel\",\n                name: \"phone\",\n                placeholder: \"Phone\",\n                value: formData.phone,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"password\",\n                placeholder: \"Password\",\n                value: formData.password,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"confirmPassword\",\n                placeholder: \"Confirm Password\",\n                value: formData.confirmPassword,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => handleToggle(false),\n                children: \"Log in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loginform card sign-in\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"card-title p-3\",\n              children: \"Welcome Back!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleLogin,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                name: \"email\",\n                placeholder: \"Email\",\n                value: formData.email,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"password\",\n                placeholder: \"Password\",\n                value: formData.password,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => handleToggle(true),\n                children: \"Sign up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 43\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 343,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginRegister, \"n9zH7y3uXt37zWjEAjm1lll57vc=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = LoginRegister;\nexport default LoginRegister;\nvar _c;\n$RefreshReg$(_c, \"LoginRegister\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","Swal","jsxDEV","_jsxDEV","LoginRegister","_s","location","isSignUp","setIsSignUp","pathname","navigate","handleToggle","showSignUp","formData","setFormData","name","email","dob","phone","password","confirmPassword","role","error","setError","sampleUsers","handleChange","e","target","value","validateForm","fire","handleLogin","preventDefault","user","find","localStorage","setItem","handleSubmit","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","onClick","_c","$RefreshReg$"],"sources":["D:/Kumaran project/medilocker/src/pages/LoginRegister.jsx"],"sourcesContent":["// import React, { useState,useEffect } from \"react\";\r\n// import { useNavigate,useLocation } from \"react-router-dom\";\r\n// import \"../index.css\"; \r\n\r\n// const LoginRegister = () => {\r\n// const location = useLocation(); \r\n// const [isSignUp, setIsSignUp] = useState(location.pathname === \"/register\");\r\n\r\n// useEffect(() => {\r\n//   setIsSignUp(location.pathname === \"/register\");\r\n// }, [location.pathname]); \r\n\r\n// const handleToggle = (showSignUp) => {\r\n//     setIsSignUp(showSignUp);\r\n//     navigate(showSignUp ? \"/register\" : \"/login\"); \r\n// };\r\n// const [email, setEmail] = useState('');\r\n// const [password, setPassword] = useState('');\r\n// const [role, setRole] = useState('patient');\r\n// const [error, setError] = useState('');\r\n\r\n// const navigate = useNavigate(); \r\n\r\n// const sampleUsers = [\r\n//     { email: \"admin@medilocker.com\", password: \"admin123\", role: \"admin\" },\r\n//     { email: \"kumaran@medilocker.com\", password: \"kumaran123\", role: \"patient\" },\r\n//     { email: \"john@medilocker.com\", password: \"john123\", role: \"doctor\" }\r\n// ];\r\n\r\n// function handleLogin(e) {\r\n//     e.preventDefault();\r\n\r\n//     const user = sampleUsers.find(user => user.email === email && user.password === password && user.role === role);\r\n\r\n//     if (user) {\r\n//         localStorage.setItem(\"isLoggedIn\", \"true\");\r\n//         localStorage.setItem(\"userRole\", user.role);\r\n//         localStorage.setItem(\"userEmail\", user.email);\r\n\r\n//         console.log(\"Login Successful:\", user);\r\n//         if(user.role === \"admin\"){\r\n//            navigate(\"/admindashboard\");\r\n//         }else if (user.role === \"patient\"){\r\n//             navigate(\"/dashboard\");\r\n//         }else{\r\n//             navigate(\"/doctordashboard\");\r\n//         }           \r\n//     } else {\r\n//         setError(\"Invalid email, password, or role selection.\");\r\n//     }\r\n// }\r\n\r\n// const [name, setName] = useState('');\r\n// const [dob, setDob] = useState('');\r\n// const [phone, setPhone] = useState('');\r\n// const [confirmPassword, setConfirmPassword] = useState('');\r\n  \r\n// function handleSubmit(e) {\r\n//     e.preventDefault();\r\n//     const user = { name, email, dob, phone, password, confirmPassword, role };\r\n//     console.log(user);\r\n// }\r\n      \r\n// return (\r\n//     <div className=\"loginregister\">\r\n//         <section className=\"loginregistersection\">\r\n//             <div className={`wrapper ${isSignUp ? \"animated-signup\" : \"animated-signin\"}`}>\r\n//                 <div className=\"registerform card sign-up\">\r\n//                     <div className=\"card-body\">\r\n//                         <h2 className=\"card-title p-3\">Create an Account</h2>\r\n//                         <form>\r\n//                             <div className=\"form-floating mb-3\">\r\n//                                 <input type=\"text\"\r\n//                                     id=\"floatingName\"\r\n//                                     name=\"name\"\r\n//                                     value={name}\r\n//                                     onChange={(e) => setName(e.target.value)}\r\n//                                     placeholder=\"Enter your Name\"\r\n//                                     required\r\n//                                     autoComplete=\"off\"\r\n//                                     className=\"form-control\" />\r\n//                                 <label htmlFor=\"floatingName\">Name</label>\r\n//                             </div>\r\n//                             <div className=\"form-floating mb-3\">\r\n//                                 <input type=\"email\"\r\n//                                         id=\"floatingEmail\"\r\n//                                         name=\"email\"\r\n//                                         value={email}\r\n//                                         onChange={(e) => setEmail(e.target.value)}\r\n//                                         placeholder=\"Enter your Email\"\r\n//                                         required\r\n//                                         autoComplete=\"off\"\r\n//                                         className=\"form-control\" />\r\n//                                 <label htmlFor=\"floatingEmail\">Email</label>\r\n//                             </div>\r\n//                             <div className=\"form-floating mb-3\">\r\n//                                 <input type=\"date\"\r\n//                                     id=\"floatingDate\"\r\n//                                     name=\"dob\"\r\n//                                     value={dob}\r\n//                                     onChange={(e) => setDob(e.target.value)}\r\n//                                     required\r\n//                                     autoComplete=\"off\"\r\n//                                     className=\"form-control\" />\r\n//                                 <label htmlFor=\"floatingDate\">Date of Birth</label>\r\n//                             </div>\r\n//                             <div className=\"form-floating mb-3\">\r\n//                                 <input type=\"tel\"\r\n//                                     id=\"floatingPhone\"\r\n//                                     name=\"phone\"\r\n//                                     value={phone}\r\n//                                     onChange={(e) => setPhone(e.target.value)}\r\n//                                     placeholder=\"Enter your Phone\"\r\n//                                     required\r\n//                                     autoComplete=\"off\"\r\n//                                     className=\"form-control\" />\r\n//                                 <label htmlFor=\"floatingPhone\">Phone</label>\r\n//                             </div>\r\n//                             <div className=\"form-floating mb-3\">\r\n//                                 <input type=\"password\"\r\n//                                     id=\"floatingPassword\"\r\n//                                     name=\"password\"\r\n//                                     value={password}\r\n//                                     onChange={(e) => setPassword(e.target.value)}\r\n//                                     placeholder=\"Enter your Password\"\r\n//                                     required\r\n//                                     autoComplete=\"off\"\r\n//                                     className=\"form-control\" />\r\n//                                 <label htmlFor=\"floatingPassword\">Password</label>\r\n//                             </div>\r\n//                             <div className=\"form-floating mb-3\">\r\n//                                 <input type=\"password\"\r\n//                                     id=\"floatingConfirmPassword\"\r\n//                                     name=\"confirmPassword\"\r\n//                                     value={confirmPassword}\r\n//                                     onChange={(e) => setConfirmPassword(e.target.value)}\r\n//                                     placeholder=\"Confirm your Password\"\r\n//                                     required\r\n//                                     autoComplete=\"off\"\r\n//                                     className=\"form-control\" />\r\n//                                 <label htmlFor=\"floatingConfirmPassword\">Confirm Password</label>\r\n//                             </div>\r\n//                             <div className=\"mb-3 p-2\">\r\n//                                 <label className=\"form-label d-block fw-medium text-start\">Select Role:</label>\r\n//                                 <div className=\"d-flex align-items-center\">\r\n//                                     <input type=\"radio\" \r\n//                                         id=\"doctor\" \r\n//                                         name=\"role\" \r\n//                                         value=\"doctor\"\r\n//                                         checked={role === \"doctor\"} \r\n//                                         onChange={(e) => setRole(e.target.value)}\r\n//                                         className=\"me-1\" />\r\n//                                     <label htmlFor=\"doctor\" className=\"me-3\">Doctor</label>\r\n\r\n//                                     <input type=\"radio\" \r\n//                                         id=\"patient\" \r\n//                                         name=\"role\" \r\n//                                         value=\"patient\"\r\n//                                         checked={role === \"patient\"} \r\n//                                         onChange={(e) => setRole(e.target.value)}\r\n//                                         className=\"me-1\" />\r\n//                                     <label htmlFor=\"patient\">Patient</label>\r\n//                                 </div>\r\n//                             </div>\r\n//                             <div className=\"col-12 mt-4\">\r\n//                                 <button type=\"submit\" className=\"btn btn-success w-100\" onClick={handleSubmit}>Register</button>\r\n//                             </div>\r\n//                             <br />\r\n//                             <p className=\"form-text\">\r\n//                                 Already have an account? <a onClick={() => handleToggle(false)} className=\"signin-link link\">Log in</a>                            \r\n//                             </p>\r\n//                         </form>\r\n//                     </div>\r\n//                 </div>\r\n//                 <div className=\"loginform card sign-in\">\r\n//                     <div className=\"card-body mt-3\">\r\n//                         <h2 className=\"card-title mt-5 p-3\">Welcome Back!</h2>\r\n//                         <form onSubmit={handleLogin}>\r\n//                             <div className=\"form-floating mb-3\">\r\n//                                 <input type=\"email\"\r\n//                                     id=\"floatingInput\"\r\n//                                     name=\"email\"\r\n//                                     value={email}\r\n//                                     onChange={(e) => setEmail(e.target.value)}\r\n//                                     placeholder=\"Enter your email\"\r\n//                                     required\r\n//                                     autoComplete=\"off\"\r\n//                                     className=\"form-control\" />\r\n//                                 <label htmlFor=\"floatingInput\">Email</label>\r\n//                             </div>\r\n//                             <div className=\"form-floating mb-3\">\r\n//                                 <input type=\"password\"\r\n//                                     id=\"floatingPassword\"\r\n//                                     name=\"password\"\r\n//                                     value={password}\r\n//                                     onChange={(e) => setPassword(e.target.value)}\r\n//                                     placeholder=\"Enter your Password\"\r\n//                                     required\r\n//                                     autoComplete=\"off\"\r\n//                                     className=\"form-control\" />\r\n//                                 <label htmlFor=\"floatingPassword\">Password</label>\r\n//                             </div>\r\n//                             <div className=\"mb-3 p-2\">\r\n//                                 <label className=\"form-label d-block fw-medium text-start\">Select Role:</label>\r\n//                                 <div className=\"d-flex align-items-center\">\r\n//                                     <input type=\"radio\"\r\n//                                         id=\"admin\"\r\n//                                         name=\"role\"\r\n//                                         value=\"admin\"\r\n//                                         checked={role === \"admin\"}\r\n//                                         onChange={(e) => setRole(e.target.value)}\r\n//                                         className=\"me-1\" />\r\n//                                     <label htmlFor=\"admin\" className=\"me-3\">Admin</label>\r\n\r\n//                                     <input type=\"radio\"\r\n//                                         id=\"patient\"\r\n//                                         name=\"role\"\r\n//                                         value=\"patient\"\r\n//                                         checked={role === \"patient\"}\r\n//                                         onChange={(e) => setRole(e.target.value)}\r\n//                                         className=\"me-1\" />\r\n//                                     <label htmlFor=\"patient\" className=\"me-3\">Patient</label>\r\n\r\n//                                     <input type=\"radio\"\r\n//                                         id=\"doctor\"\r\n//                                         name=\"role\"\r\n//                                         value=\"doctor\"\r\n//                                         checked={role === \"doctor\"}\r\n//                                         onChange={(e) => setRole(e.target.value)}\r\n//                                         className=\"me-1\" />\r\n//                                     <label htmlFor=\"doctor\">Doctor</label>\r\n//                                 </div>\r\n//                             </div>\r\n\r\n//                             {error && <p className=\"text-danger\">{error}</p>}\r\n\r\n//                             <div className=\"col-12 mt-4\">\r\n//                                 <button type=\"submit\" className=\"btn btn-success w-100\">Login</button>\r\n//                             </div>\r\n//                             <br />\r\n//                             <p className=\"form-text\">\r\n//                                 <a href=\"/forgotpassword\" className=\"form-link forget\">Forgot Password?</a>\r\n//                             </p>\r\n//                             <p className=\"form-text\">\r\n//                                 Don't have an account? <a onClick={() => handleToggle(true)} className=\"signup-link form-link link\">Sign up</a>\r\n//                             </p>\r\n//                         </form>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </section>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default LoginRegister;\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport \"../index.css\";\r\n\r\nconst LoginRegister = () => {\r\n  const location = useLocation();\r\n  const [isSignUp, setIsSignUp] = useState(location.pathname === \"/register\");\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    setIsSignUp(location.pathname === \"/register\");\r\n  }, [location.pathname]);\r\n\r\n  const handleToggle = (showSignUp) => {\r\n    setIsSignUp(showSignUp);\r\n    navigate(showSignUp ? \"/register\" : \"/login\");\r\n  };\r\n\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    dob: \"\",\r\n    phone: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    role: \"patient\"\r\n  });\r\n\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const sampleUsers = [\r\n    { email: \"admin@medilocker.com\", password: \"admin123\", role: \"admin\" },\r\n    { email: \"kumaran@medilocker.com\", password: \"kumaran123\", role: \"patient\" },\r\n    { email: \"john@medilocker.com\", password: \"john123\", role: \"doctor\" }\r\n  ];\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const validateForm = () => {\r\n    if (isSignUp) {\r\n      if (!formData.name || !formData.email || !formData.dob || !formData.phone || !formData.password || !formData.confirmPassword) {\r\n        Swal.fire(\"Error\", \"All fields are required!\", \"error\");\r\n        return false;\r\n      }\r\n      if (formData.password !== formData.confirmPassword) {\r\n        Swal.fire(\"Error\", \"Passwords do not match!\", \"error\");\r\n        return false;\r\n      }\r\n    } else {\r\n      if (!formData.email || !formData.password) {\r\n        Swal.fire(\"Error\", \"Email and Password are required!\", \"error\");\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) return;\r\n\r\n    const user = sampleUsers.find(user => user.email === formData.email && user.password === formData.password && user.role === formData.role);\r\n    if (user) {\r\n      localStorage.setItem(\"isLoggedIn\", \"true\");\r\n      localStorage.setItem(\"userRole\", user.role);\r\n      localStorage.setItem(\"userEmail\", user.email);\r\n      Swal.fire(\"Success\", \"Login Successful!\", \"success\");\r\n      navigate(user.role === \"admin\" ? \"/admindashboard\" : user.role === \"patient\" ? \"/dashboard\" : \"/doctordashboard\");\r\n    } else {\r\n      Swal.fire(\"Error\", \"Invalid email, password, or role selection.\", \"error\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) return;\r\n\r\n    Swal.fire(\"Success\", \"Registration Successful!\", \"success\");\r\n    console.log(\"Registered User:\", formData);\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"loginregister\">\r\n      <section className=\"loginregistersection\">\r\n        <div className={`wrapper ${isSignUp ? \"animated-signup\" : \"animated-signin\"}`}>\r\n          {isSignUp ? (\r\n            <div className=\"registerform card sign-up\">\r\n              <div className=\"card-body\">\r\n                <h2 className=\"card-title p-3\">Create an Account</h2>\r\n                <form onSubmit={handleSubmit}>\r\n                  <input type=\"text\" name=\"name\" placeholder=\"Name\" value={formData.name} onChange={handleChange} required />\r\n                  <input type=\"email\" name=\"email\" placeholder=\"Email\" value={formData.email} onChange={handleChange} required />\r\n                  <input type=\"date\" name=\"dob\" value={formData.dob} onChange={handleChange} required />\r\n                  <input type=\"tel\" name=\"phone\" placeholder=\"Phone\" value={formData.phone} onChange={handleChange} required />\r\n                  <input type=\"password\" name=\"password\" placeholder=\"Password\" value={formData.password} onChange={handleChange} required />\r\n                  <input type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm Password\" value={formData.confirmPassword} onChange={handleChange} required />\r\n                  <button type=\"submit\">Register</button>\r\n                </form>\r\n                <p>Already have an account? <span onClick={() => handleToggle(false)}>Log in</span></p>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"loginform card sign-in\">\r\n              <div className=\"card-body\">\r\n                <h2 className=\"card-title p-3\">Welcome Back!</h2>\r\n                <form onSubmit={handleLogin}>\r\n                  <input type=\"email\" name=\"email\" placeholder=\"Email\" value={formData.email} onChange={handleChange} required />\r\n                  <input type=\"password\" name=\"password\" placeholder=\"Password\" value={formData.password} onChange={handleChange} required />\r\n                  <button type=\"submit\">Login</button>\r\n                </form>\r\n                <p>Don't have an account? <span onClick={() => handleToggle(true)}>Sign up</span></p>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginRegister;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}