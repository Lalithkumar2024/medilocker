{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kumaran project\\\\medilocker\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport Swal from \"sweetalert2\";\nimport { addAppointment } from \"../api/AppointmentService\";\nimport { addData, getALLGraphData } from \"../api/GraphService\";\nimport { getPatientId } from \"../api/PatientService\";\n// import { getAllDoctors } from \"../api/DoctorService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [sugarData, setSugarData] = useState([]);\n  const [beforeEating, setBeforeEating] = useState(\"\");\n  const [afterEating, setAfterEating] = useState(\"\");\n  const [selectedRange, setSelectedRange] = useState(\"week\");\n  const [selectedDoctor, setSelectedDoctor] = useState(\"\");\n  const [appointmentDate, setAppointmentDate] = useState(\"\");\n  const [appointmentTime, setAppointmentTime] = useState(\"\");\n  const [appointments, setAppointments] = useState([]);\n  const user = JSON.parse(localStorage.getItem(\"users\"));\n  const userId = user.user_id;\n  const userName = user.name;\n  console.log(\"Logged-in user:\", user);\n  const doctors = [{\n    name: \"Dr. John - Cardiologist\",\n    unavailableTimes: [\"10:00\", \"15:00\"]\n  }, {\n    name: \"Dr. Smith - Dermatologist\",\n    unavailableTimes: [\"12:30\", \"16:00\"]\n  }, {\n    name: \"Dr. Sam - Neurologist\",\n    unavailableTimes: [\"09:00\", \"14:00\"]\n  }, {\n    name: \"Dr. Johnson - Orthopedic\",\n    unavailableTimes: [\"11:00\", \"17:30\"]\n  }];\n\n  // function getDate(daysAgo) {\n  //   let date = new Date();\n  //   date.setDate(date.getDate() + daysAgo);  \n  //   return date.toLocaleDateString();\n  // }\n\n  useEffect(() => {\n    // const fetchGraphData = async () => {\n    //   try {\n    //     const patientRes = await getPatientId(userId);\n    //     const patientId = patientRes.data;\n\n    //     const allGraphRes = await getALLGraphData();\n    //     const allGraphData = allGraphRes.data;\n    //     console.log(allGraphData);\n\n    //     // const filteredData = allGraphData.filter(data => data.patient.patient_id === patientId);\n    //     const filteredData = allGraphData\n    //     .filter(data => data.patient.patient_id === patientId)\n    //     .map(data => ({\n    //       date: data.dataDate,\n    //       beforeEating: data.beforeEating,\n    //       afterEating: data.afterEating\n    //     }));\n    //     console.log(\"value\",filteredData);\n    //     setSugarData(filteredData);\n    //   } catch (error) {\n    //     console.error(\"Error fetching graph data:\", error);\n    //   }\n    // };\n\n    fetchGraphData();\n  });\n  const fetchGraphData = async () => {\n    const patient = await getPatientId(userId);\n    const patientId = patient.data;\n    const res = await getALLGraphData(); // Or filter it here if needed\n    const filteredData = res.data.filter(item => item.patient.patient_id === patientId);\n    const simplified = filteredData.map(item => ({\n      date: item.dataDate,\n      beforeEating: item.beforeEating,\n      afterEating: item.afterEating\n    }));\n    setSugarData(simplified);\n  };\n  const handleChange = e => {\n    setSelectedDoctor(e.target.value);\n  };\n  const handleBookAppointment = async () => {\n    if (selectedDoctor && appointmentDate && appointmentTime) {\n      const newAppointment = {\n        doctorName: selectedDoctor,\n        appointmentDate: appointmentDate,\n        appointmentTime: appointmentTime\n      };\n      const patient = await getPatientId(userId);\n      const patientId = patient.data;\n      console.log(\"PatientId :\", patientId);\n      try {\n        await addAppointment(patientId, newAppointment);\n        setAppointments([...appointments, newAppointment]);\n        setSelectedDoctor(\"\");\n        setAppointmentDate(\"\");\n        setAppointmentTime(\"\");\n        Swal.fire(\"Appointment Booked!\", `Appointment for ${selectedDoctor} on ${appointmentDate} at ${appointmentTime} Booked Successfully!`, \"success\");\n      } catch (error) {\n        Swal.fire(\"Error\", \"Failed to book appointment.\", \"error\");\n      }\n    }\n  };\n  const handleCancelAppointment = index => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you want to cancel this appointment?\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: '#dc3545',\n      cancelButtonColor: '#6c757d',\n      confirmButtonText: 'Yes, cancel it!'\n    }).then(result => {\n      if (result.isConfirmed) {\n        const updatedAppointments = appointments.filter((_, i) => i !== index);\n        setAppointments(updatedAppointments);\n        Swal.fire(\"Cancelled!\", \"The appointment has been cancelled.\", \"success\");\n      }\n    });\n  };\n  const getUnavailableTimes = () => {\n    const doctor = doctors.find(doc => doc.name === selectedDoctor);\n    return doctor ? doctor.unavailableTimes : [];\n  };\n  const handleAddSugarData = async () => {\n    // const now = new Date();\n    // const hours = now.getHours();\n\n    const patient = await getPatientId(userId);\n    const patientId = patient.data;\n    console.log(\"PatientId :\", patientId);\n\n    // if (hours < 6 || hours >= 8) {\n    //   Swal.fire(\"Error\", \"Sugar level data can only be uploaded between 6 AM and 8 AM.\", \"error\");\n    //   return;\n    // }\n\n    if (beforeEating && afterEating) {\n      const newData = {\n        beforeEating: parseInt(beforeEating),\n        afterEating: parseInt(afterEating)\n      };\n      try {\n        await addData(patientId, newData);\n        setSugarData([...sugarData, newData]);\n        setBeforeEating(\"\");\n        setAfterEating(\"\");\n        await fetchGraphData();\n        Swal.fire(\"Valued Added!\", \"Sugar level Data Updated.\", \"success\");\n      } catch (error) {\n        Swal.fire(\"Error\", \"Failed to upload data.\", \"error\");\n      }\n    }\n  };\n\n  // const generateChartData = () => {\n  //   let dates = [];\n  //   let today = new Date();\n  //   for (let i = 0; i < (selectedRange === \"week\" ? 7 : 30); i++) {\n  //     let date = new Date(today);\n  //     date.setDate(today.getDate() - i);\n  //     dates.push(date.toLocaleDateString());\n  //   }\n\n  //   return dates\n  //     .map((date) => {\n  //       let entry = sugarData.find((data) => data.time === date);\n  //       return entry\n  //         ? entry\n  //         : { time: date, beforeEating: null, afterEating: null };\n  //     })\n  //     .reverse();\n  // };\n  const generateChartData = () => {\n    let dates = [];\n    let today = new Date();\n    for (let i = 0; i < (selectedRange === \"week\" ? 7 : 30); i++) {\n      let date = new Date(today);\n      date.setDate(today.getDate() - i);\n      dates.push(date.toISOString().split(\"T\")[0]);\n    }\n    return dates.map(date => {\n      let entry = sugarData.find(data => data.date === date);\n      return entry ? {\n        ...entry,\n        time: date\n      } : {\n        time: date,\n        beforeEating: null,\n        afterEating: null\n      };\n    }).reverse();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"dashboardsection\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-start\",\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-start mt-3\",\n          children: [\"Welcome, \", userName, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Track Your Sugar Levels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"border border-3 border-success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row g-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-floating\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  className: \"form-control\",\n                  id: \"beforeEating\",\n                  name: \"beforeEating\",\n                  autoComplete: \"off\",\n                  required: true,\n                  placeholder: \"Before Eating\",\n                  value: beforeEating,\n                  onChange: e => setBeforeEating(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"beforeEating\",\n                  children: \"Sugar Level (Before Eating)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-floating\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  className: \"form-control\",\n                  id: \"afterEating\",\n                  name: \"afterEating\",\n                  autoComplete: \"off\",\n                  required: true,\n                  placeholder: \"After Eating\",\n                  value: afterEating,\n                  onChange: e => setAfterEating(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"afterEating\",\n                  children: \"Sugar Level (After Eating)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4 d-flex align-items-center\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-success w-100\",\n                onClick: handleAddSugarData,\n                disabled: !beforeEating || !afterEating,\n                children: \"Add Data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Sugar Level Graph\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"border border-3 border-success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `btn ${selectedRange === \"week\" ? \"btn-success\" : \"btn-outline-success\"} me-2`,\n              onClick: () => setSelectedRange(\"week\"),\n              children: \"Weekly View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `btn ${selectedRange === \"month\" ? \"btn-success\" : \"btn-outline-success\"}`,\n              onClick: () => setSelectedRange(\"month\"),\n              children: \"Monthly View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-5\",\n          children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 300,\n            children: /*#__PURE__*/_jsxDEV(LineChart, {\n              data: generateChartData(),\n              children: [/*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"beforeEating\",\n                stroke: \"#8884d8\",\n                strokeWidth: 3,\n                dot: {\n                  r: 5\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"afterEating\",\n                stroke: \"#82ca9d\",\n                strokeWidth: 3,\n                dot: {\n                  r: 5\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 14\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Book an Appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"border border-3 border-success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row g-3 mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-floating\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-control\",\n                id: \"floatingDoctor\",\n                value: selectedDoctor,\n                onChange: handleChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select a Doctor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 23\n                }, this), doctors.map((doctor, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: doctor.name,\n                  children: doctor.name\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"floatingDoctor\",\n                children: \"Choose a Doctor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-floating\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                className: \"form-control\",\n                id: \"floatingDate\",\n                value: appointmentDate,\n                onChange: e => setAppointmentDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"floatingDate\",\n                children: \"Select Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-floating\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                className: \"form-control\",\n                id: \"floatingTime\",\n                value: appointmentTime,\n                onChange: e => setAppointmentTime(e.target.value),\n                disabled: !selectedDoctor\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"floatingTime\",\n                children: \"Select Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 19\n            }, this), selectedDoctor && getUnavailableTimes().includes(appointmentTime) && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-danger mt-2\",\n              children: \" This time slot is unavailable!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12 d-flex justify-content-end\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success appointment-btn\",\n              onClick: handleBookAppointment,\n              disabled: !selectedDoctor || !appointmentDate || !appointmentTime || getUnavailableTimes().includes(appointmentTime),\n              children: \"Book Appointment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"My Appointments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"border border-3 border-success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 15\n        }, this), appointments.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-muted\",\n          children: \"No active appointments.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group\",\n          children: appointments.map((appointment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item d-flex justify-content-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [appointment.appointmentDate, \" -  \", appointment.appointmentTime, \" - \", appointment.doctorName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger btn-sm\",\n              onClick: () => handleCancelAppointment(index),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"XXZ0Sgig/ecFUVuaGRZyO7+Et0A=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Header","Footer","LineChart","Line","XAxis","YAxis","Tooltip","Legend","ResponsiveContainer","Swal","addAppointment","addData","getALLGraphData","getPatientId","jsxDEV","_jsxDEV","Dashboard","_s","sugarData","setSugarData","beforeEating","setBeforeEating","afterEating","setAfterEating","selectedRange","setSelectedRange","selectedDoctor","setSelectedDoctor","appointmentDate","setAppointmentDate","appointmentTime","setAppointmentTime","appointments","setAppointments","user","JSON","parse","localStorage","getItem","userId","user_id","userName","name","console","log","doctors","unavailableTimes","fetchGraphData","patient","patientId","data","res","filteredData","filter","item","patient_id","simplified","map","date","dataDate","handleChange","e","target","value","handleBookAppointment","newAppointment","doctorName","fire","error","handleCancelAppointment","index","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","updatedAppointments","_","i","getUnavailableTimes","doctor","find","doc","handleAddSugarData","newData","parseInt","generateChartData","dates","today","Date","setDate","getDate","push","toISOString","split","entry","time","reverse","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","autoComplete","required","placeholder","onChange","htmlFor","onClick","disabled","width","height","dataKey","stroke","strokeWidth","dot","r","includes","length","appointment","_c","$RefreshReg$"],"sources":["D:/Kumaran project/medilocker/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\r\nimport Swal from \"sweetalert2\";\r\nimport { addAppointment } from \"../api/AppointmentService\";\r\nimport { addData, getALLGraphData } from \"../api/GraphService\";\r\nimport { getPatientId } from \"../api/PatientService\";\r\n// import { getAllDoctors } from \"../api/DoctorService\";\r\n\r\nconst Dashboard = () => {\r\n  const [sugarData, setSugarData] = useState([]);\r\n  const [beforeEating, setBeforeEating] = useState(\"\");\r\n  const [afterEating, setAfterEating] = useState(\"\");\r\n  const [selectedRange, setSelectedRange] = useState(\"week\");\r\n\r\n  const [selectedDoctor, setSelectedDoctor] = useState(\"\");\r\n  const [appointmentDate, setAppointmentDate] = useState(\"\");\r\n  const [appointmentTime, setAppointmentTime] = useState(\"\");\r\n  const [appointments, setAppointments] = useState([]);\r\n\r\n  const user = JSON.parse(localStorage.getItem(\"users\"));\r\n  const userId = user.user_id;\r\n  const userName = user.name;\r\n  console.log(\"Logged-in user:\", user);\r\n  \r\n\r\n  const doctors = [\r\n    { name: \"Dr. John - Cardiologist\", unavailableTimes: [\"10:00\", \"15:00\"] },\r\n    { name: \"Dr. Smith - Dermatologist\", unavailableTimes: [\"12:30\", \"16:00\"] },\r\n    { name: \"Dr. Sam - Neurologist\", unavailableTimes: [\"09:00\", \"14:00\"] },\r\n    { name: \"Dr. Johnson - Orthopedic\", unavailableTimes: [\"11:00\", \"17:30\"] },\r\n  ];\r\n\r\n  // function getDate(daysAgo) {\r\n  //   let date = new Date();\r\n  //   date.setDate(date.getDate() + daysAgo);  \r\n  //   return date.toLocaleDateString();\r\n  // }\r\n    \r\n  useEffect(() => {\r\n    // const fetchGraphData = async () => {\r\n    //   try {\r\n    //     const patientRes = await getPatientId(userId);\r\n    //     const patientId = patientRes.data;\r\n  \r\n    //     const allGraphRes = await getALLGraphData();\r\n    //     const allGraphData = allGraphRes.data;\r\n    //     console.log(allGraphData);\r\n\r\n    //     // const filteredData = allGraphData.filter(data => data.patient.patient_id === patientId);\r\n    //     const filteredData = allGraphData\r\n    //     .filter(data => data.patient.patient_id === patientId)\r\n    //     .map(data => ({\r\n    //       date: data.dataDate,\r\n    //       beforeEating: data.beforeEating,\r\n    //       afterEating: data.afterEating\r\n    //     }));\r\n    //     console.log(\"value\",filteredData);\r\n    //     setSugarData(filteredData);\r\n    //   } catch (error) {\r\n    //     console.error(\"Error fetching graph data:\", error);\r\n    //   }\r\n    // };\r\n  \r\n    fetchGraphData();\r\n  }, );\r\n\r\n  const fetchGraphData = async () => {\r\n    const patient = await getPatientId(userId);\r\n    const patientId = patient.data;\r\n    const res = await getALLGraphData(); // Or filter it here if needed\r\n    const filteredData = res.data.filter(item => item.patient.patient_id === patientId);\r\n    \r\n    const simplified = filteredData.map(item => ({\r\n      date: item.dataDate,\r\n      beforeEating: item.beforeEating,\r\n      afterEating: item.afterEating,\r\n    }));\r\n  \r\n    setSugarData(simplified);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setSelectedDoctor(e.target.value);\r\n  };\r\n\r\n  const handleBookAppointment = async() => {\r\n    if (selectedDoctor && appointmentDate && appointmentTime) {\r\n      const newAppointment = {\r\n        doctorName: selectedDoctor,\r\n        appointmentDate: appointmentDate,\r\n        appointmentTime: appointmentTime,\r\n      };\r\n      \r\n      const patient = await getPatientId(userId);\r\n      const patientId = patient.data;\r\n      console.log(\"PatientId :\",patientId);\r\n\r\n      try {\r\n        await addAppointment(patientId, newAppointment); \r\n        setAppointments([...appointments, newAppointment]);\r\n        setSelectedDoctor(\"\");\r\n        setAppointmentDate(\"\");\r\n        setAppointmentTime(\"\");\r\n        Swal.fire(\"Appointment Booked!\", `Appointment for ${selectedDoctor} on ${appointmentDate} at ${appointmentTime} Booked Successfully!`, \"success\");\r\n      } catch (error) {\r\n        Swal.fire(\"Error\", \"Failed to book appointment.\", \"error\");\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  const handleCancelAppointment = (index) => {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"Do you want to cancel this appointment?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#dc3545',\r\n      cancelButtonColor: '#6c757d', \r\n      confirmButtonText: 'Yes, cancel it!',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        const updatedAppointments = appointments.filter((_, i) => i !== index);\r\n        setAppointments(updatedAppointments);\r\n        Swal.fire(\"Cancelled!\",\"The appointment has been cancelled.\",\"success\");\r\n      }\r\n    });\r\n  };\r\n  \r\n  const getUnavailableTimes = () => {\r\n    const doctor = doctors.find((doc) => doc.name === selectedDoctor);\r\n    return doctor ? doctor.unavailableTimes : [];\r\n  };\r\n\r\n  const handleAddSugarData = async() => {\r\n    // const now = new Date();\r\n    // const hours = now.getHours();\r\n\r\n    const patient = await getPatientId(userId);\r\n    const patientId = patient.data;\r\n    console.log(\"PatientId :\",patientId);\r\n    \r\n    // if (hours < 6 || hours >= 8) {\r\n    //   Swal.fire(\"Error\", \"Sugar level data can only be uploaded between 6 AM and 8 AM.\", \"error\");\r\n    //   return;\r\n    // }\r\n\r\n    if (beforeEating && afterEating) {\r\n      const newData = {\r\n        beforeEating: parseInt(beforeEating),\r\n        afterEating: parseInt(afterEating)\r\n      };\r\n      try {\r\n        await addData(patientId, newData);\r\n        setSugarData([...sugarData, newData]);\r\n        setBeforeEating(\"\");\r\n        setAfterEating(\"\");\r\n        await fetchGraphData();\r\n        Swal.fire(\"Valued Added!\", \"Sugar level Data Updated.\", \"success\");\r\n      } catch (error) {\r\n        Swal.fire(\"Error\", \"Failed to upload data.\", \"error\");\r\n      }\r\n    }\r\n  };\r\n\r\n  // const generateChartData = () => {\r\n  //   let dates = [];\r\n  //   let today = new Date();\r\n  //   for (let i = 0; i < (selectedRange === \"week\" ? 7 : 30); i++) {\r\n  //     let date = new Date(today);\r\n  //     date.setDate(today.getDate() - i);\r\n  //     dates.push(date.toLocaleDateString());\r\n  //   }\r\n\r\n  //   return dates\r\n  //     .map((date) => {\r\n  //       let entry = sugarData.find((data) => data.time === date);\r\n  //       return entry\r\n  //         ? entry\r\n  //         : { time: date, beforeEating: null, afterEating: null };\r\n  //     })\r\n  //     .reverse();\r\n  // };\r\n  const generateChartData = () => {\r\n    let dates = [];\r\n    let today = new Date();\r\n  \r\n    for (let i = 0; i < (selectedRange === \"week\" ? 7 : 30); i++) {\r\n      let date = new Date(today);\r\n      date.setDate(today.getDate() - i);\r\n      dates.push(date.toISOString().split(\"T\")[0]);\r\n    }\r\n  \r\n    return dates\r\n      .map((date) => {\r\n        let entry = sugarData.find((data) => data.date === date); \r\n        return entry\r\n          ? { ...entry, time: date }\r\n          : { time: date, beforeEating: null, afterEating: null };\r\n      })\r\n      .reverse();\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <Header />\r\n      <section className=\"dashboardsection\">\r\n        <div className=\"container mt-4\">\r\n          <h2 className=\"text-start\">Dashboard</h2>\r\n          <h3 className=\"text-start mt-3\">Welcome, {userName}!</h3>\r\n\r\n          <div className=\"mt-5\">\r\n            <h4>Track Your Sugar Levels</h4>\r\n            <hr className=\"border border-3 border-success\" />\r\n            <div className=\"row g-3\">\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-floating\">\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    id=\"beforeEating\"\r\n                    name=\"beforeEating\"\r\n                    autoComplete=\"off\"\r\n                    required\r\n                    placeholder=\"Before Eating\"\r\n                    value={beforeEating}\r\n                    onChange={(e) => setBeforeEating(e.target.value)}\r\n                  />\r\n                  <label htmlFor=\"beforeEating\">Sugar Level (Before Eating)</label>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-floating\">\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    id=\"afterEating\"\r\n                    name=\"afterEating\"\r\n                    autoComplete=\"off\"\r\n                    required\r\n                    placeholder=\"After Eating\"\r\n                    value={afterEating}\r\n                    onChange={(e) => setAfterEating(e.target.value)}\r\n                  />\r\n                  <label htmlFor=\"afterEating\">Sugar Level (After Eating)</label>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4 d-flex align-items-center\">\r\n                <button\r\n                  className=\"btn btn-success w-100\"\r\n                  onClick={handleAddSugarData}\r\n                  disabled={!beforeEating || !afterEating}\r\n                >\r\n                  Add Data\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* graph */}\r\n          <div className=\"mt-5\">\r\n            <h4>Sugar Level Graph</h4>\r\n            <hr className=\"border border-3 border-success\" />\r\n            <div className=\"d-flex\">\r\n              <button\r\n                className={`btn ${selectedRange === \"week\" ? \"btn-success\" : \"btn-outline-success\"} me-2`}\r\n                onClick={() => setSelectedRange(\"week\")}\r\n              >\r\n                Weekly View\r\n              </button>\r\n              <button\r\n                className={`btn ${selectedRange === \"month\" ? \"btn-success\" : \"btn-outline-success\"}`}\r\n                onClick={() => setSelectedRange(\"month\")}\r\n              >\r\n                Monthly View\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mt-5\">\r\n            <ResponsiveContainer width=\"100%\" height={300}>\r\n             <LineChart data={generateChartData()}>\r\n                 <XAxis dataKey=\"time\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />               \r\n                <Line type=\"monotone\" dataKey=\"beforeEating\" stroke=\"#8884d8\" strokeWidth={3} dot={{ r: 5 }} />\r\n                <Line type=\"monotone\" dataKey=\"afterEating\" stroke=\"#82ca9d\" strokeWidth={3} dot={{ r: 5 }} />\r\n              </LineChart>  \r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n\r\n        {/* book appointment */}\r\n        <div className=\"mt-5\">\r\n               <h4>Book an Appointment</h4>\r\n               <hr className=\"border border-3 border-success\" />\r\n               <div className=\"row g-3 mt-2\">\r\n                 <div className=\"col-md-4\">\r\n                     <div className=\"form-floating\">\r\n                     <select\r\n                      className=\"form-control\"\r\n                      id=\"floatingDoctor\"\r\n                      value={selectedDoctor}\r\n                      onChange={handleChange}>\r\n                      <option value=\"\">Select a Doctor</option>\r\n                      {doctors.map((doctor, index) => (\r\n                        <option key={index} value={doctor.name}>\r\n                          {doctor.name}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    <label htmlFor=\"floatingDoctor\">Choose a Doctor</label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-floating\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control\"\r\n                      id=\"floatingDate\"\r\n                      value={appointmentDate}\r\n                      onChange={(e) => setAppointmentDate(e.target.value)}\r\n                    />\r\n                    <label htmlFor=\"floatingDate\">Select Date</label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-floating\">\r\n                    <input\r\n                      type=\"time\"\r\n                      className=\"form-control\"\r\n                      id=\"floatingTime\"\r\n                      value={appointmentTime}\r\n                      onChange={(e) => setAppointmentTime(e.target.value)}\r\n                      disabled={!selectedDoctor}\r\n                    />\r\n                    <label htmlFor=\"floatingTime\">Select Time</label>\r\n                  </div>\r\n                  {selectedDoctor && getUnavailableTimes().includes(appointmentTime) && (\r\n                    <p className=\"text-danger mt-2\"> This time slot is unavailable!</p>\r\n                  )}\r\n                </div>\r\n                <div className=\"col-md-12 d-flex justify-content-end\">\r\n                  <button\r\n                    className=\"btn btn-success appointment-btn\"\r\n                    onClick={handleBookAppointment}\r\n                    disabled={\r\n                      !selectedDoctor ||\r\n                      !appointmentDate ||\r\n                      !appointmentTime ||\r\n                      getUnavailableTimes().includes(appointmentTime)\r\n                    }>\r\n                    Book Appointment\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* my appointments */}\r\n            <div className=\"mt-5\">\r\n              <h4>My Appointments</h4>\r\n              <hr className=\"border border-3 border-success\" />\r\n              {appointments.length === 0 ? (\r\n                <p className=\"text-muted\">No active appointments.</p>\r\n              ) : (\r\n                <ul className=\"list-group\">\r\n                  {appointments.map((appointment, index) => (\r\n                    <li key={index} className=\"list-group-item d-flex justify-content-between\">\r\n                      <span>\r\n                        {appointment.appointmentDate} -  {appointment.appointmentTime} - {appointment.doctorName}\r\n                      </span>\r\n                      <button\r\n                        className=\"btn btn-danger btn-sm\"\r\n                        onClick={() => handleCancelAppointment(index)}>\r\n                        Cancel\r\n                      </button>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              )}\r\n            </div>\r\n      </section>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}