{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import Header from\"../components/Header\";import Footer from\"../components/Footer\";import{LineChart,Line,XAxis,YAxis,Tooltip,Legend,ResponsiveContainer}from\"recharts\";import Swal from\"sweetalert2\";import{addAppointment,getAllAppointments,deleteAppointment}from\"../api/AppointmentService\";import{addData,getALLGraphData}from\"../api/GraphService\";import{getPatientId}from\"../api/PatientService\";import{getAllDoctors}from\"../api/DoctorService\";import{getAllScheduleTimes}from\"../api/ScheduleService\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=()=>{const[sugarData,setSugarData]=useState([]);const[beforeEating,setBeforeEating]=useState(\"\");const[afterEating,setAfterEating]=useState(\"\");const[selectedRange,setSelectedRange]=useState(\"week\");const[doctors,setDoctors]=useState([]);const[selectedDoctor,setSelectedDoctor]=useState(\"\");const[appointmentDate,setAppointmentDate]=useState(\"\");const[appointmentTime,setAppointmentTime]=useState(\"\");const[appointments,setAppointments]=useState([]);const[availableTimeSlots,setAvailableTimeSlots]=useState([]);const user=JSON.parse(localStorage.getItem(\"users\"));const userId=user.user_id;const userName=user.name;console.log(\"Logged-in user:\",user);const handleChange=e=>{setSelectedDoctor(e.target.value);};const handleBookAppointment=async()=>{if(selectedDoctor&&appointmentDate&&appointmentTime){const newAppointment={doctorName:selectedDoctor,appointmentDate:appointmentDate,appointmentTime:appointmentTime};const patient=await getPatientId(userId);const patientId=patient.data;console.log(\"PatientId :\",patientId);try{await addAppointment(patientId,newAppointment);setAppointments([...appointments,newAppointment]);setSelectedDoctor(\"\");setAppointmentDate(\"\");setAppointmentTime(\"\");Swal.fire(\"Appointment Booked!\",`Appointment for ${selectedDoctor} on ${appointmentDate} at ${appointmentTime} Booked Successfully!`,\"success\");}catch(error){Swal.fire(\"Error\",\"Failed to book appointment.\",\"error\");}}};const handleCancelAppointment=async index=>{const appointmentToCancel=appointments[index];Swal.fire({title:\"Are you sure?\",text:\"Do you want to cancel this appointment?\",icon:\"warning\",showCancelButton:true,confirmButtonColor:'#dc3545',cancelButtonColor:'#6c757d',confirmButtonText:'Yes, cancel it!'}).then(async result=>{if(result.isConfirmed){try{const id=appointmentToCancel.appointment_id;console.log(\"appointment_id:\",id);await deleteAppointment(id);const updatedAppointments=appointments.filter((_,i)=>i!==index);setAppointments(updatedAppointments);Swal.fire(\"Cancelled!\",\"The appointment has been cancelled.\",\"success\");}catch(error){Swal.fire(\"Error\",\"Failed to cancel appointment in backend.\",\"error\");}}});};const scheduleTime=async selectedDoctorName=>{try{const response=await getAllScheduleTimes();const allSchedules=response.data;const doctorAvailableTimes=allSchedules.filter(schedule=>schedule.doctorName===selectedDoctorName);const availableSlots=doctorAvailableTimes.map(schedule=>({date:schedule.scheduleDate,from:schedule.fromTime,to:schedule.toTime}));return availableSlots;}catch(error){console.error(\"Failed to fetch schedule times:\",error);return[];}};const handleAddSugarData=async()=>{const now=new Date();const hours=now.getHours();const patient=await getPatientId(userId);const patientId=patient.data;console.log(\"PatientId :\",patientId);if(hours<6||hours>=8){Swal.fire(\"Error\",\"Sugar level data can only be uploaded between 6 AM and 8 AM.\",\"error\");return;}if(beforeEating&&afterEating){const newData={beforeEating:parseInt(beforeEating),afterEating:parseInt(afterEating)};try{await addData(patientId,newData);setSugarData([...sugarData,newData]);setBeforeEating(\"\");setAfterEating(\"\");// await fetchGraphData();\nSwal.fire(\"Valued Added!\",\"Sugar level Data Updated.\",\"success\");}catch(error){Swal.fire(\"Error\",\"Failed to upload data.\",\"error\");}}};const generateChartData=()=>{let dates=[];let today=new Date();for(let i=0;i<(selectedRange===\"week\"?7:30);i++){let date=new Date(today);date.setDate(today.getDate()-i);dates.push(date.toISOString().split(\"T\")[0]);}return dates.map(date=>{let entry=sugarData.find(data=>data.date===date);return entry?{...entry,time:date}:{time:date,beforeEating:null,afterEating:null};}).reverse();};useEffect(()=>{const fetchGraphData=async()=>{try{const patient=await getPatientId(userId);const patientId=patient.data;const res=await getALLGraphData();const filteredData=res.data.filter(item=>item.patient.patient_id===patientId);const simplified=filteredData.map(item=>({date:item.dataDate,beforeEating:item.beforeEating,afterEating:item.afterEating}));setSugarData(simplified);console.log(\"sugar data:\",simplified);}catch(error){console.log(\"error fetching sugar data\",error);}};const fetchAppointments=async()=>{try{const patient=await getPatientId(userId);const patientId=patient.data;const response=await getAllAppointments();const filtered=response.data.filter(item=>item.patient.patient_id===patientId);setAppointments(filtered);console.log(\"Appointments :\",filtered);}catch(error){console.log(\"Error fetching appointments\",error);}};const fetchDoctors=async()=>{try{const res=await getAllDoctors();setDoctors(res.data);console.log(\"doctors :\",res.data);}catch(error){console.error(\"Failed to fetch doctors\",error);}};const loadScheduleTimes=async()=>{if(selectedDoctor){const slots=await scheduleTime(selectedDoctor);setAvailableTimeSlots(slots);}else{setAvailableTimeSlots([]);}};const isTimeAvailable=()=>{if(!appointmentTime||!appointmentDate||availableTimeSlots.length===0)return false;return availableTimeSlots.some(slot=>{return slot.date===appointmentDate&&appointmentTime>=slot.from&&appointmentTime<=slot.to;});};fetchGraphData();fetchDoctors();fetchAppointments();loadScheduleTimes();if(selectedDoctor&&appointmentTime&&appointmentDate&&!isTimeAvailable()){Swal.fire(\"Unavailable Time Slot\",\"The selected time is not available for this doctor. Please choose a different time.\",\"error\");}},[appointmentDate,appointmentTime,selectedDoctor,availableTimeSlots,userId]);return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"section\",{className:\"dashboardsection\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"container mt-4\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-start\",children:\"Dashboard\"}),/*#__PURE__*/_jsxs(\"h3\",{className:\"text-start mt-3\",children:[\"Welcome, \",userName,\"!\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-5\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Track Your Sugar Levels\"}),/*#__PURE__*/_jsx(\"hr\",{className:\"border border-3 border-success\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"row g-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-floating\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",className:\"form-control\",id:\"beforeEating\",name:\"beforeEating\",autoComplete:\"off\",required:true,placeholder:\"Before Eating\",value:beforeEating,onChange:e=>setBeforeEating(e.target.value)}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"beforeEating\",children:\"Sugar Level (Before Eating)\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-floating\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",className:\"form-control\",id:\"afterEating\",name:\"afterEating\",autoComplete:\"off\",required:true,placeholder:\"After Eating\",value:afterEating,onChange:e=>setAfterEating(e.target.value)}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"afterEating\",children:\"Sugar Level (After Eating)\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4 d-flex align-items-center\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn button btn-success w-100\",onClick:handleAddSugarData,disabled:!beforeEating||!afterEating,children:\"Add Data\"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-5\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Sugar Level Graph\"}),/*#__PURE__*/_jsx(\"hr\",{className:\"border border-3 border-success\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex\",children:[/*#__PURE__*/_jsx(\"button\",{className:`btn button ${selectedRange===\"week\"?\"btn-success\":\"btn-outline-success\"} me-2`,onClick:()=>setSelectedRange(\"week\"),children:\"Weekly View\"}),/*#__PURE__*/_jsx(\"button\",{className:`btn button ${selectedRange===\"month\"?\"btn-success\":\"btn-outline-success\"}`,onClick:()=>setSelectedRange(\"month\"),children:\"Monthly View\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-5\",children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(LineChart,{data:generateChartData(),children:[/*#__PURE__*/_jsx(XAxis,{dataKey:\"time\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"beforeEating\",stroke:\"#8884d8\",strokeWidth:3,dot:{r:5}}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"afterEating\",stroke:\"#82ca9d\",strokeWidth:3,dot:{r:5}})]})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-5\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Book an Appointment\"}),/*#__PURE__*/_jsx(\"hr\",{className:\"border border-3 border-success\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"row g-3 mt-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-floating\",children:[/*#__PURE__*/_jsxs(\"select\",{className:\"form-control\",id:\"floatingDoctor\",value:selectedDoctor,onChange:handleChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a Doctor\"}),doctors.map((doctor,index)=>/*#__PURE__*/_jsxs(\"option\",{value:doctor.doctorName,children:[doctor.doctorName,\" - \",doctor.specialization]},index))]}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"floatingDoctor\",children:\"Choose a Doctor\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-floating\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"date\",className:\"form-control\",id:\"floatingDate\",value:appointmentDate,onChange:e=>setAppointmentDate(e.target.value)}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"floatingDate\",children:\"Select Date\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-floating\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"time\",className:\"form-control\",id:\"floatingTime\",value:appointmentTime,onChange:e=>setAppointmentTime(e.target.value),disabled:!selectedDoctor}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"floatingTime\",children:\"Select Time\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12 d-flex justify-content-end\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-success appointment-btn\",onClick:handleBookAppointment,disabled:!selectedDoctor||!appointmentDate||!appointmentTime// !isTimeAvailable()\n,children:\"Book Appointment\"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-5\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"My Appointments\"}),/*#__PURE__*/_jsx(\"hr\",{className:\"border border-3 border-success\"}),appointments.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"text-muted\",children:\"No active appointments.\"}):/*#__PURE__*/_jsx(\"ul\",{className:\"list-group\",children:appointments.map((appointment,index)=>/*#__PURE__*/_jsxs(\"li\",{className:\"list-group-item d-flex justify-content-between\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[appointment.appointmentDate,\" -  \",appointment.appointmentTime,\" - \",appointment.doctorName]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger btn-sm\",onClick:()=>handleCancelAppointment(index),children:\"Cancel\"})]},index))})]})]}),/*#__PURE__*/_jsx(Footer,{})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","Header","Footer","LineChart","Line","XAxis","YAxis","Tooltip","Legend","ResponsiveContainer","Swal","addAppointment","getAllAppointments","deleteAppointment","addData","getALLGraphData","getPatientId","getAllDoctors","getAllScheduleTimes","jsx","_jsx","jsxs","_jsxs","Dashboard","sugarData","setSugarData","beforeEating","setBeforeEating","afterEating","setAfterEating","selectedRange","setSelectedRange","doctors","setDoctors","selectedDoctor","setSelectedDoctor","appointmentDate","setAppointmentDate","appointmentTime","setAppointmentTime","appointments","setAppointments","availableTimeSlots","setAvailableTimeSlots","user","JSON","parse","localStorage","getItem","userId","user_id","userName","name","console","log","handleChange","e","target","value","handleBookAppointment","newAppointment","doctorName","patient","patientId","data","fire","error","handleCancelAppointment","index","appointmentToCancel","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","id","appointment_id","updatedAppointments","filter","_","i","scheduleTime","selectedDoctorName","response","allSchedules","doctorAvailableTimes","schedule","availableSlots","map","date","scheduleDate","from","fromTime","to","toTime","handleAddSugarData","now","Date","hours","getHours","newData","parseInt","generateChartData","dates","today","setDate","getDate","push","toISOString","split","entry","find","time","reverse","fetchGraphData","res","filteredData","item","patient_id","simplified","dataDate","fetchAppointments","filtered","fetchDoctors","loadScheduleTimes","slots","isTimeAvailable","length","some","slot","className","children","type","autoComplete","required","placeholder","onChange","htmlFor","onClick","disabled","width","height","dataKey","stroke","strokeWidth","dot","r","doctor","specialization","appointment"],"sources":["D:/Kumaran project/medilocker/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useState , useEffect } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\r\nimport Swal from \"sweetalert2\";\r\nimport { addAppointment, getAllAppointments, deleteAppointment } from \"../api/AppointmentService\";\r\nimport { addData, getALLGraphData } from \"../api/GraphService\";\r\nimport { getPatientId } from \"../api/PatientService\";\r\nimport { getAllDoctors } from \"../api/DoctorService\";\r\nimport { getAllScheduleTimes } from \"../api/ScheduleService\";\r\n\r\nconst Dashboard = () => {\r\n  const [sugarData, setSugarData] = useState([]);\r\n  const [beforeEating, setBeforeEating] = useState(\"\");\r\n  const [afterEating, setAfterEating] = useState(\"\");\r\n  const [selectedRange, setSelectedRange] = useState(\"week\");\r\n\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [selectedDoctor, setSelectedDoctor] = useState(\"\");\r\n\r\n  const [appointmentDate, setAppointmentDate] = useState(\"\");\r\n  const [appointmentTime, setAppointmentTime] = useState(\"\");\r\n  const [appointments, setAppointments] = useState([]);\r\n\r\n  const [availableTimeSlots, setAvailableTimeSlots] = useState([]);\r\n\r\n  const user = JSON.parse(localStorage.getItem(\"users\"));\r\n  const userId = user.user_id;\r\n  const userName = user.name;\r\n  console.log(\"Logged-in user:\", user);\r\n\r\n\r\n  const handleChange = (e) => {\r\n    setSelectedDoctor(e.target.value);\r\n  };\r\n\r\n  const handleBookAppointment = async() => {\r\n    if (selectedDoctor && appointmentDate && appointmentTime) {\r\n      const newAppointment = {\r\n        doctorName: selectedDoctor,\r\n        appointmentDate: appointmentDate,\r\n        appointmentTime: appointmentTime,\r\n      };\r\n      \r\n      const patient = await getPatientId(userId);\r\n      const patientId = patient.data;\r\n      console.log(\"PatientId :\",patientId);\r\n\r\n      try {\r\n        await addAppointment(patientId, newAppointment); \r\n        setAppointments([...appointments, newAppointment]);\r\n        setSelectedDoctor(\"\");\r\n        setAppointmentDate(\"\");\r\n        setAppointmentTime(\"\");\r\n        Swal.fire(\"Appointment Booked!\", `Appointment for ${selectedDoctor} on ${appointmentDate} at ${appointmentTime} Booked Successfully!`, \"success\");\r\n      } catch (error) {\r\n        Swal.fire(\"Error\", \"Failed to book appointment.\", \"error\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCancelAppointment = async (index) => {\r\n    const appointmentToCancel = appointments[index];\r\n  \r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"Do you want to cancel this appointment?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#dc3545',\r\n      cancelButtonColor: '#6c757d',\r\n      confirmButtonText: 'Yes, cancel it!',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        try {\r\n          const id = appointmentToCancel.appointment_id;\r\n          console.log(\"appointment_id:\",id);\r\n          await deleteAppointment(id); \r\n          const updatedAppointments = appointments.filter((_, i) => i !== index);\r\n          setAppointments(updatedAppointments);\r\n          Swal.fire(\"Cancelled!\", \"The appointment has been cancelled.\", \"success\");\r\n        } catch (error) {\r\n          Swal.fire(\"Error\", \"Failed to cancel appointment in backend.\", \"error\");\r\n        }\r\n      }\r\n    });\r\n  };\r\n  \r\n  const scheduleTime = async (selectedDoctorName) => {\r\n    try {\r\n      const response = await getAllScheduleTimes();\r\n      const allSchedules = response.data;\r\n      const doctorAvailableTimes = allSchedules.filter(\r\n        (schedule) => schedule.doctorName === selectedDoctorName\r\n      );\r\n      const availableSlots = doctorAvailableTimes.map((schedule) => ({\r\n        date: schedule.scheduleDate,\r\n        from: schedule.fromTime,\r\n        to: schedule.toTime,\r\n      }));\r\n  \r\n      return availableSlots;\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch schedule times:\", error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const handleAddSugarData = async() => {\r\n    const now = new Date();\r\n    const hours = now.getHours();\r\n\r\n    const patient = await getPatientId(userId);\r\n    const patientId = patient.data;\r\n    console.log(\"PatientId :\",patientId);\r\n    \r\n    if (hours < 6 || hours >= 8) {\r\n      Swal.fire(\"Error\", \"Sugar level data can only be uploaded between 6 AM and 8 AM.\", \"error\");\r\n      return;\r\n    }\r\n\r\n    if (beforeEating && afterEating) {\r\n      const newData = {\r\n        beforeEating: parseInt(beforeEating),\r\n        afterEating: parseInt(afterEating)\r\n      };\r\n      try {\r\n        await addData(patientId, newData);\r\n        setSugarData([...sugarData, newData]);\r\n        setBeforeEating(\"\");\r\n        setAfterEating(\"\");\r\n        // await fetchGraphData();\r\n        Swal.fire(\"Valued Added!\", \"Sugar level Data Updated.\", \"success\");\r\n      } catch (error) {\r\n        Swal.fire(\"Error\", \"Failed to upload data.\", \"error\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const generateChartData = () => {\r\n    let dates = [];\r\n    let today = new Date();\r\n  \r\n    for (let i = 0; i < (selectedRange === \"week\" ? 7 : 30); i++) {\r\n      let date = new Date(today);\r\n      date.setDate(today.getDate() - i);\r\n      dates.push(date.toISOString().split(\"T\")[0]);\r\n    }\r\n  \r\n    return dates\r\n      .map((date) => {\r\n        let entry = sugarData.find((data) => data.date === date); \r\n        return entry\r\n          ? { ...entry, time: date }\r\n          : { time: date, beforeEating: null, afterEating: null };\r\n      })\r\n      .reverse();\r\n  };\r\n  useEffect(() => {  \r\n    const fetchGraphData = async () => {\r\n      try{\r\n      const patient = await getPatientId(userId);\r\n      const patientId = patient.data;\r\n  \r\n      const res = await getALLGraphData(); \r\n      const filteredData = res.data.filter(item => item.patient.patient_id === patientId);\r\n      \r\n      const simplified = filteredData.map(item => ({\r\n        date: item.dataDate,\r\n        beforeEating: item.beforeEating,\r\n        afterEating: item.afterEating,\r\n      }));\r\n    \r\n      setSugarData(simplified);\r\n      console.log(\"sugar data:\",simplified);\r\n      }catch(error){\r\n        console.log(\"error fetching sugar data\",error);\r\n      }\r\n    };\r\n  \r\n    const fetchAppointments = async () => {\r\n      try{\r\n        const patient = await getPatientId(userId);\r\n        const patientId = patient.data;\r\n  \r\n        const response = await getAllAppointments();\r\n        const filtered = response.data.filter(item => item.patient.patient_id === patientId);\r\n  \r\n        setAppointments(filtered);\r\n        console.log(\"Appointments :\" , filtered);\r\n      }catch(error){\r\n        console.log(\"Error fetching appointments\",error);\r\n      }\r\n    };\r\n  \r\n    const fetchDoctors = async () => {\r\n      try {\r\n        const res = await getAllDoctors();\r\n        setDoctors(res.data);\r\n        console.log(\"doctors :\",res.data); \r\n      } catch (error) {\r\n        console.error(\"Failed to fetch doctors\", error);\r\n      }\r\n    };\r\n  \r\n    const loadScheduleTimes = async () => {\r\n      if (selectedDoctor) {\r\n        const slots = await scheduleTime(selectedDoctor);\r\n        setAvailableTimeSlots(slots);\r\n      } else {\r\n        setAvailableTimeSlots([]);\r\n      }\r\n    };\r\n  \r\n    const isTimeAvailable = () => {\r\n      if (!appointmentTime || !appointmentDate || availableTimeSlots.length === 0) return false;\r\n    \r\n      return availableTimeSlots.some(slot => {\r\n        return slot.date === appointmentDate && appointmentTime >= slot.from && appointmentTime <= slot.to;\r\n      });\r\n    };\r\n    fetchGraphData();\r\n    fetchDoctors();\r\n    fetchAppointments();\r\n    loadScheduleTimes();\r\n    if (selectedDoctor && appointmentTime && appointmentDate && !isTimeAvailable()) {\r\n      Swal.fire(\"Unavailable Time Slot\",\"The selected time is not available for this doctor. Please choose a different time.\",\"error\");\r\n    }\r\n  }, [appointmentDate,appointmentTime,selectedDoctor,availableTimeSlots,userId]);\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <Header />\r\n      <section className=\"dashboardsection\">\r\n        <div className=\"container mt-4\">\r\n          <h2 className=\"text-start\">Dashboard</h2>\r\n          <h3 className=\"text-start mt-3\">Welcome, {userName}!</h3>\r\n\r\n          {/* patient sugar detail graph */}\r\n          <div className=\"mt-5\">\r\n            <h4>Track Your Sugar Levels</h4>\r\n            <hr className=\"border border-3 border-success\" />\r\n            <div className=\"row g-3\">\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-floating\">\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    id=\"beforeEating\"\r\n                    name=\"beforeEating\"\r\n                    autoComplete=\"off\"\r\n                    required\r\n                    placeholder=\"Before Eating\"\r\n                    value={beforeEating}\r\n                    onChange={(e) => setBeforeEating(e.target.value)}/>\r\n                  <label htmlFor=\"beforeEating\">Sugar Level (Before Eating)</label>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-floating\">\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    id=\"afterEating\"\r\n                    name=\"afterEating\"\r\n                    autoComplete=\"off\"\r\n                    required\r\n                    placeholder=\"After Eating\"\r\n                    value={afterEating}\r\n                    onChange={(e) => setAfterEating(e.target.value)}/>\r\n                  <label htmlFor=\"afterEating\">Sugar Level (After Eating)</label>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-4 d-flex align-items-center\">\r\n                <button\r\n                  className=\"btn button btn-success w-100\"\r\n                  onClick={handleAddSugarData}\r\n                  disabled={!beforeEating || !afterEating}>\r\n                  Add Data\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* graph */}\r\n          <div className=\"mt-5\">\r\n            <h4>Sugar Level Graph</h4>\r\n            <hr className=\"border border-3 border-success\" />\r\n            <div className=\"d-flex\">\r\n              <button\r\n                className={`btn button ${selectedRange === \"week\" ? \"btn-success\" : \"btn-outline-success\"} me-2`}\r\n                onClick={() => setSelectedRange(\"week\")}>\r\n                Weekly View\r\n              </button>\r\n              <button\r\n                className={`btn button ${selectedRange === \"month\" ? \"btn-success\" : \"btn-outline-success\"}`}\r\n                onClick={() => setSelectedRange(\"month\")}>\r\n                Monthly View\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mt-5\">\r\n            <ResponsiveContainer width=\"100%\" height={300}>\r\n             <LineChart data={generateChartData()}>\r\n                 <XAxis dataKey=\"time\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />               \r\n                <Line type=\"monotone\" dataKey=\"beforeEating\" stroke=\"#8884d8\" strokeWidth={3} dot={{ r: 5 }} />\r\n                <Line type=\"monotone\" dataKey=\"afterEating\" stroke=\"#82ca9d\" strokeWidth={3} dot={{ r: 5 }} />\r\n              </LineChart>  \r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n\r\n        {/* book appointment */}\r\n        <div className=\"mt-5\">\r\n          <h4>Book an Appointment</h4>\r\n          <hr className=\"border border-3 border-success\" />\r\n            <div className=\"row g-3 mt-2\">\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-floating\">\r\n                  <select className=\"form-control\"\r\n                    id=\"floatingDoctor\"\r\n                    value={selectedDoctor}\r\n                    onChange={handleChange}>\r\n                  <option value=\"\">Select a Doctor</option>\r\n                  {doctors.map((doctor, index) => (\r\n                    <option key={index} value={doctor.doctorName}>\r\n                      {doctor.doctorName} - {doctor.specialization}\r\n                    </option>\r\n                  ))}\r\n                  </select>\r\n                  <label htmlFor=\"floatingDoctor\">Choose a Doctor</label>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-floating\">\r\n                  <input type=\"date\"\r\n                    className=\"form-control\"\r\n                    id=\"floatingDate\"\r\n                    value={appointmentDate}\r\n                    onChange={(e) => setAppointmentDate(e.target.value)}/>\r\n                  <label htmlFor=\"floatingDate\">Select Date</label>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-floating\">\r\n                  <input type=\"time\"\r\n                    className=\"form-control\"\r\n                    id=\"floatingTime\"\r\n                    value={appointmentTime}\r\n                    onChange={(e) => setAppointmentTime(e.target.value)}\r\n                    disabled={!selectedDoctor}/>\r\n                  <label htmlFor=\"floatingTime\">Select Time</label>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-12 d-flex justify-content-end\">\r\n                <button className=\"btn btn-success appointment-btn\"\r\n                  onClick={handleBookAppointment}\r\n                  disabled={\r\n                    !selectedDoctor ||\r\n                    !appointmentDate ||\r\n                    !appointmentTime \r\n                    // !isTimeAvailable()\r\n                  }>\r\n                    Book Appointment\r\n                </button>\r\n              </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n            {/* my appointments */}\r\n          <div className=\"mt-5\">\r\n            <h4>My Appointments</h4>\r\n            <hr className=\"border border-3 border-success\" />\r\n              {appointments.length === 0 ? (\r\n                <p className=\"text-muted\">No active appointments.</p>\r\n              ) : (\r\n              <ul className=\"list-group\">\r\n                {appointments.map((appointment, index) => (\r\n                  <li key={index} className=\"list-group-item d-flex justify-content-between\">\r\n                  <span>\r\n                    {appointment.appointmentDate} -  {appointment.appointmentTime} - {appointment.doctorName}\r\n                  </span>\r\n                  <button className=\"btn btn-danger btn-sm\"\r\n                    onClick={() => handleCancelAppointment(index)}>\r\n                    Cancel\r\n                  </button>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </div>\r\n\r\n      </section>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}