{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kumaran project\\\\medilocker\\\\src\\\\components\\\\EmergencyLogin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmergencyLogin = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [dob, setDob] = useState('');\n  const [role, setRole] = useState('patient');\n  const navigate = useNavigate();\n  const sampleUsers = [{\n    name: \"kumaran\",\n    dob: \"30-03-2025\",\n    role: \"patient\"\n  }, {\n    name: \"ram\",\n    dob: \"30-03-2025\",\n    role: \"patient\"\n  }, {\n    name: \"desigan\",\n    dob: \"30-03-2025\"\n  }];\n  function formatDate(inputDate) {\n    const parts = inputDate.split(\"-\");\n    return `${parts[2]}-${parts[1]}-${parts[0]}`;\n  }\n  const formattedDob = formatDate(dob);\n  function handleLogin(e) {\n    e.preventDefault();\n    const user = sampleUsers.find(user => user.name === name && user.dob === formattedDob && user.role === role);\n    if (!name.trim()) {\n      Swal.fire(\"Error\", \"Name cannot be empty\", \"error\");\n      return;\n    }\n    if (!dob) {\n      Swal.fire(\"Error\", \"Date of birth cannot be empty\", \"error\");\n      return;\n    }\n    if (user) {\n      localStorage.setItem(\"isLoggedIn\", \"true\");\n      localStorage.setItem(\"userRole\", user.role);\n      Swal.fire(\"Success\", \"Login Successful!\", \"success\").then(() => {\n        navigate(user.role === \"patient\" ? \"/dashboard\" : \"/doctordashboard\");\n      });\n    } else {\n      Swal.fire(\"Error\", \"Invalid name or dob.\", \"error\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"emergencylogin card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"card-title p-2\",\n        children: \"Emergency Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"#\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-floating mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"floatingInput\",\n            name: \"text\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            placeholder: \"Enter your Name\",\n            required: true,\n            autoComplete: \"off\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"floatingInput\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-floating\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"floatingDate\",\n            name: \"dob\",\n            value: dob,\n            onChange: e => setDob(e.target.value),\n            placeholder: \"Enter your Date of Birth\",\n            required: true,\n            autoComplete: \"off\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"floatingDate\",\n            children: \"Date of Birth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-12 mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-success w-100\",\n            onClick: handleLogin,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(EmergencyLogin, \"yt79+QVoeDYxwdcoh3x6pNL0Uhg=\", false, function () {\n  return [useNavigate];\n});\n_c = EmergencyLogin;\nexport default EmergencyLogin;\nvar _c;\n$RefreshReg$(_c, \"EmergencyLogin\");","map":{"version":3,"names":["React","useState","useNavigate","Swal","jsxDEV","_jsxDEV","EmergencyLogin","_s","name","setName","dob","setDob","role","setRole","navigate","sampleUsers","formatDate","inputDate","parts","split","formattedDob","handleLogin","e","preventDefault","user","find","trim","fire","localStorage","setItem","then","className","children","fileName","_jsxFileName","lineNumber","columnNumber","action","type","id","value","onChange","target","placeholder","required","autoComplete","for","class","onClick","_c","$RefreshReg$"],"sources":["D:/Kumaran project/medilocker/src/components/EmergencyLogin.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst EmergencyLogin = ()=>{\r\n    const [name,setName] = useState('');\r\n    const [dob,setDob] = useState('');\r\n    const [role,setRole] = useState('patient');\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const sampleUsers = [\r\n        { name: \"kumaran\", dob: \"30-03-2025\", role:\"patient\"},\r\n        { name: \"ram\" ,dob: \"30-03-2025\", role: \"patient\"},\r\n        {name:\"desigan\",dob:\"30-03-2025\"}\r\n    ];\r\n\r\n    function formatDate(inputDate) {\r\n        const parts = inputDate.split(\"-\");\r\n        return `${parts[2]}-${parts[1]}-${parts[0]}`;\r\n    }\r\n    const formattedDob = formatDate(dob);\r\n\r\n    function handleLogin(e){\r\n        e.preventDefault();\r\n\r\n        const user = sampleUsers.find((user) => user.name === name && user.dob === formattedDob && user.role === role);\r\n\r\n        if (!name.trim()) {\r\n            Swal.fire(\"Error\", \"Name cannot be empty\", \"error\");\r\n            return;\r\n        }\r\n        if (!dob) {\r\n            Swal.fire(\"Error\", \"Date of birth cannot be empty\", \"error\");\r\n            return;\r\n        }\r\n\r\n        if (user) {\r\n\r\n            localStorage.setItem(\"isLoggedIn\", \"true\");\r\n            localStorage.setItem(\"userRole\", user.role);\r\n\r\n            Swal.fire(\"Success\", \"Login Successful!\", \"success\").then(() => {\r\n            navigate(user.role === \"patient\" ? \"/dashboard\" : \"/doctordashboard\");\r\n            });\r\n          } else {\r\n            Swal.fire(\"Error\", \"Invalid name or dob.\", \"error\");\r\n          }        \r\n    }\r\n\r\n    return(\r\n        <div className=\"emergencylogin card\">\r\n            <div className=\"card-body\">\r\n                <h2 className=\"card-title p-2\">Emergency Login</h2>\r\n                <form action=\"#\">\r\n                    <div className=\"form-floating mb-3\">\r\n                        <input type=\"email\"\r\n                            id=\"floatingInput\"\r\n                            name=\"text\"\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                            placeholder=\"Enter your Name\"\r\n                            required\r\n                            autoComplete=\"off\"\r\n                            className=\"form-control\"/>\r\n                        <label for=\"floatingInput\">Name</label>\r\n                    </div>\r\n                    <div className=\"form-floating\">\r\n                        <input type=\"date\" \r\n                            id=\"floatingDate\"\r\n                            name=\"dob\"\r\n                            value={dob}\r\n                            onChange={(e) => setDob(e.target.value)}\r\n                            placeholder=\"Enter your Date of Birth\"\r\n                            required\r\n                            autoComplete=\"off\"\r\n                            className=\"form-control\"  />\r\n                        <label for=\"floatingDate\">Date of Birth</label>\r\n                    </div>\r\n                    {/* role */}\r\n                    {/* <div className=\"mb-3 p-2\">\r\n                        <label className=\"form-label d-block fw-medium text-start\">Select Role:</label>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <input type=\"radio\" \r\n                                id=\"doctor\" \r\n                                name=\"role\" \r\n                                value=\"doctor\"\r\n                                checked={role === \"doctor\"} \r\n                                onChange={(e) => setRole(e.target.value)}\r\n                                className=\"me-1\" />\r\n                            <label htmlFor=\"doctor\" className=\"me-3\">Doctor</label>\r\n\r\n                            <input type=\"radio\" \r\n                                id=\"patient\" \r\n                                name=\"role\" \r\n                                value=\"patient\"\r\n                                checked={role === \"patient\"} \r\n                                onChange={(e) => setRole(e.target.value)}\r\n                                className=\"me-1\" />\r\n                            <label htmlFor=\"patient\">Patient</label>\r\n                        </div>\r\n                    </div> */}\r\n\r\n                    <div class=\"col-12 mt-4\">\r\n                        <button type=\"submit\" className=\"btn btn-success w-100\" onClick={handleLogin}>Login</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmergencyLogin;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}