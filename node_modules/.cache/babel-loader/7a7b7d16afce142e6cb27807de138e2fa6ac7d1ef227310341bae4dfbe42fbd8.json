{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kumaran project\\\\medilocker\\\\src\\\\pages\\\\ForgotPassword.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import Swal from \"sweetalert2\";\n// import { getAllUsers, forgetPassword } from \"../api/UserService\";\n\n// const ForgotPassword = () => {\n//   const [email, setEmail] = useState(\"\");\n//   const [patients, setPatients] = useState([]);\n//   const [showPasswordBox, setShowPasswordBox] = useState(false);\n//   const [password, setPassword] = useState(\"\");\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\n//   const navigate = useNavigate();\n\n//   const isValidEmail = (email) =>  /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/.test(email);\n//   const isValidPassword = (password) => /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/.test(password);\n\n//   useEffect(() => {\n//     fetchUsers();\n//   }, []);\n\n//   const fetchUsers = async () => {\n//     try {\n//       const res = await getAllUsers();\n//       setPatients(res.data);\n//     } catch (error) {\n//       console.error(\"Failed to fetch users\", error);\n//     }\n//   };\n\n//   const handleSubmitEmail = (e) => {\n//     e.preventDefault();\n\n//     if (!isValidEmail(email)) {\n//       Swal.fire(\"Error\", \"Please enter a valid email address\", \"error\");\n//       return;\n//     }\n\n//     const user = patients.find((user) => user.emailId === email);\n//     if (user) {\n//       Swal.fire(\"Success\", \"Email verified! Enter your new password.\", \"success\");\n//       setShowPasswordBox(true);\n//     } else {\n//       Swal.fire(\"Error\", \"Invalid email! Not found in the database.\", \"error\");\n//     }\n//   };\n\n//   const handleSubmitPassword = async (e) => {\n//     e.preventDefault();\n//     if (!isValidPassword(password)) {\n//         Swal.fire(\"Error\", \"Password must be at least 8 characters, contain letters, numbers, and a special character.\", \"error\");\n//         return;\n//     }\n//     if (password !== confirmPassword) {\n//         Swal.fire(\"Error\", \"Passwords do not match\", \"error\");\n//         return;\n//     }\n\n//     try {\n//       await forgetPassword({ emailId: email, password });\n//       Swal.fire(\"Success\", \"Password updated successfully!\", \"success\").then(() => {\n//         navigate(\"/login\");\n//       });\n//     } catch (error) {\n//       console.error(\"Error updating password:\", error);\n//       Swal.fire(\"Error\", \"Failed to update password.\", \"error\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"forgotpassword\">\n//       <section className=\"forgotpasswordsection\">\n//         <h2 className=\"card-title p-3\">Forgot Password</h2>\n//         <div className=\"card\">\n//           <div className=\"card-body\">\n//             <h2 className=\"card-title p-3\">Reset your password</h2>\n//             <p className=\"p-2\">\n//               If the account exists, we will allow you to reset the password.\n//             </p>\n\n//             <form>\n//               <div className=\"form-floating mb-3\">\n//                 <input type=\"email\"\n//                   id=\"floatingInput\"\n//                   name=\"email\"\n//                   value={email}\n//                   onChange={(e) => setEmail(e.target.value)}\n//                   placeholder=\"Enter your email\"\n//                   required\n//                   autoComplete=\"off\"\n//                   className=\"form-control\"/>\n//                 <label htmlFor=\"floatingInput\">Email</label>\n//               </div>\n//               <div className=\"col-12 mt-4\">\n//                 <button type=\"submit\" className=\"btn btn-success w-100\" onClick={handleSubmitEmail}>Verify Email</button>\n//               </div>\n\n//               {showPasswordBox && (\n//                 <div>\n//                     <h3 className=\"mt-4 mb-3\">Set Your New Password</h3>\n//                   <div className=\"form-floating mt-4\">\n//                     <input type=\"password\"\n//                       id=\"floatingPassword\"\n//                       name=\"password\"\n//                       value={password}\n//                       onChange={(e) => setPassword(e.target.value)}\n//                       placeholder=\"Enter new password\"\n//                       required\n//                       autoComplete=\"off\"\n//                       className=\"form-control\"/>\n//                     <label htmlFor=\"floatingPassword\">New Password</label>\n//                   </div>\n//                   <div className=\"form-floating mt-4\">\n//                     <input type=\"password\"\n//                       id=\"floatingConfirmPassword\"\n//                       name=\"confirmPassword\"\n//                       value={confirmPassword}\n//                       onChange={(e) => setConfirmPassword(e.target.value)}\n//                       placeholder=\"Enter new Confirm Password\"\n//                       required\n//                       autoComplete=\"off\"\n//                       className=\"form-control\"/>\n//                     <label htmlFor=\"floatingConfirmPassword\">Confirm New Password</label>\n//                   </div>\n//                   <div className=\"col-12 mt-4\">\n//                     <button\n//                       type=\"submit\"\n//                       className=\"btn btn-primary w-100\"\n//                       onClick={handleSubmitPassword}>\n//                       Update Password\n//                     </button>\n//                   </div>\n//                 </div>\n//               )}\n//             </form>\n//           </div>\n//         </div>\n//       </section>\n//     </div>\n//   );\n// };\n\n// export default ForgotPassword;\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport { getAllUsers } from \"../api/UserService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [patients, setPatients] = useState([]);\n  const [emailFound, setEmailFound] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const navigate = useNavigate();\n  const isValidEmail = email => /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/.test(email);\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const fetchUsers = async () => {\n    try {\n      const res = await getAllUsers();\n      setPatients(res.data);\n    } catch (error) {\n      console.error(\"Failed to fetch users\", error);\n    }\n  };\n  const handleEmailSubmit = e => {\n    e.preventDefault();\n    if (!isValidEmail(email)) {\n      Swal.fire(\"Error\", \"Please enter a valid email address\", \"error\");\n      return;\n    }\n    const user = patients.find(user => user.emailId === email);\n    if (user) {\n      setEmailFound(true);\n    } else {\n      Swal.fire(\"Error\", \"Invalid email! Not found in the database.\", \"error\");\n    }\n  };\n  const handlePasswordReset = e => {\n    e.preventDefault();\n    if (password.length < 6) {\n      Swal.fire(\"Error\", \"Password should be at least 6 characters\", \"error\");\n      return;\n    }\n    Swal.fire(\"Success\", \"Password has been reset successfully!\", \"success\").then(() => {\n      navigate(\"/login\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forgotpassword\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"forgotpasswordsection\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"card-title p-3\",\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"card-title p-3\",\n            children: \"Reset your password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"p-2\",\n            children: emailFound ? \"Enter your new password below.\" : \"If the account exists, we will email you instructions to reset the password.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), !emailFound ? /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleEmailSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-floating mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                id: \"floatingInput\",\n                name: \"email\",\n                value: email,\n                onChange: e => setEmail(e.target.value),\n                placeholder: \"Enter your email\",\n                required: true,\n                autoComplete: \"off\",\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"floatingInput\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 mt-4\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-success w-100\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handlePasswordReset,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-floating mb-3 position-relative\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: showPassword ? \"text\" : \"password\",\n                id: \"floatingPassword\",\n                name: \"password\",\n                value: password,\n                onChange: e => setPassword(e.target.value),\n                placeholder: \"Enter your new password\",\n                required: true,\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"floatingPassword\",\n                children: \"New Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\"\n                // className=\"btn btn-outline-secondary position-absolute\"\n                ,\n                style: {\n                  top: \"50%\",\n                  right: \"10px\",\n                  transform: \"translateY(-50%)\"\n                },\n                onClick: () => setShowPassword(prev => !prev),\n                tabIndex: -1,\n                children: showPassword ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  width: \"24\",\n                  height: \"24\",\n                  src: \"https://img.icons8.com/material-outlined/24/hide.png\",\n                  alt: \"hide\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 37\n                }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                  width: \"24\",\n                  height: \"24\",\n                  src: \"https://img.icons8.com/material-outlined/24/visible--v1.png\",\n                  alt: \"visible--v1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 139\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 mt-4\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-success w-100\",\n                children: \"Reset Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"ViFOycywnHQ4iHcYkcMWK0qKpng=\", false, function () {\n  return [useNavigate];\n});\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Swal","getAllUsers","jsxDEV","_jsxDEV","ForgotPassword","_s","email","setEmail","patients","setPatients","emailFound","setEmailFound","password","setPassword","showPassword","setShowPassword","navigate","isValidEmail","test","fetchUsers","res","data","error","console","handleEmailSubmit","e","preventDefault","fire","user","find","emailId","handlePasswordReset","length","then","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","id","name","value","onChange","target","placeholder","required","autoComplete","htmlFor","style","top","right","transform","onClick","prev","tabIndex","width","height","src","alt","_c","$RefreshReg$"],"sources":["D:/Kumaran project/medilocker/src/pages/ForgotPassword.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import Swal from \"sweetalert2\";\r\n// import { getAllUsers, forgetPassword } from \"../api/UserService\";\r\n\r\n// const ForgotPassword = () => {\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [patients, setPatients] = useState([]);\r\n//   const [showPasswordBox, setShowPasswordBox] = useState(false);\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n//   const navigate = useNavigate();\r\n\r\n//   const isValidEmail = (email) =>  /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/.test(email);\r\n//   const isValidPassword = (password) => /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/.test(password);\r\n\r\n//   useEffect(() => {\r\n//     fetchUsers();\r\n//   }, []);\r\n\r\n//   const fetchUsers = async () => {\r\n//     try {\r\n//       const res = await getAllUsers();\r\n//       setPatients(res.data);\r\n//     } catch (error) {\r\n//       console.error(\"Failed to fetch users\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmitEmail = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     if (!isValidEmail(email)) {\r\n//       Swal.fire(\"Error\", \"Please enter a valid email address\", \"error\");\r\n//       return;\r\n//     }\r\n\r\n//     const user = patients.find((user) => user.emailId === email);\r\n//     if (user) {\r\n//       Swal.fire(\"Success\", \"Email verified! Enter your new password.\", \"success\");\r\n//       setShowPasswordBox(true);\r\n//     } else {\r\n//       Swal.fire(\"Error\", \"Invalid email! Not found in the database.\", \"error\");\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmitPassword = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!isValidPassword(password)) {\r\n//         Swal.fire(\"Error\", \"Password must be at least 8 characters, contain letters, numbers, and a special character.\", \"error\");\r\n//         return;\r\n//     }\r\n//     if (password !== confirmPassword) {\r\n//         Swal.fire(\"Error\", \"Passwords do not match\", \"error\");\r\n//         return;\r\n//     }\r\n\r\n//     try {\r\n//       await forgetPassword({ emailId: email, password });\r\n//       Swal.fire(\"Success\", \"Password updated successfully!\", \"success\").then(() => {\r\n//         navigate(\"/login\");\r\n//       });\r\n//     } catch (error) {\r\n//       console.error(\"Error updating password:\", error);\r\n//       Swal.fire(\"Error\", \"Failed to update password.\", \"error\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"forgotpassword\">\r\n//       <section className=\"forgotpasswordsection\">\r\n//         <h2 className=\"card-title p-3\">Forgot Password</h2>\r\n//         <div className=\"card\">\r\n//           <div className=\"card-body\">\r\n//             <h2 className=\"card-title p-3\">Reset your password</h2>\r\n//             <p className=\"p-2\">\r\n//               If the account exists, we will allow you to reset the password.\r\n//             </p>\r\n\r\n//             <form>\r\n//               <div className=\"form-floating mb-3\">\r\n//                 <input type=\"email\"\r\n//                   id=\"floatingInput\"\r\n//                   name=\"email\"\r\n//                   value={email}\r\n//                   onChange={(e) => setEmail(e.target.value)}\r\n//                   placeholder=\"Enter your email\"\r\n//                   required\r\n//                   autoComplete=\"off\"\r\n//                   className=\"form-control\"/>\r\n//                 <label htmlFor=\"floatingInput\">Email</label>\r\n//               </div>\r\n//               <div className=\"col-12 mt-4\">\r\n//                 <button type=\"submit\" className=\"btn btn-success w-100\" onClick={handleSubmitEmail}>Verify Email</button>\r\n//               </div>\r\n\r\n//               {showPasswordBox && (\r\n//                 <div>\r\n//                     <h3 className=\"mt-4 mb-3\">Set Your New Password</h3>\r\n//                   <div className=\"form-floating mt-4\">\r\n//                     <input type=\"password\"\r\n//                       id=\"floatingPassword\"\r\n//                       name=\"password\"\r\n//                       value={password}\r\n//                       onChange={(e) => setPassword(e.target.value)}\r\n//                       placeholder=\"Enter new password\"\r\n//                       required\r\n//                       autoComplete=\"off\"\r\n//                       className=\"form-control\"/>\r\n//                     <label htmlFor=\"floatingPassword\">New Password</label>\r\n//                   </div>\r\n//                   <div className=\"form-floating mt-4\">\r\n//                     <input type=\"password\"\r\n//                       id=\"floatingConfirmPassword\"\r\n//                       name=\"confirmPassword\"\r\n//                       value={confirmPassword}\r\n//                       onChange={(e) => setConfirmPassword(e.target.value)}\r\n//                       placeholder=\"Enter new Confirm Password\"\r\n//                       required\r\n//                       autoComplete=\"off\"\r\n//                       className=\"form-control\"/>\r\n//                     <label htmlFor=\"floatingConfirmPassword\">Confirm New Password</label>\r\n//                   </div>\r\n//                   <div className=\"col-12 mt-4\">\r\n//                     <button\r\n//                       type=\"submit\"\r\n//                       className=\"btn btn-primary w-100\"\r\n//                       onClick={handleSubmitPassword}>\r\n//                       Update Password\r\n//                     </button>\r\n//                   </div>\r\n//                 </div>\r\n//               )}\r\n//             </form>\r\n//           </div>\r\n//         </div>\r\n//       </section>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ForgotPassword;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { getAllUsers } from \"../api/UserService\";\r\n\r\nconst ForgotPassword = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [patients, setPatients] = useState([]);\r\n  const [emailFound, setEmailFound] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const isValidEmail = (email) =>\r\n    /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/.test(email);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const res = await getAllUsers();\r\n      setPatients(res.data);\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch users\", error);\r\n    }\r\n  };\r\n\r\n  const handleEmailSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!isValidEmail(email)) {\r\n      Swal.fire(\"Error\", \"Please enter a valid email address\", \"error\");\r\n      return;\r\n    }\r\n\r\n    const user = patients.find((user) => user.emailId === email);\r\n    if (user) {\r\n      setEmailFound(true);\r\n    } else {\r\n      Swal.fire(\"Error\", \"Invalid email! Not found in the database.\", \"error\");\r\n    }\r\n  };\r\n\r\n  const handlePasswordReset = (e) => {\r\n    e.preventDefault();\r\n    if (password.length < 6) {\r\n      Swal.fire(\"Error\", \"Password should be at least 6 characters\", \"error\");\r\n      return;\r\n    }\r\n\r\n    Swal.fire(\"Success\", \"Password has been reset successfully!\", \"success\").then(() => {\r\n      navigate(\"/login\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"forgotpassword\">\r\n      <section className=\"forgotpasswordsection\">\r\n        <h2 className=\"card-title p-3\">Forgot Password</h2>\r\n        <br />\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <h2 className=\"card-title p-3\">Reset your password</h2>\r\n            <p className=\"p-2\">\r\n              {emailFound\r\n                ? \"Enter your new password below.\"\r\n                : \"If the account exists, we will email you instructions to reset the password.\"}\r\n            </p>\r\n\r\n            {!emailFound ? (\r\n              <form onSubmit={handleEmailSubmit}>\r\n                <div className=\"form-floating mb-3\">\r\n                  <input\r\n                    type=\"email\"\r\n                    id=\"floatingInput\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    placeholder=\"Enter your email\"\r\n                    required\r\n                    autoComplete=\"off\"\r\n                    className=\"form-control\"\r\n                  />\r\n                  <label htmlFor=\"floatingInput\">Email</label>\r\n                </div>\r\n                <div className=\"col-12 mt-4\">\r\n                  <button type=\"submit\" className=\"btn btn-success w-100\">\r\n                    Submit\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            ) : (\r\n              <form onSubmit={handlePasswordReset}>\r\n                <div className=\"form-floating mb-3 position-relative\">\r\n                  <input\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    id=\"floatingPassword\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    placeholder=\"Enter your new password\"\r\n                    required\r\n                    className=\"form-control\"\r\n                  />\r\n                  <label htmlFor=\"floatingPassword\">New Password</label>\r\n                  <button\r\n                    type=\"button\"\r\n                    // className=\"btn btn-outline-secondary position-absolute\"\r\n                    style={{ top: \"50%\", right: \"10px\", transform: \"translateY(-50%)\" }}\r\n                    onClick={() => setShowPassword((prev) => !prev)}\r\n                    tabIndex={-1}\r\n                  >\r\n                    {showPassword ? <img width=\"24\" height=\"24\" src=\"https://img.icons8.com/material-outlined/24/hide.png\" alt=\"hide\"/> : <img width=\"24\" height=\"24\" src=\"https://img.icons8.com/material-outlined/24/visible--v1.png\" alt=\"visible--v1\"/>}\r\n                  </button>\r\n                </div>\r\n                <div className=\"col-12 mt-4\">\r\n                  <button type=\"submit\" className=\"btn btn-success w-100\">\r\n                    Reset Password\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,IAAI,MAAM,aAAa;AAC9B,SAASC,WAAW,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMmB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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}