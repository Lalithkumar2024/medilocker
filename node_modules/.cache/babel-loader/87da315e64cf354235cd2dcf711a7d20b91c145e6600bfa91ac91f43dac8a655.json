{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kumaran project\\\\medilocker\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import Header from \"../components/Header\";\n// import Footer from \"../components/Footer\";\n\n// const Dashboard = ({ userName = \"Kumaran\" }) => {\n//   const [selectedDoctor, setSelectedDoctor] = useState(\"\");\n//   const [appointmentDate, setAppointmentDate] = useState(\"\");\n//   const [appointmentTime, setAppointmentTime] = useState(\"\");\n//   const [appointments, setAppointments] = useState([]);\n\n//   const doctors = [\n//     { name: \"Dr. John - Cardiologist\", unavailableTimes: [\"10:00\", \"15:00\"] },\n//     { name: \"Dr. Smith - Dermatologist\", unavailableTimes: [\"12:30\", \"16:00\"] },\n//     { name: \"Dr. Sam - Neurologist\", unavailableTimes: [\"09:00\", \"14:00\"] },\n//     { name: \"Dr. Johnson - Orthopedic\", unavailableTimes: [\"11:00\", \"17:30\"] },\n//   ];\n\n//   const handleChange = (e) => {\n//     setSelectedDoctor(e.target.value);\n//   };\n\n//   const handleBookAppointment = () => {\n//     if (selectedDoctor && appointmentDate && appointmentTime) {\n//       const newAppointment = {\n//         doctor: selectedDoctor,\n//         date: appointmentDate,\n//         time: appointmentTime,\n//       };\n\n//       setAppointments([...appointments, newAppointment]);\n//       setSelectedDoctor(\"\");\n//       setAppointmentDate(\"\");\n//       setAppointmentTime(\"\");\n//     }\n//   };\n\n//   const handleCancelAppointment = (index) => {\n//     const updatedAppointments = appointments.filter((_, i) => i !== index);\n//     setAppointments(updatedAppointments);\n//   };\n\n//   const getUnavailableTimes = () => {\n//     const doctor = doctors.find((doc) => doc.name === selectedDoctor);\n//     return doctor ? doctor.unavailableTimes : [];\n//   };\n\n//   return (\n//     <div className=\"dashboard\">\n//       <Header/>\n//         <section className=\"dashboardsection\">\n//           <div className=\"container mt-4\">\n//             <h2 className=\"text-start\">Dashboard</h2>\n//             <h3 className=\"text-start mt-3\">Welcome, {userName}!</h3>\n//             <div className=\"mt-4\">\n//               <h4>Book an Appointment</h4>\n//               <hr className=\"border border-3 border-success\" />\n\n//               <div className=\"row g-3 mt-2\">\n//                 <div className=\"col-md-4\">\n//                   <div className=\"form-floating\">\n//                     <select\n//                       className=\"form-control\"\n//                       id=\"floatingDoctor\"\n//                       value={selectedDoctor}\n//                       onChange={handleChange}\n//                     >\n//                       <option value=\"\">Select a Doctor</option>\n//                       {doctors.map((doctor, index) => (\n//                         <option key={index} value={doctor.name}>\n//                           {doctor.name}\n//                         </option>\n//                       ))}\n//                     </select>\n//                     <label htmlFor=\"floatingDoctor\">Choose a Doctor</label>\n//                   </div>\n//                 </div>\n//                 <div className=\"col-md-4\">\n//                   <div className=\"form-floating\">\n//                     <input\n//                       type=\"date\"\n//                       className=\"form-control\"\n//                       id=\"floatingDate\"\n//                       value={appointmentDate}\n//                       onChange={(e) => setAppointmentDate(e.target.value)}\n//                     />\n//                     <label htmlFor=\"floatingDate\">Select Date</label>\n//                   </div>\n//                 </div>\n//                 <div className=\"col-md-4\">\n//                   <div className=\"form-floating\">\n//                     <input\n//                       type=\"time\"\n//                       className=\"form-control\"\n//                       id=\"floatingTime\"\n//                       value={appointmentTime}\n//                       onChange={(e) => setAppointmentTime(e.target.value)}\n//                       disabled={!selectedDoctor}\n//                     />\n//                     <label htmlFor=\"floatingTime\">Select Time</label>\n//                   </div>\n//                   {selectedDoctor && getUnavailableTimes().includes(appointmentTime) && (\n//                     <p className=\"text-danger mt-2\"> This time slot is unavailable!</p>\n//                   )}\n//                 </div>\n//                 <div className=\"col-md-12 d-flex justify-content-end\">\n//                   <button\n//                     className=\"btn btn-success appointment-btn\"\n//                     onClick={handleBookAppointment}\n//                     disabled={\n//                       !selectedDoctor ||\n//                       !appointmentDate ||\n//                       !appointmentTime ||\n//                       getUnavailableTimes().includes(appointmentTime)\n//                     }\n//                   >\n//                     Book Appointment\n//                   </button>\n//                 </div>\n//               </div>\n//             </div>\n//             <div className=\"mt-5\">\n//               <h4>My Appointments</h4>\n//               <hr className=\"border border-3 border-success\" />\n//               {appointments.length === 0 ? (\n//                 <p className=\"text-muted\">No active appointments.</p>\n//               ) : (\n//                 <ul className=\"list-group\">\n//                   {appointments.map((appointment, index) => (\n//                     <li key={index} className=\"list-group-item d-flex justify-content-between\">\n//                       <span>\n//                         {appointment.date} -  {appointment.time} - {appointment.doctor}\n//                       </span>\n//                       <button\n//                         className=\"btn btn-danger btn-sm\"\n//                         onClick={() => handleCancelAppointment(index)}\n//                       >\n//                         Cancel\n//                       </button>\n//                     </li>\n//                   ))}\n//                 </ul>\n//               )}\n//             </div>\n//           </div>\n//         </section>\n//       <Footer/>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\nimport React, { useState } from \"react\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport Swal from \"sweetalert2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  userName = \"Kumaran\"\n}) => {\n  _s();\n  const [sugarData, setSugarData] = useState([{\n    time: getDate(-6),\n    beforeEating: 110,\n    afterEating: 140\n  }, {\n    time: getDate(-5),\n    beforeEating: 120,\n    afterEating: 150\n  }, {\n    time: getDate(-4),\n    beforeEating: 115,\n    afterEating: 135\n  }, {\n    time: getDate(-3),\n    beforeEating: 130,\n    afterEating: 160\n  }, {\n    time: getDate(-2),\n    beforeEating: 125,\n    afterEating: 155\n  }, {\n    time: getDate(-1),\n    beforeEating: 118,\n    afterEating: 148\n  }, {\n    time: getDate(0),\n    beforeEating: null,\n    afterEating: null\n  }]);\n  const [beforeEating, setBeforeEating] = useState(\"\");\n  const [afterEating, setAfterEating] = useState(\"\");\n  const [selectedRange, setSelectedRange] = useState(\"week\");\n  const [selectedDoctor, setSelectedDoctor] = useState(\"\");\n  const [appointmentDate, setAppointmentDate] = useState(\"\");\n  const [appointmentTime, setAppointmentTime] = useState(\"\");\n  const [appointments, setAppointments] = useState([]);\n  const doctors = [{\n    name: \"Dr. John - Cardiologist\",\n    unavailableTimes: [\"10:00\", \"15:00\"]\n  }, {\n    name: \"Dr. Smith - Dermatologist\",\n    unavailableTimes: [\"12:30\", \"16:00\"]\n  }, {\n    name: \"Dr. Sam - Neurologist\",\n    unavailableTimes: [\"09:00\", \"14:00\"]\n  }, {\n    name: \"Dr. Johnson - Orthopedic\",\n    unavailableTimes: [\"11:00\", \"17:30\"]\n  }];\n  function getDate(daysAgo) {\n    let date = new Date();\n    date.setDate(date.getDate() + daysAgo);\n    return date.toLocaleDateString();\n  }\n  const handleChange = e => {\n    setSelectedDoctor(e.target.value);\n  };\n  const handleBookAppointment = () => {\n    if (selectedDoctor && appointmentDate && appointmentTime) {\n      const newAppointment = {\n        doctor: selectedDoctor,\n        date: appointmentDate,\n        time: appointmentTime\n      };\n      setAppointments([...appointments, newAppointment]);\n      setSelectedDoctor(\"\");\n      setAppointmentDate(\"\");\n      setAppointmentTime(\"\");\n    }\n  };\n  const handleCancelAppointment = index => {\n    const updatedAppointments = appointments.filter((_, i) => i !== index);\n    setAppointments(updatedAppointments);\n  };\n  const getUnavailableTimes = () => {\n    const doctor = doctors.find(doc => doc.name === selectedDoctor);\n    return doctor ? doctor.unavailableTimes : [];\n  };\n\n  // const handleAddSugarData = () => {\n  //   if (beforeEating && afterEating) {\n  //     setSugarData([...sugarData, { time: new Date().toLocaleDateString(), beforeEating, afterEating }]);\n  //     setBeforeEating(\"\");\n  //     setAfterEating(\"\");\n  //   }\n  // };\n\n  const handleAddSugarData = () => {\n    const now = new Date();\n    const hours = now.getHours();\n    if (hours < 6 || hours >= 8) {\n      // Swal.fire(\"Error\",\"Sugar level data can only be uploaded between 6 AM and 8 AM.\",\"error\");\n      alert(\"Sugar level data can only be uploaded between 6 AM and 8 AM.\");\n      return;\n    }\n    if (beforeEating && afterEating) {\n      setSugarData([...sugarData, {\n        time: now.toLocaleDateString(),\n        beforeEating,\n        afterEating\n      }]);\n      setBeforeEating(\"\");\n      setAfterEating(\"\");\n    }\n  };\n  const generateChartData = () => {\n    let dates = [];\n    let today = new Date();\n    for (let i = 0; i < (selectedRange === \"week\" ? 7 : 30); i++) {\n      let date = new Date(today);\n      date.setDate(today.getDate() - i);\n      dates.push(date.toLocaleDateString());\n    }\n    return dates.map(date => {\n      let entry = sugarData.find(data => data.time === date);\n      return entry ? entry : {\n        time: date,\n        beforeEating: null,\n        afterEating: null\n      };\n    }).reverse();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"dashboardsection\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-start\",\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-start mt-3\",\n          children: [\"Welcome, \", userName, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Track Your Sugar Levels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"border border-3 border-success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row g-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-floating\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  className: \"form-control\",\n                  id: \"beforeEating\",\n                  placeholder: \"Before Eating\",\n                  value: beforeEating,\n                  onChange: e => setBeforeEating(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"beforeEating\",\n                  children: \"Sugar Level (Before Eating)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-floating\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  className: \"form-control\",\n                  id: \"afterEating\",\n                  placeholder: \"After Eating\",\n                  value: afterEating,\n                  onChange: e => setAfterEating(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"afterEating\",\n                  children: \"Sugar Level (After Eating)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4 d-flex align-items-center\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-success w-100\",\n                onClick: handleAddSugarData,\n                disabled: !beforeEating || !afterEating,\n                children: \"Add Data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Sugar Level Graph\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"border border-3 border-success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `btn ${selectedRange === \"week\" ? \"btn-success\" : \"btn-outline-success\"} me-2`,\n              onClick: () => setSelectedRange(\"week\"),\n              children: \"Weekly View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `btn ${selectedRange === \"month\" ? \"btn-success\" : \"btn-outline-success\"}`,\n              onClick: () => setSelectedRange(\"month\"),\n              children: \"Monthly View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-5\",\n          children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 300,\n            children: /*#__PURE__*/_jsxDEV(LineChart, {\n              data: generateChartData(),\n              children: [/*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"beforeEating\",\n                stroke: \"#8884d8\",\n                strokeWidth: 3,\n                dot: {\n                  r: 5\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"afterEating\",\n                stroke: \"#82ca9d\",\n                strokeWidth: 3,\n                dot: {\n                  r: 5\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Book an Appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"border border-3 border-success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row g-3 mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-floating\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-control\",\n                id: \"floatingDoctor\",\n                value: selectedDoctor,\n                onChange: handleChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select a Doctor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 23\n                }, this), doctors.map((doctor, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: doctor.name,\n                  children: doctor.name\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"floatingDoctor\",\n                children: \"Choose a Doctor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-floating\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                className: \"form-control\",\n                id: \"floatingDate\",\n                value: appointmentDate,\n                onChange: e => setAppointmentDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"floatingDate\",\n                children: \"Select Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-floating\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                className: \"form-control\",\n                id: \"floatingTime\",\n                value: appointmentTime,\n                onChange: e => setAppointmentTime(e.target.value),\n                disabled: !selectedDoctor\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"floatingTime\",\n                children: \"Select Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 19\n            }, this), selectedDoctor && getUnavailableTimes().includes(appointmentTime) && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-danger mt-2\",\n              children: \" This time slot is unavailable!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12 d-flex justify-content-end\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success appointment-btn\",\n              onClick: handleBookAppointment,\n              disabled: !selectedDoctor || !appointmentDate || !appointmentTime || getUnavailableTimes().includes(appointmentTime),\n              children: \"Book Appointment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"My Appointments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"border border-3 border-success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 15\n        }, this), appointments.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-muted\",\n          children: \"No active appointments.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group\",\n          children: appointments.map((appointment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item d-flex justify-content-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [appointment.date, \" -  \", appointment.time, \" - \", appointment.doctor]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger btn-sm\",\n              onClick: () => handleCancelAppointment(index),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"RkhkZIUzQRDBMib5Z/2kqleH33I=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","Header","Footer","LineChart","Line","XAxis","YAxis","Tooltip","Legend","ResponsiveContainer","Swal","jsxDEV","_jsxDEV","Dashboard","userName","_s","sugarData","setSugarData","time","getDate","beforeEating","afterEating","setBeforeEating","setAfterEating","selectedRange","setSelectedRange","selectedDoctor","setSelectedDoctor","appointmentDate","setAppointmentDate","appointmentTime","setAppointmentTime","appointments","setAppointments","doctors","name","unavailableTimes","daysAgo","date","Date","setDate","toLocaleDateString","handleChange","e","target","value","handleBookAppointment","newAppointment","doctor","handleCancelAppointment","index","updatedAppointments","filter","_","i","getUnavailableTimes","find","doc","handleAddSugarData","now","hours","getHours","alert","generateChartData","dates","today","push","map","entry","data","reverse","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","placeholder","onChange","htmlFor","onClick","disabled","width","height","dataKey","stroke","strokeWidth","dot","r","includes","length","appointment","_c","$RefreshReg$"],"sources":["D:/Kumaran project/medilocker/src/pages/Dashboard.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import Header from \"../components/Header\";\r\n// import Footer from \"../components/Footer\";\r\n\r\n// const Dashboard = ({ userName = \"Kumaran\" }) => {\r\n//   const [selectedDoctor, setSelectedDoctor] = useState(\"\");\r\n//   const [appointmentDate, setAppointmentDate] = useState(\"\");\r\n//   const [appointmentTime, setAppointmentTime] = useState(\"\");\r\n//   const [appointments, setAppointments] = useState([]);\r\n\r\n//   const doctors = [\r\n//     { name: \"Dr. John - Cardiologist\", unavailableTimes: [\"10:00\", \"15:00\"] },\r\n//     { name: \"Dr. Smith - Dermatologist\", unavailableTimes: [\"12:30\", \"16:00\"] },\r\n//     { name: \"Dr. Sam - Neurologist\", unavailableTimes: [\"09:00\", \"14:00\"] },\r\n//     { name: \"Dr. Johnson - Orthopedic\", unavailableTimes: [\"11:00\", \"17:30\"] },\r\n//   ];\r\n\r\n//   const handleChange = (e) => {\r\n//     setSelectedDoctor(e.target.value);\r\n//   };\r\n\r\n//   const handleBookAppointment = () => {\r\n//     if (selectedDoctor && appointmentDate && appointmentTime) {\r\n//       const newAppointment = {\r\n//         doctor: selectedDoctor,\r\n//         date: appointmentDate,\r\n//         time: appointmentTime,\r\n//       };\r\n\r\n//       setAppointments([...appointments, newAppointment]);\r\n//       setSelectedDoctor(\"\");\r\n//       setAppointmentDate(\"\");\r\n//       setAppointmentTime(\"\");\r\n//     }\r\n//   };\r\n\r\n//   const handleCancelAppointment = (index) => {\r\n//     const updatedAppointments = appointments.filter((_, i) => i !== index);\r\n//     setAppointments(updatedAppointments);\r\n//   };\r\n\r\n//   const getUnavailableTimes = () => {\r\n//     const doctor = doctors.find((doc) => doc.name === selectedDoctor);\r\n//     return doctor ? doctor.unavailableTimes : [];\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"dashboard\">\r\n//       <Header/>\r\n//         <section className=\"dashboardsection\">\r\n//           <div className=\"container mt-4\">\r\n//             <h2 className=\"text-start\">Dashboard</h2>\r\n//             <h3 className=\"text-start mt-3\">Welcome, {userName}!</h3>\r\n//             <div className=\"mt-4\">\r\n//               <h4>Book an Appointment</h4>\r\n//               <hr className=\"border border-3 border-success\" />\r\n\r\n//               <div className=\"row g-3 mt-2\">\r\n//                 <div className=\"col-md-4\">\r\n//                   <div className=\"form-floating\">\r\n//                     <select\r\n//                       className=\"form-control\"\r\n//                       id=\"floatingDoctor\"\r\n//                       value={selectedDoctor}\r\n//                       onChange={handleChange}\r\n//                     >\r\n//                       <option value=\"\">Select a Doctor</option>\r\n//                       {doctors.map((doctor, index) => (\r\n//                         <option key={index} value={doctor.name}>\r\n//                           {doctor.name}\r\n//                         </option>\r\n//                       ))}\r\n//                     </select>\r\n//                     <label htmlFor=\"floatingDoctor\">Choose a Doctor</label>\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"col-md-4\">\r\n//                   <div className=\"form-floating\">\r\n//                     <input\r\n//                       type=\"date\"\r\n//                       className=\"form-control\"\r\n//                       id=\"floatingDate\"\r\n//                       value={appointmentDate}\r\n//                       onChange={(e) => setAppointmentDate(e.target.value)}\r\n//                     />\r\n//                     <label htmlFor=\"floatingDate\">Select Date</label>\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"col-md-4\">\r\n//                   <div className=\"form-floating\">\r\n//                     <input\r\n//                       type=\"time\"\r\n//                       className=\"form-control\"\r\n//                       id=\"floatingTime\"\r\n//                       value={appointmentTime}\r\n//                       onChange={(e) => setAppointmentTime(e.target.value)}\r\n//                       disabled={!selectedDoctor}\r\n//                     />\r\n//                     <label htmlFor=\"floatingTime\">Select Time</label>\r\n//                   </div>\r\n//                   {selectedDoctor && getUnavailableTimes().includes(appointmentTime) && (\r\n//                     <p className=\"text-danger mt-2\"> This time slot is unavailable!</p>\r\n//                   )}\r\n//                 </div>\r\n//                 <div className=\"col-md-12 d-flex justify-content-end\">\r\n//                   <button\r\n//                     className=\"btn btn-success appointment-btn\"\r\n//                     onClick={handleBookAppointment}\r\n//                     disabled={\r\n//                       !selectedDoctor ||\r\n//                       !appointmentDate ||\r\n//                       !appointmentTime ||\r\n//                       getUnavailableTimes().includes(appointmentTime)\r\n//                     }\r\n//                   >\r\n//                     Book Appointment\r\n//                   </button>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//             <div className=\"mt-5\">\r\n//               <h4>My Appointments</h4>\r\n//               <hr className=\"border border-3 border-success\" />\r\n//               {appointments.length === 0 ? (\r\n//                 <p className=\"text-muted\">No active appointments.</p>\r\n//               ) : (\r\n//                 <ul className=\"list-group\">\r\n//                   {appointments.map((appointment, index) => (\r\n//                     <li key={index} className=\"list-group-item d-flex justify-content-between\">\r\n//                       <span>\r\n//                         {appointment.date} -  {appointment.time} - {appointment.doctor}\r\n//                       </span>\r\n//                       <button\r\n//                         className=\"btn btn-danger btn-sm\"\r\n//                         onClick={() => handleCancelAppointment(index)}\r\n//                       >\r\n//                         Cancel\r\n//                       </button>\r\n//                     </li>\r\n//                   ))}\r\n//                 </ul>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//         </section>\r\n//       <Footer/>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Dashboard;\r\nimport React, { useState } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst Dashboard = ({ userName = \"Kumaran\" }) => {\r\n  const [sugarData, setSugarData] = useState([ \r\n    { time: getDate(-6), beforeEating: 110, afterEating: 140 },\r\n    { time: getDate(-5), beforeEating: 120, afterEating: 150 },\r\n    { time: getDate(-4), beforeEating: 115, afterEating: 135 },\r\n    { time: getDate(-3), beforeEating: 130, afterEating: 160 },\r\n    { time: getDate(-2), beforeEating: 125, afterEating: 155 },\r\n    { time: getDate(-1), beforeEating: 118, afterEating: 148 },\r\n    { time: getDate(0), beforeEating: null, afterEating: null },]);\r\n  const [beforeEating, setBeforeEating] = useState(\"\");\r\n  const [afterEating, setAfterEating] = useState(\"\");\r\n  const [selectedRange, setSelectedRange] = useState(\"week\");\r\n\r\n  const [selectedDoctor, setSelectedDoctor] = useState(\"\");\r\n  const [appointmentDate, setAppointmentDate] = useState(\"\");\r\n  const [appointmentTime, setAppointmentTime] = useState(\"\");\r\n  const [appointments, setAppointments] = useState([]);\r\n\r\n  const doctors = [\r\n    { name: \"Dr. John - Cardiologist\", unavailableTimes: [\"10:00\", \"15:00\"] },\r\n    { name: \"Dr. Smith - Dermatologist\", unavailableTimes: [\"12:30\", \"16:00\"] },\r\n    { name: \"Dr. Sam - Neurologist\", unavailableTimes: [\"09:00\", \"14:00\"] },\r\n    { name: \"Dr. Johnson - Orthopedic\", unavailableTimes: [\"11:00\", \"17:30\"] },\r\n  ];\r\n\r\n  function getDate(daysAgo) {\r\n    let date = new Date();\r\n    date.setDate(date.getDate() + daysAgo);\r\n    return date.toLocaleDateString();\r\n  }\r\n    \r\n  const handleChange = (e) => {\r\n    setSelectedDoctor(e.target.value);\r\n  };\r\n\r\n  const handleBookAppointment = () => {\r\n    if (selectedDoctor && appointmentDate && appointmentTime) {\r\n      const newAppointment = {\r\n        doctor: selectedDoctor,\r\n        date: appointmentDate,\r\n        time: appointmentTime,\r\n      };\r\n\r\n      setAppointments([...appointments, newAppointment]);\r\n      setSelectedDoctor(\"\");\r\n      setAppointmentDate(\"\");\r\n      setAppointmentTime(\"\");\r\n    }\r\n  };\r\n\r\n  const handleCancelAppointment = (index) => {\r\n    const updatedAppointments = appointments.filter((_, i) => i !== index);\r\n    setAppointments(updatedAppointments);\r\n  };\r\n\r\n  const getUnavailableTimes = () => {\r\n    const doctor = doctors.find((doc) => doc.name === selectedDoctor);\r\n    return doctor ? doctor.unavailableTimes : [];\r\n  };\r\n\r\n  // const handleAddSugarData = () => {\r\n  //   if (beforeEating && afterEating) {\r\n  //     setSugarData([...sugarData, { time: new Date().toLocaleDateString(), beforeEating, afterEating }]);\r\n  //     setBeforeEating(\"\");\r\n  //     setAfterEating(\"\");\r\n  //   }\r\n  // };\r\n\r\n  const handleAddSugarData = () => {\r\n    const now = new Date();\r\n    const hours = now.getHours();\r\n    \r\n    if (hours < 6 || hours >= 8) {\r\n      // Swal.fire(\"Error\",\"Sugar level data can only be uploaded between 6 AM and 8 AM.\",\"error\");\r\n      alert(\"Sugar level data can only be uploaded between 6 AM and 8 AM.\");\r\n      return;\r\n    }\r\n\r\n    if (beforeEating && afterEating) {\r\n      setSugarData([...sugarData, { time: now.toLocaleDateString(), beforeEating, afterEating }]);\r\n      setBeforeEating(\"\");\r\n      setAfterEating(\"\");\r\n    }\r\n  };\r\n  const generateChartData = () => {\r\n    let dates = [];\r\n    let today = new Date();\r\n    for (let i = 0; i < (selectedRange === \"week\" ? 7 : 30); i++) {\r\n      let date = new Date(today);\r\n      date.setDate(today.getDate() - i);\r\n      dates.push(date.toLocaleDateString());\r\n    }\r\n\r\n    return dates\r\n      .map((date) => {\r\n        let entry = sugarData.find((data) => data.time === date);\r\n        return entry\r\n          ? entry\r\n          : { time: date, beforeEating: null, afterEating: null };\r\n      })\r\n      .reverse();\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <Header />\r\n      <section className=\"dashboardsection\">\r\n        <div className=\"container mt-4\">\r\n          <h2 className=\"text-start\">Dashboard</h2>\r\n          <h3 className=\"text-start mt-3\">Welcome, {userName}!</h3>\r\n\r\n          <div className=\"mt-5\">\r\n            <h4>Track Your Sugar Levels</h4>\r\n            <hr className=\"border border-3 border-success\" />\r\n            <div className=\"row g-3\">\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-floating\">\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    id=\"beforeEating\"\r\n                    placeholder=\"Before Eating\"\r\n                    value={beforeEating}\r\n                    onChange={(e) => setBeforeEating(e.target.value)}\r\n                  />\r\n                  <label htmlFor=\"beforeEating\">Sugar Level (Before Eating)</label>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-floating\">\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    id=\"afterEating\"\r\n                    placeholder=\"After Eating\"\r\n                    value={afterEating}\r\n                    onChange={(e) => setAfterEating(e.target.value)}\r\n                  />\r\n                  <label htmlFor=\"afterEating\">Sugar Level (After Eating)</label>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4 d-flex align-items-center\">\r\n                <button\r\n                  className=\"btn btn-success w-100\"\r\n                  onClick={handleAddSugarData}\r\n                  disabled={!beforeEating || !afterEating}\r\n                >\r\n                  Add Data\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* graph */}\r\n          <div className=\"mt-5\">\r\n            <h4>Sugar Level Graph</h4>\r\n            <hr className=\"border border-3 border-success\" />\r\n            <div className=\"d-flex\">\r\n              <button\r\n                className={`btn ${selectedRange === \"week\" ? \"btn-success\" : \"btn-outline-success\"} me-2`}\r\n                onClick={() => setSelectedRange(\"week\")}\r\n              >\r\n                Weekly View\r\n              </button>\r\n              <button\r\n                className={`btn ${selectedRange === \"month\" ? \"btn-success\" : \"btn-outline-success\"}`}\r\n                onClick={() => setSelectedRange(\"month\")}\r\n              >\r\n                Monthly View\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mt-5\">\r\n            <ResponsiveContainer width=\"100%\" height={300}>\r\n              <LineChart data={generateChartData()}>\r\n                <XAxis dataKey=\"time\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />               \r\n                <Line type=\"monotone\" dataKey=\"beforeEating\" stroke=\"#8884d8\" strokeWidth={3} dot={{ r: 5 }} />\r\n                <Line type=\"monotone\" dataKey=\"afterEating\" stroke=\"#82ca9d\" strokeWidth={3} dot={{ r: 5 }} />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n\r\n        {/* book appointment */}\r\n        <div className=\"mt-5\">\r\n               <h4>Book an Appointment</h4>\r\n               <hr className=\"border border-3 border-success\" />\r\n               <div className=\"row g-3 mt-2\">\r\n                 <div className=\"col-md-4\">\r\n                     <div className=\"form-floating\">\r\n                     <select\r\n                      className=\"form-control\"\r\n                      id=\"floatingDoctor\"\r\n                      value={selectedDoctor}\r\n                      onChange={handleChange}>\r\n                      <option value=\"\">Select a Doctor</option>\r\n                      {doctors.map((doctor, index) => (\r\n                        <option key={index} value={doctor.name}>\r\n                          {doctor.name}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    <label htmlFor=\"floatingDoctor\">Choose a Doctor</label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-floating\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control\"\r\n                      id=\"floatingDate\"\r\n                      value={appointmentDate}\r\n                      onChange={(e) => setAppointmentDate(e.target.value)}\r\n                    />\r\n                    <label htmlFor=\"floatingDate\">Select Date</label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-floating\">\r\n                    <input\r\n                      type=\"time\"\r\n                      className=\"form-control\"\r\n                      id=\"floatingTime\"\r\n                      value={appointmentTime}\r\n                      onChange={(e) => setAppointmentTime(e.target.value)}\r\n                      disabled={!selectedDoctor}\r\n                    />\r\n                    <label htmlFor=\"floatingTime\">Select Time</label>\r\n                  </div>\r\n                  {selectedDoctor && getUnavailableTimes().includes(appointmentTime) && (\r\n                    <p className=\"text-danger mt-2\"> This time slot is unavailable!</p>\r\n                  )}\r\n                </div>\r\n                <div className=\"col-md-12 d-flex justify-content-end\">\r\n                  <button\r\n                    className=\"btn btn-success appointment-btn\"\r\n                    onClick={handleBookAppointment}\r\n                    disabled={\r\n                      !selectedDoctor ||\r\n                      !appointmentDate ||\r\n                      !appointmentTime ||\r\n                      getUnavailableTimes().includes(appointmentTime)\r\n                    }>\r\n                    Book Appointment\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* my appointments */}\r\n            <div className=\"mt-5\">\r\n              <h4>My Appointments</h4>\r\n              <hr className=\"border border-3 border-success\" />\r\n              {appointments.length === 0 ? (\r\n                <p className=\"text-muted\">No active appointments.</p>\r\n              ) : (\r\n                <ul className=\"list-group\">\r\n                  {appointments.map((appointment, index) => (\r\n                    <li key={index} className=\"list-group-item d-flex justify-content-between\">\r\n                      <span>\r\n                        {appointment.date} -  {appointment.time} - {appointment.doctor}\r\n                      </span>\r\n                      <button\r\n                        className=\"btn btn-danger btn-sm\"\r\n                        onClick={() => handleCancelAppointment(index)}\r\n                      >\r\n                        Cancel\r\n                      </button>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              )}\r\n            </div>\r\n      </section>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}