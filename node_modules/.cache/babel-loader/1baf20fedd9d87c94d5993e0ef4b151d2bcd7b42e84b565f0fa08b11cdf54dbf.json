{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kumaran project\\\\medilocker\\\\src\\\\pages\\\\Hospital.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport axios from \"axios\";\nimport L from \"leaflet\";\nimport iconUrl from \"leaflet/dist/images/marker-icon.png\";\nimport iconShadow from \"leaflet/dist/images/marker-shadow.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\")\n});\nconst Hospital = () => {\n  _s();\n  const [location, setLocation] = useState({\n    lat: 11.1271,\n    lng: 78.6569\n  }); // Default: Tamil Nadu\n  const [hospitals, setHospitals] = useState([]);\n  useEffect(() => {\n    // Get current location\n    navigator.geolocation.getCurrentPosition(position => {\n      setLocation({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      });\n      fetchHospitals(position.coords.latitude, position.coords.longitude);\n    }, () => {\n      // If denied, use default location\n      fetchHospitals(location.lat, location.lng);\n    });\n  }, []);\n  const fetchHospitals = async (lat, lng) => {\n    try {\n      const response = await axios.get(`https://nominatim.openstreetmap.org/search?format=json&q=hospital+near+${lat},${lng}`);\n      setHospitals(response.data);\n    } catch (error) {\n      console.error(\"Error fetching hospitals:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hospital\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [location.lat, location.lng],\n      zoom: 10,\n      style: {\n        height: \"500px\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: [location.lat, location.lng],\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: \"Your Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), hospitals.map((hospital, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [hospital.lat, hospital.lon],\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: hospital.display_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(Hospital, \"fyewATpIXcSey6V8bOzV65gM5fo=\");\n_c = Hospital;\nexport default Hospital;\nvar _c;\n$RefreshReg$(_c, \"Hospital\");","map":{"version":3,"names":["React","useState","useEffect","Header","Footer","MapContainer","TileLayer","Marker","Popup","axios","L","iconUrl","iconShadow","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","shadowUrl","Hospital","_s","location","setLocation","lat","lng","hospitals","setHospitals","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fetchHospitals","response","get","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","style","height","width","url","map","hospital","index","lon","display_name","_c","$RefreshReg$"],"sources":["D:/Kumaran project/medilocker/src/pages/Hospital.jsx"],"sourcesContent":["import React,{ useState, useEffect } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport axios from \"axios\";\r\nimport L from \"leaflet\";\r\n\r\n\r\nimport iconUrl from \"leaflet/dist/images/marker-icon.png\";\r\nimport iconShadow from \"leaflet/dist/images/marker-shadow.png\";\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\r\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\r\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\r\n});\r\n\r\nconst Hospital = () => {\r\n\r\n    const [location, setLocation] = useState({ lat: 11.1271, lng: 78.6569 }); // Default: Tamil Nadu\r\n  const [hospitals, setHospitals] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Get current location\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        setLocation({\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude,\r\n        });\r\n        fetchHospitals(position.coords.latitude, position.coords.longitude);\r\n      },\r\n      () => {\r\n        // If denied, use default location\r\n        fetchHospitals(location.lat, location.lng);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  const fetchHospitals = async (lat, lng) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://nominatim.openstreetmap.org/search?format=json&q=hospital+near+${lat},${lng}`\r\n      );\r\n      setHospitals(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching hospitals:\", error);\r\n    }\r\n  };\r\n\r\n\r\n    return(\r\n        <div className=\"hospital\">\r\n            <Header/>\r\n            {/* <section className=\"hospitalsection\">\r\n                <iframe src=\"https://www.google.com/maps/embed?pb=!1m16!1m12!1m3!1d31162.166167737803!2d80.15402188417629!3d12.498203435207312!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!2m1!1snearby%20hospital!5e0!3m2!1sen!2sin!4v1743770320583!5m2!1sen!2sin\" \r\n                width=\"600\" height=\"450\"  allowfullscreen=\"\" loading=\"lazy\" referrerpolicy=\"no-referrer-when-downgrade\"></iframe>\r\n            </section> */}\r\n            <MapContainer center={[location.lat, location.lng]} zoom={10} style={{ height: \"500px\", width: \"100%\" }}>\r\n                <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n                <Marker position={[location.lat, location.lng]}>\r\n                    <Popup>Your Location</Popup>\r\n                </Marker>\r\n                {hospitals.map((hospital, index) => (\r\n                    <Marker key={index} position={[hospital.lat, hospital.lon]}>\r\n                    <Popup>{hospital.display_name}</Popup>\r\n                    </Marker>\r\n                ))}\r\n            </MapContainer>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Hospital;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,QAAQ,eAAe;AACtE,OAAO,0BAA0B;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,CAAC,MAAM,SAAS;AAGvB,OAAOC,OAAO,MAAM,qCAAqC;AACzD,OAAOC,UAAU,MAAM,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,OAAOJ,CAAC,CAACK,IAAI,CAACC,OAAO,CAACC,SAAS,CAACC,WAAW;AAC3CR,CAAC,CAACK,IAAI,CAACC,OAAO,CAACG,YAAY,CAAC;EAC1BC,aAAa,EAAEC,OAAO,CAAC,wCAAwC,CAAC;EAChEV,OAAO,EAAEU,OAAO,CAAC,qCAAqC,CAAC;EACvDC,SAAS,EAAED,OAAO,CAAC,uCAAuC;AAC5D,CAAC,CAAC;AAEF,MAAME,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC;IAAE0B,GAAG,EAAE,OAAO;IAAEC,GAAG,EAAE;EAAQ,CAAC,CAAC,CAAC,CAAC;EAC5E,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd;IACA6B,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCC,QAAQ,IAAK;MACZR,WAAW,CAAC;QACVC,GAAG,EAAEO,QAAQ,CAACC,MAAM,CAACC,QAAQ;QAC7BR,GAAG,EAAEM,QAAQ,CAACC,MAAM,CAACE;MACvB,CAAC,CAAC;MACFC,cAAc,CAACJ,QAAQ,CAACC,MAAM,CAACC,QAAQ,EAAEF,QAAQ,CAACC,MAAM,CAACE,SAAS,CAAC;IACrE,CAAC,EACD,MAAM;MACJ;MACAC,cAAc,CAACb,QAAQ,CAACE,GAAG,EAAEF,QAAQ,CAACG,GAAG,CAAC;IAC5C,CACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,cAAc,GAAG,MAAAA,CAAOX,GAAG,EAAEC,GAAG,KAAK;IACzC,IAAI;MACF,MAAMW,QAAQ,GAAG,MAAM9B,KAAK,CAAC+B,GAAG,CAC9B,0EAA0Eb,GAAG,IAAIC,GAAG,EACtF,CAAC;MACDE,YAAY,CAACS,QAAQ,CAACE,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAGC,oBACI5B,OAAA;IAAK8B,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACrB/B,OAAA,CAACX,MAAM;MAAA2C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAKTnC,OAAA,CAACT,YAAY;MAAC6C,MAAM,EAAE,CAACzB,QAAQ,CAACE,GAAG,EAAEF,QAAQ,CAACG,GAAG,CAAE;MAACuB,IAAI,EAAE,EAAG;MAACC,KAAK,EAAE;QAAEC,MAAM,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAO,CAAE;MAAAT,QAAA,gBACpG/B,OAAA,CAACR,SAAS;QAACiD,GAAG,EAAC;MAAoD;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtEnC,OAAA,CAACP,MAAM;QAAC2B,QAAQ,EAAE,CAACT,QAAQ,CAACE,GAAG,EAAEF,QAAQ,CAACG,GAAG,CAAE;QAAAiB,QAAA,eAC3C/B,OAAA,CAACN,KAAK;UAAAqC,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,EACRpB,SAAS,CAAC2B,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC3B5C,OAAA,CAACP,MAAM;QAAa2B,QAAQ,EAAE,CAACuB,QAAQ,CAAC9B,GAAG,EAAE8B,QAAQ,CAACE,GAAG,CAAE;QAAAd,QAAA,eAC3D/B,OAAA,CAACN,KAAK;UAAAqC,QAAA,EAAEY,QAAQ,CAACG;QAAY;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC,GADzBS,KAAK;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC,eACfnC,OAAA,CAACV,MAAM;MAAA0C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAAAzB,EAAA,CAvDKD,QAAQ;AAAAsC,EAAA,GAARtC,QAAQ;AAyDd,eAAeA,QAAQ;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}