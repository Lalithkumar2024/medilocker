{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kumaran project\\\\medilocker\\\\src\\\\pages\\\\ManagePatient.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState , useEffect } from \"react\";\n// import Header from \"../components/Header\";\n// import Footer from \"../components/Footer\";\n// import Swal from \"sweetalert2\";\n// import { addPatient,updatePatient,getAllPatients,deletePatient,getPatientId } from \"../api/PatientService\";\n// import { registerUser,updateUser,getAllUsers,deleteUser } from \"../api/UserService\";\n// import { uploadDocument } from \"../api/DocumentService\";\n\n// const ManagePatient = () => {\n//   const [patients, setPatients] = useState([]);\n//   const [users, setUsers] = useState([]);\n\n// const [formData, setFormData] = useState({\n//   name: \"\", \n//   dateOfBirth: \"\", \n//   emailId: \"\", \n//   phone: \"\", \n//   gender: \"\", \n//   address: \"\", \n//   password: \"\",\n//   role: \"\", \n//   height: \"\",\n//   weight: \"\",\n//   bloodGroup: \"\",\n//   bloodPressure: \"\",\n//   sugarLevel: \"\", \n//   bloodDonationDate: \"\",\n//   document: null\n// });\n\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [selectedPatient, setSelectedPatient] = useState(null);\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleFileUpload = (event) => {\n//     const file = event.target.files[0];\n//     setFormData({ ...formData, document: file });\n//   };\n\n//   useEffect(() => {\n//     fetchPatients();\n//   }, []);\n\n//   const fetchPatients = async () => {\n//     try {\n//       const response = await getAllPatients();\n//       const res = await getAllUsers();\n//       setUsers(res.data);\n//       setPatients(response.data);\n//     } catch (error) {\n//       console.error(\"Error fetching patients:\", error);\n//     }\n//   };\n\n// const handleAddPatient = async () => {\n//   if (!formData.name || !formData.emailId || !formData.phone || !formData.password || !formData.role) {\n//     Swal.fire(\"Error\", \"Please fill in all required fields.\", \"error\");\n//     return;\n//   }\n\n//   try {\n//     const userPayload = {\n//       name: formData.name,\n//       emailId: formData.emailId,\n//       dateOfBirth: formData.dateOfBirth,\n//       phone: formData.phone,\n//       gender: formData.gender,\n//       address: formData.address,\n//       password: formData.password,\n//       role: formData.role,\n//     };\n//     const userResponse = await registerUser(userPayload);\n//     const userId = userResponse.data.user_id;\n//     console.log(userId);\n\n//     const patient = await getPatientId(userId);\n//     const patientId = patient.data;\n//     console.log(patientId); \n//     const patientPayload = {\n//       height: formData.height,\n//       weight: formData.weight,\n//       bloodGroup: formData.bloodGroup,\n//       bloodPressure: formData.bloodPressure,\n//       sugarLevel: formData.sugarLevel,\n//       bloodDonationDate: formData.bloodDonationDate,\n//     };\n//     await addPatient(patientId,patientPayload);\n\n//     if (formData.document) {\n//       const formDataObj = new FormData();\n//       formDataObj.append(\"file\", formData.document);\n//       // formDataObj.append(\"userId\", userId); \n\n//       await uploadDocument(patientId,formDataObj);\n//     }\n\n//     Swal.fire(\"Success\", \"Patient added successfully!\", \"success\");\n//     resetForm();\n//   } catch (error) {\n//     console.error(\"Error adding patient:\", error);\n//     Swal.fire(\"Error\", \"Something went wrong while saving patient data.\", \"error\");\n//   }\n// };\n\n//   // const handleEditPatient = (patient) => {\n//   //   setFormData(patient);\n//   //   setIsEditing(true);\n//   //   setSelectedPatient(patient);\n//   // };\n//   const handleEditPatient = (patient) => {\n//     const user = users.find((u) => u.user_id === patient.user_id);\n//     setFormData({\n//       name: user?.name || \"\",\n//       dateOfBirth: user?.dateOfBirth || \"\",\n//       emailId: user?.emailId || \"\",\n//       phone: user?.phone || \"\",\n//       gender: user?.gender || \"\",\n//       address: user?.address || \"\",\n//       password: user?.password || \"\",\n//       role: user?.role || \"\",\n//       height: patient?.height || \"\",\n//       weight: patient?.weight || \"\",\n//       bloodGroup: patient?.bloodGroup || \"\",\n//       bloodPressure: patient?.bloodPressure || \"\",\n//       sugarLevel: patient?.sugarLevel || \"\",\n//       bloodDonationDate: patient?.bloodDonationDate || \"\",\n//       document: null,\n//     });\n//     setIsEditing(true);\n//     setSelectedPatient(patient);\n//   };\n\n//   // const handleUpdatePatient = () => {\n//   //   setPatients(patients.map(pat => (pat.id === formData.id ? formData : pat)));\n//   //   Swal.fire(\"Success\", \"Updated Successful!\", \"success\");  \n//   //   resetForm();\n//   // };\n//   const handleUpdatePatient = async () => {\n\n//     if(!selectedPatient) return;\n\n//     const userId = selectedPatient.userId;\n//     console.log(userId);\n//     const patientId =selectedPatient.patientId;\n//     console.log(patientId);\n\n//     try { \n//       const updatedUser = {\n//         name: formData.name,\n//         emailId: formData.emailId,\n//         dateOfBirth: formData.dateOfBirth,\n//         phone: formData.phone,\n//         gender: formData.gender,\n//         address: formData.address, \n//         password: formData.password,\n//         role: formData.role,\n//       };\n\n//       const updatedPatient = {\n//         height: formData.height,\n//         weight: formData.weight,\n//         bloodGroup: formData.bloodGroup,\n//         bloodPressure: formData.bloodPressure,\n//         sugarLevel: formData.sugarLevel,\n//         bloodDonationDate: formData.bloodDonationDate,\n//       };\n\n//       await updateUser(userId, updatedUser);\n//       await updatePatient(patientId, updatedPatient); \n\n//       Swal.fire(\"Success\", \"Patient updated successfully\", \"success\");\n//       fetchPatients();\n//       resetForm();\n//     } catch (error) {\n//       console.error(\"Error updating patient:\", error);\n//       Swal.fire(\"Error\", \"Failed to update patient\", \"error\");\n//     }\n//   };\n\n//   // const handleDeletePatient = (id) => {\n//   //   setPatients(patients.filter(pat => pat.id !== id));\n//   //   Swal.fire(\"Success\", \"Deleted Successful!\", \"success\");    \n//   // };\n\n//   const handleDeletePatient = async (patientId, userId) => {\n//     try {\n//       await deletePatient(patientId);\n//       await deleteUser(userId);\n//       Swal.fire(\"Deleted\", \"Patient deleted successfully\", \"success\");\n//       fetchPatients();\n//     } catch (error) {\n//       console.error(\"Error deleting patient:\", error);\n//       Swal.fire(\"Error\", \"Failed to delete patient\", \"error\");\n//     }\n//   };\n\n// const resetForm = () => {\n//   setFormData({\n//     id: null, \n//     name: \"\", \n//     dateOfBirth: \"\", \n//     emailId: \"\", \n//     phone: \"\", \n//     gender: \"\", \n//     address: \"\",  \n//     height: \"\",\n//     weight: \"\",\n//     bloodGroup: \"\",\n//     bloodPressure: \"\",\n//     sugarLevel: \"\",\n//     password: \"\",\n//     role: \"\",\n//     bloodDonationDate: \"\",\n//     document: null\n//   });\n//   setIsEditing(false);\n//   setSelectedPatient(null);\n// };\n\n//   return (\n//     <div className=\"managepatient\">\n//       <Header/>\n//         <section className=\"managepatientsection\">\n//           <div className=\"container mt-4\">\n//             <h2 className=\"text-start\">Manage Patients</h2>\n\n//             <div className=\"mt-4\">\n//               <h4>{isEditing ? \"Edit Patient\" : \"Add Patient\"}</h4>\n//               <hr className=\"border border-3 border-success\" />\n//                 <div className=\"row g-3 mt-2\">\n\n// <div className=\"col-md-6\">\n//   <div className=\"form-floating\">\n//     <input \n//       type=\"text\"\n//       id=\"floatingName\"\n//       name=\"name\"\n//       value={formData.name}\n//       onChange={handleChange}\n//       placeholder=\"Enter Patient Name\"\n//       required\n//       autoComplete=\"off\"\n//       className=\"form-control\"/>\n//     <label htmlFor=\"floatingName\">Name</label>\n//   </div>\n// </div>\n\n// <div className=\"col-md-6\">\n//   <div className=\"form-floating\">\n//     <input \n//       type=\"date\"\n//       id=\"floatingDob\"\n//       name=\"dateOfBirth\"\n//       value={formData.dateOfBirth}\n//       onChange={handleChange}\n//       rplaceholder=\"Enter Date of Birth\"\n//       required\n//       autoComplete=\"off\"\n//       className=\"form-control\"/>\n//     <label htmlFor=\"floatingDob\">Date of Birth</label>\n//   </div>\n// </div>\n\n// <div className=\"col-md-6\">\n//   <div className=\"form-floating\">\n//     <input \n//       type=\"email\"\n//       id=\"floatingEmail\"\n//       name=\"emailId\"\n//       value={formData.emailId}\n//       onChange={handleChange}\n//       placeholder=\"Enter Email\"\n//       required\n//       autoComplete=\"off\"\n//       className=\"form-control\"/>\n//     <label htmlFor=\"floatingEmail\">Email</label>\n//   </div>\n// </div>\n\n// <div className=\"col-md-6\">\n//   <div className=\"form-floating\">\n//     <input \n//       type=\"text\"\n//       id=\"floatingPhone\"\n//       name=\"phone\"\n//       value={formData.phone}\n//       onChange={handleChange}\n//       placeholder=\"Enter Phone Number\"\n//       required\n//       autoComplete=\"off\"\n//       className=\"form-control\"/>\n//     <label htmlFor=\"floatingPhone\">Phone</label>\n//   </div>\n// </div>\n\n// <div className=\"col-md-6\">\n//   <div className=\"form-floating\">\n//     <select\n//         id=\"floatingGender\"\n//         name=\"gender\"\n//         value={formData.gender}\n//         onChange={handleChange}\n//         placeholder=\"Enter Patient Gender\"\n//         required\n//         autoComplete=\"off\"\n//         className=\"form-select\">\n//       <option value=\"\">Select Gender</option>\n//       <option value=\"Male\">Male</option>\n//       <option value=\"Female\">Female</option>\n//       <option value=\"Other\">Other</option>\n//     </select>\n//     <label htmlFor=\"floatingGender\">Gender</label>\n//   </div>\n// </div>\n\n// <div className=\"col-md-6\">\n//   <div className=\"form-floating\">\n//     <input \n//       type=\"text\"\n//       id=\"floatingAddress\"\n//       name=\"address\"\n//       value={formData.address}\n//       onChange={handleChange}\n//       placeholder=\"Enter Address\"\n//       required\n//       autoComplete=\"off\"\n//       className=\"form-control\"/>\n//     <label htmlFor=\"floatingAddress\">Address</label>\n//   </div>\n// </div>\n\n// <div className=\"col-md-6\">\n//   <div className=\"form-floating\">\n//     <input type=\"text\"\n//       id=\"floatingRole\"\n//       name=\"role\"\n//       value={formData.role}\n//       onChange={handleChange}\n//       placeholder=\"Enter Role\"\n//       required\n//       autoComplete=\"off\"\n//       className=\"form-control\" />\n//     <label htmlFor=\"floatingRole\">Role</label>\n//   </div>\n// </div>\n\n// <div className=\"col-md-6\">\n//   <div className=\"form-floating\">\n//     <input type=\"password\"\n//       id=\"floatingPassword\"\n//       name=\"password\"\n//       value={formData.password}\n//       onChange={handleChange}\n//       placeholder=\"Enter your Password\"\n//       required\n//       autoComplete=\"off\"\n//       className=\"form-control\" />\n//     <label htmlFor=\"floatingPassword\">Password</label>\n//   </div>\n// </div>\n\n// <div className=\"col-md-6\">\n//   <div className=\"form-floating\">\n//     <input \n//       type=\"text\"\n//       id=\"floatingHeight\"\n//       name=\"height\"\n//       value={formData.height}\n//       onChange={handleChange}\n//       placeholder=\"Enter Height\"\n//       required\n//       autoComplete=\"off\"\n//       className=\"form-control\"/>\n//     <label htmlFor=\"floatingHeight\">Height</label>\n//   </div>\n// </div>\n\n// <div className=\"col-md-6\">\n//   <div className=\"form-floating\">\n//     <input \n//       type=\"text\"\n//       id=\"floatingWeight\"\n//       name=\"weight\"\n//       value={formData.weight}\n//       onChange={handleChange}\n//       placeholder=\"Enter Weight\"\n//       required\n//       autoComplete=\"off\"\n//       className=\"form-control\"\n//     />\n//     <label htmlFor=\"floatingWeight\">Weight</label>\n//   </div>\n// </div>\n\n// <div className=\"col-md-6\">\n//   <div className=\"form-floating\">\n//     <input \n//       type=\"text\"\n//       id=\"floatingBloodGroup\"\n//       name=\"bloodGroup\"\n//       value={formData.bloodGroup}\n//       onChange={handleChange}\n//       placeholder=\"Enter Blood Group\"\n//       required\n//       autoComplete=\"off\"\n//       className=\"form-control\"/>\n//     <label htmlFor=\"floatingBloodGroup\">Blood Group</label>\n//   </div>\n// </div>\n\n// <div className=\"col-md-6\">\n//   <div className=\"form-floating\">\n//     <select\n//         id=\"floatingBloodPressure\"\n//         name=\"bloodPressure\"\n//         value={formData.bloodPressure}\n//         onChange={handleChange}\n//         className=\"form-select\"\n//         required>\n//       <option value=\"\">Select Blood Pressure</option>\n//       <option value=\"Low\">Low</option>\n//       <option value=\"Normal\">Normal</option>\n//       <option value=\"High\">High</option>\n//     </select>\n//     <label htmlFor=\"floatingBloodPressure\">Blood Pressure</label>\n//   </div>\n// </div>\n\n// <div className=\"col-md-6\">\n//   <div className=\"form-floating\">\n//     <select\n//       id=\"floatingSugarLevel\"\n//       name=\"sugarLevel\"\n//       value={formData.sugarLevel}\n//       onChange={handleChange}\n//       className=\"form-select\"\n//       required>\n//       <option value=\"\">Select Sugar Level</option>\n//       <option value=\"Low\">Low</option>\n//       <option value=\"Normal\">Normal</option>\n//       <option value=\"High\">High</option>\n//     </select>\n//     <label htmlFor=\"floatingSugarLevel\">Sugar Level</label>\n//   </div>\n// </div>\n\n// <div className=\"col-md-6\">\n//   <div className=\"form-floating\">\n//   <input type=\"date\"\n//       id=\"floatingBloodDonationDate\"\n//       name=\"bloodDonationDate\"\n//       value={formData.bloodDonationDate}\n//       onChange={handleChange}\n//       placeholder=\"Enter Blood Donation Date\"\n//       required\n//       autoComplete=\"off\"\n//       className=\"form-control\"/>\n//     <label htmlFor=\"floatingBloodDonationDate\">Blood Donation Date</label>\n//   </div>\n// </div>\n\n//                 </div>\n\n//                 {isEditing && (\n//                   <div className=\"mt-3\">\n//                     <label className=\"form-label\">Upload Document</label>\n//                     <input type=\"file\" className=\"form-control\" onChange={handleFileUpload} />\n//                   </div>\n//                 )}\n\n//                 <div className=\"mt-3\">\n//                   {isEditing ? (\n//                     <>\n//                       <button className=\"btn btn-success me-2\" onClick={handleUpdatePatient}>Update</button>\n//                       <button className=\"btn btn-danger\" onClick={resetForm}>Cancel</button>\n//                     </>\n//                   ) : (\n//                     <button className=\"btn btn-success\" onClick={handleAddPatient}>Add Patient</button>\n//                   )}\n//                 </div>\n//             </div>\n\n//             <div className=\"mt-5\">\n//               <h4>Patients List</h4>\n//               <hr className=\"border border-3 border-success\" />\n//               {patients.length === 0 ? (\n//                 <p className=\"text-muted\">No patients found.</p>\n//               ) : (\n//                 <ul className=\"list-group\">\n//                   {patients.map((patient) => (\n//                     <li key={patient.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\n//                       <div>\n//                         {patient.name} - {patient.emailId} - {patient.phone}\n//                       </div>\n//                       <div>\n//                         <button className=\"btn btn-warning btn-sm me-2\" onClick={() => handleEditPatient(patient)}>Edit</button>\n//                         <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeletePatient(patient.id)}>Delete</button>\n//                       </div>\n//                     </li>\n//                   ))}\n//                 </ul>\n//               )}\n//             </div>\n\n//           </div>\n//         </section>\n//       <Footer/>\n//     </div>\n//   );\n// };\n\n// export default ManagePatient;\n\nimport React, { useState } from \"react\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport Swal from \"sweetalert2\";\nimport { addPatient, updatePatient, getAllPatients, deletePatient, getPatientId } from \"../api/PatientService\";\nimport { registerUser, updateUser, getAllUsers, deleteUser } from \"../api/UserService\";\nimport { uploadDocument } from \"../api/DocumentService\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ManagePatient = () => {\n  _s();\n  const [patients, setPatients] = useState([]);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    dateOfBirth: \"\",\n    emailId: \"\",\n    phone: \"\",\n    gender: \"\",\n    address: \"\",\n    password: \"\",\n    role: \"\",\n    height: \"\",\n    weight: \"\",\n    bloodGroup: \"\",\n    bloodPressure: \"\",\n    sugarLevel: \"\",\n    bloodDonationDate: \"\",\n    document: null\n  });\n  const [isEditing, setIsEditing] = useState(false);\n  const [selectedPatient, setSelectedPatient] = useState(null);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    setFormData({\n      ...formData,\n      document: file\n    });\n  };\n\n  // const handleAddPatient = () => {\n  //   if (!formData.name || !formData.emailId || !formData.phone) {\n  //     alert(\"Please fill in all required fields.\");\n  //     return;\n  //   }\n  //   const newPatient = { ...formData, id: patients.length + 1 };\n  //   setPatients([...patients, newPatient]);\n  //   Swal.fire(\"Success\", \"Patient added Successful!\", \"success\");  \n  //   resetForm();\n  // };\n  const handleAddPatient = async () => {\n    if (!formData.name || !formData.emailId || !formData.phone || !formData.password || !formData.role) {\n      Swal.fire(\"Error\", \"Please fill in all required fields.\", \"error\");\n      return;\n    }\n    try {\n      const userPayload = {\n        name: formData.name,\n        emailId: formData.emailId,\n        dateOfBirth: formData.dateOfBirth,\n        phone: formData.phone,\n        gender: formData.gender,\n        address: formData.address,\n        password: formData.password,\n        role: formData.role\n      };\n      const userResponse = await registerUser(userPayload);\n      const userId = userResponse.data.user_id;\n      console.log(userId);\n      const patient = await getPatientId(userId);\n      const patientId = patient.data;\n      console.log(patientId);\n      const patientPayload = {\n        height: formData.height,\n        weight: formData.weight,\n        bloodGroup: formData.bloodGroup,\n        bloodPressure: formData.bloodPressure,\n        sugarLevel: formData.sugarLevel,\n        bloodDonationDate: formData.bloodDonationDate\n      };\n      await addPatient(patientId, patientPayload);\n      if (formData.document) {\n        const formDataObj = new FormData();\n        formDataObj.append(\"file\", formData.document);\n        // formDataObj.append(\"userId\", userId); \n\n        await uploadDocument(patientId, formDataObj);\n      }\n      Swal.fire(\"Success\", \"Patient added successfully!\", \"success\");\n      resetForm();\n    } catch (error) {\n      console.error(\"Error adding patient:\", error);\n      Swal.fire(\"Error\", \"Something went wrong while saving patient data.\", \"error\");\n    }\n  };\n  const handleEditPatient = patient => {\n    setFormData(patient);\n    setIsEditing(true);\n    setSelectedPatient(patient);\n  };\n  const handleUpdatePatient = () => {\n    setPatients(patients.map(pat => pat.id === formData.id ? formData : pat));\n    Swal.fire(\"Success\", \"Updated Successful!\", \"success\");\n    resetForm();\n  };\n  const handleDeletePatient = id => {\n    setPatients(patients.filter(pat => pat.id !== id));\n    Swal.fire(\"Success\", \"Deleted Successful!\", \"success\");\n  };\n  const resetForm = () => {\n    setFormData({\n      id: null,\n      name: \"\",\n      dateOfBirth: \"\",\n      emailId: \"\",\n      phone: \"\",\n      gender: \"\",\n      address: \"\",\n      height: \"\",\n      weight: \"\",\n      bloodGroup: \"\",\n      bloodPressure: \"\",\n      sugarLevel: \"\",\n      password: \"\",\n      role: \"\",\n      bloodDonationDate: \"\",\n      document: null\n    });\n    setIsEditing(false);\n    setSelectedPatient(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"managepatient\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 666,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"managepatientsection\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-start\",\n          children: \"Manage Patients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: isEditing ? \"Edit Patient\" : \"Add Patient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 672,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"border border-3 border-success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row g-3 mt-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-floating\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"floatingName\",\n                  name: \"name\",\n                  value: formData.name,\n                  onChange: handleChange,\n                  placeholder: \"Enter Patient Name\",\n                  required: true,\n                  autoComplete: \"off\",\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 678,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"floatingName\",\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 688,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 677,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-floating\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  id: \"floatingDob\",\n                  name: \"dateOfBirth\",\n                  value: formData.dateOfBirth,\n                  onChange: handleChange,\n                  rplaceholder: \"Enter Date of Birth\",\n                  required: true,\n                  autoComplete: \"off\",\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 694,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"floatingDob\",\n                  children: \"Date of Birth\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 704,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 693,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 692,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-floating\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  id: \"floatingEmail\",\n                  name: \"emailId\",\n                  value: formData.emailId,\n                  onChange: handleChange,\n                  placeholder: \"Enter Email\",\n                  required: true,\n                  autoComplete: \"off\",\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 710,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"floatingEmail\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 720,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 709,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 708,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-floating\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"floatingPhone\",\n                  name: \"phone\",\n                  value: formData.phone,\n                  onChange: handleChange,\n                  placeholder: \"Enter Phone Number\",\n                  required: true,\n                  autoComplete: \"off\",\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 726,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"floatingPhone\",\n                  children: \"Phone\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 736,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 725,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 724,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-floating\",\n                children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"floatingGender\",\n                  name: \"gender\",\n                  value: formData.gender,\n                  onChange: handleChange,\n                  placeholder: \"Enter Patient Gender\",\n                  required: true,\n                  autoComplete: \"off\",\n                  className: \"form-select\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select Gender\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 751,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Male\",\n                    children: \"Male\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 752,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Female\",\n                    children: \"Female\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 753,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Other\",\n                    children: \"Other\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 754,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 742,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"floatingGender\",\n                  children: \"Gender\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 756,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 741,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 740,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-floating\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"floatingAddress\",\n                  name: \"address\",\n                  value: formData.address,\n                  onChange: handleChange,\n                  placeholder: \"Enter Address\",\n                  required: true,\n                  autoComplete: \"off\",\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 762,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"floatingAddress\",\n                  children: \"Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 772,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 761,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 760,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-floating\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"floatingRole\",\n                  name: \"role\",\n                  value: formData.role,\n                  onChange: handleChange,\n                  placeholder: \"Enter Role\",\n                  required: true,\n                  autoComplete: \"off\",\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 778,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"floatingRole\",\n                  children: \"Role\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 787,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 777,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 776,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-floating\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  id: \"floatingPassword\",\n                  name: \"password\",\n                  value: formData.password,\n                  onChange: handleChange,\n                  placeholder: \"Enter your Password\",\n                  required: true,\n                  autoComplete: \"off\",\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 793,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"floatingPassword\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 802,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 792,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 791,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-floating\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"floatingHeight\",\n                  name: \"height\",\n                  value: formData.height,\n                  onChange: handleChange,\n                  placeholder: \"Enter Height\",\n                  required: true,\n                  autoComplete: \"off\",\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 808,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"floatingHeight\",\n                  children: \"Height\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 818,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 807,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 806,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-floating\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"floatingWeight\",\n                  name: \"weight\",\n                  value: formData.weight,\n                  onChange: handleChange,\n                  placeholder: \"Enter Weight\",\n                  required: true,\n                  autoComplete: \"off\",\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 824,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"floatingWeight\",\n                  children: \"Weight\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 835,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 823,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 822,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-floating\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"floatingBloodGroup\",\n                  name: \"bloodGroup\",\n                  value: formData.bloodGroup,\n                  onChange: handleChange,\n                  placeholder: \"Enter Blood Group\",\n                  required: true,\n                  autoComplete: \"off\",\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 841,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"floatingBloodGroup\",\n                  children: \"Blood Group\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 851,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 840,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 839,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-floating\",\n                children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"floatingBloodPressure\",\n                  name: \"bloodPressure\",\n                  value: formData.bloodPressure,\n                  onChange: handleChange,\n                  className: \"form-select\",\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select Blood Pressure\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 864,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Low\",\n                    children: \"Low\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 865,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Normal\",\n                    children: \"Normal\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 866,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"High\",\n                    children: \"High\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 867,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 857,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"floatingBloodPressure\",\n                  children: \"Blood Pressure\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 869,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 856,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 855,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-floating\",\n                children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"floatingSugarLevel\",\n                  name: \"sugarLevel\",\n                  value: formData.sugarLevel,\n                  onChange: handleChange,\n                  className: \"form-select\",\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select Sugar Level\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 882,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Low\",\n                    children: \"Low\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 883,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Normal\",\n                    children: \"Normal\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 884,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"High\",\n                    children: \"High\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 885,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 875,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"floatingSugarLevel\",\n                  children: \"Sugar Level\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 887,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 874,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 873,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-floating\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  id: \"floatingBloodDonationDate\",\n                  name: \"bloodDonationDate\",\n                  value: formData.bloodDonationDate,\n                  onChange: handleChange,\n                  placeholder: \"Enter Blood Donation Date\",\n                  required: true,\n                  autoComplete: \"off\",\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 893,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"floatingBloodDonationDate\",\n                  children: \"Blood Donation Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 902,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 892,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 891,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 16\n          }, this), isEditing && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Upload Document\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 910,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              className: \"form-control\",\n              onChange: handleFileUpload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 911,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 909,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3\",\n            children: isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-success me-2\",\n                onClick: handleUpdatePatient,\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 918,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: resetForm,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 919,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: handleAddPatient,\n              children: \"Add Patient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 922,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 915,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Patients List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 927,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"border border-3 border-success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 928,\n            columnNumber: 15\n          }, this), patients.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-muted\",\n            children: \"No patients found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 930,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group\",\n            children: patients.map(patient => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item d-flex justify-content-between align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [patient.name, \" - \", patient.email, \" - \", patient.phone]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 935,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-warning btn-sm me-2\",\n                  onClick: () => handleEditPatient(patient),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 939,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-danger btn-sm\",\n                  onClick: () => handleDeletePatient(patient.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 940,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 938,\n                columnNumber: 23\n              }, this)]\n            }, patient.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 934,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 932,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 926,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 667,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 949,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 665,\n    columnNumber: 5\n  }, this);\n};\n_s(ManagePatient, \"m4Eq4OjSjOeZeRSIbNTUORtkC+c=\");\n_c = ManagePatient;\nexport default ManagePatient;\nvar _c;\n$RefreshReg$(_c, \"ManagePatient\");","map":{"version":3,"names":["React","useState","Header","Footer","Swal","addPatient","updatePatient","getAllPatients","deletePatient","getPatientId","registerUser","updateUser","getAllUsers","deleteUser","uploadDocument","jsxDEV","_jsxDEV","Fragment","_Fragment","ManagePatient","_s","patients","setPatients","formData","setFormData","name","dateOfBirth","emailId","phone","gender","address","password","role","height","weight","bloodGroup","bloodPressure","sugarLevel","bloodDonationDate","document","isEditing","setIsEditing","selectedPatient","setSelectedPatient","handleChange","e","target","value","handleFileUpload","event","file","files","handleAddPatient","fire","userPayload","userResponse","userId","data","user_id","console","log","patient","patientId","patientPayload","formDataObj","FormData","append","resetForm","error","handleEditPatient","handleUpdatePatient","map","pat","id","handleDeletePatient","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","required","autoComplete","htmlFor","rplaceholder","onClick","length","email","_c","$RefreshReg$"],"sources":["D:/Kumaran project/medilocker/src/pages/ManagePatient.jsx"],"sourcesContent":["// import React, { useState , useEffect } from \"react\";\r\n// import Header from \"../components/Header\";\r\n// import Footer from \"../components/Footer\";\r\n// import Swal from \"sweetalert2\";\r\n// import { addPatient,updatePatient,getAllPatients,deletePatient,getPatientId } from \"../api/PatientService\";\r\n// import { registerUser,updateUser,getAllUsers,deleteUser } from \"../api/UserService\";\r\n// import { uploadDocument } from \"../api/DocumentService\";\r\n\r\n// const ManagePatient = () => {\r\n//   const [patients, setPatients] = useState([]);\r\n//   const [users, setUsers] = useState([]);\r\n\r\n  // const [formData, setFormData] = useState({\r\n  //   name: \"\", \r\n  //   dateOfBirth: \"\", \r\n  //   emailId: \"\", \r\n  //   phone: \"\", \r\n  //   gender: \"\", \r\n  //   address: \"\", \r\n  //   password: \"\",\r\n  //   role: \"\", \r\n  //   height: \"\",\r\n  //   weight: \"\",\r\n  //   bloodGroup: \"\",\r\n  //   bloodPressure: \"\",\r\n  //   sugarLevel: \"\", \r\n  //   bloodDonationDate: \"\",\r\n  //   document: null\r\n  // });\r\n\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n//   const [selectedPatient, setSelectedPatient] = useState(null);\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleFileUpload = (event) => {\r\n//     const file = event.target.files[0];\r\n//     setFormData({ ...formData, document: file });\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchPatients();\r\n//   }, []);\r\n  \r\n//   const fetchPatients = async () => {\r\n//     try {\r\n//       const response = await getAllPatients();\r\n//       const res = await getAllUsers();\r\n//       setUsers(res.data);\r\n//       setPatients(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching patients:\", error);\r\n//     }\r\n//   };\r\n  \r\n  // const handleAddPatient = async () => {\r\n  //   if (!formData.name || !formData.emailId || !formData.phone || !formData.password || !formData.role) {\r\n  //     Swal.fire(\"Error\", \"Please fill in all required fields.\", \"error\");\r\n  //     return;\r\n  //   }\r\n  \r\n  //   try {\r\n  //     const userPayload = {\r\n  //       name: formData.name,\r\n  //       emailId: formData.emailId,\r\n  //       dateOfBirth: formData.dateOfBirth,\r\n  //       phone: formData.phone,\r\n  //       gender: formData.gender,\r\n  //       address: formData.address,\r\n  //       password: formData.password,\r\n  //       role: formData.role,\r\n  //     };\r\n  //     const userResponse = await registerUser(userPayload);\r\n  //     const userId = userResponse.data.user_id;\r\n  //     console.log(userId);\r\n  \r\n  //     const patient = await getPatientId(userId);\r\n  //     const patientId = patient.data;\r\n  //     console.log(patientId); \r\n  //     const patientPayload = {\r\n  //       height: formData.height,\r\n  //       weight: formData.weight,\r\n  //       bloodGroup: formData.bloodGroup,\r\n  //       bloodPressure: formData.bloodPressure,\r\n  //       sugarLevel: formData.sugarLevel,\r\n  //       bloodDonationDate: formData.bloodDonationDate,\r\n  //     };\r\n  //     await addPatient(patientId,patientPayload);\r\n  \r\n  //     if (formData.document) {\r\n  //       const formDataObj = new FormData();\r\n  //       formDataObj.append(\"file\", formData.document);\r\n  //       // formDataObj.append(\"userId\", userId); \r\n  \r\n  //       await uploadDocument(patientId,formDataObj);\r\n  //     }\r\n  \r\n  //     Swal.fire(\"Success\", \"Patient added successfully!\", \"success\");\r\n  //     resetForm();\r\n  //   } catch (error) {\r\n  //     console.error(\"Error adding patient:\", error);\r\n  //     Swal.fire(\"Error\", \"Something went wrong while saving patient data.\", \"error\");\r\n  //   }\r\n  // };\r\n  \r\n\r\n//   // const handleEditPatient = (patient) => {\r\n//   //   setFormData(patient);\r\n//   //   setIsEditing(true);\r\n//   //   setSelectedPatient(patient);\r\n//   // };\r\n//   const handleEditPatient = (patient) => {\r\n//     const user = users.find((u) => u.user_id === patient.user_id);\r\n//     setFormData({\r\n//       name: user?.name || \"\",\r\n//       dateOfBirth: user?.dateOfBirth || \"\",\r\n//       emailId: user?.emailId || \"\",\r\n//       phone: user?.phone || \"\",\r\n//       gender: user?.gender || \"\",\r\n//       address: user?.address || \"\",\r\n//       password: user?.password || \"\",\r\n//       role: user?.role || \"\",\r\n//       height: patient?.height || \"\",\r\n//       weight: patient?.weight || \"\",\r\n//       bloodGroup: patient?.bloodGroup || \"\",\r\n//       bloodPressure: patient?.bloodPressure || \"\",\r\n//       sugarLevel: patient?.sugarLevel || \"\",\r\n//       bloodDonationDate: patient?.bloodDonationDate || \"\",\r\n//       document: null,\r\n//     });\r\n//     setIsEditing(true);\r\n//     setSelectedPatient(patient);\r\n//   };\r\n  \r\n\r\n//   // const handleUpdatePatient = () => {\r\n//   //   setPatients(patients.map(pat => (pat.id === formData.id ? formData : pat)));\r\n//   //   Swal.fire(\"Success\", \"Updated Successful!\", \"success\");  \r\n//   //   resetForm();\r\n//   // };\r\n//   const handleUpdatePatient = async () => {\r\n\r\n//     if(!selectedPatient) return;\r\n\r\n//     const userId = selectedPatient.userId;\r\n//     console.log(userId);\r\n//     const patientId =selectedPatient.patientId;\r\n//     console.log(patientId);\r\n\r\n//     try { \r\n//       const updatedUser = {\r\n//         name: formData.name,\r\n//         emailId: formData.emailId,\r\n//         dateOfBirth: formData.dateOfBirth,\r\n//         phone: formData.phone,\r\n//         gender: formData.gender,\r\n//         address: formData.address, \r\n//         password: formData.password,\r\n//         role: formData.role,\r\n//       };\r\n  \r\n//       const updatedPatient = {\r\n//         height: formData.height,\r\n//         weight: formData.weight,\r\n//         bloodGroup: formData.bloodGroup,\r\n//         bloodPressure: formData.bloodPressure,\r\n//         sugarLevel: formData.sugarLevel,\r\n//         bloodDonationDate: formData.bloodDonationDate,\r\n//       };\r\n  \r\n//       await updateUser(userId, updatedUser);\r\n//       await updatePatient(patientId, updatedPatient); \r\n  \r\n//       Swal.fire(\"Success\", \"Patient updated successfully\", \"success\");\r\n//       fetchPatients();\r\n//       resetForm();\r\n//     } catch (error) {\r\n//       console.error(\"Error updating patient:\", error);\r\n//       Swal.fire(\"Error\", \"Failed to update patient\", \"error\");\r\n//     }\r\n//   };\r\n  \r\n\r\n//   // const handleDeletePatient = (id) => {\r\n//   //   setPatients(patients.filter(pat => pat.id !== id));\r\n//   //   Swal.fire(\"Success\", \"Deleted Successful!\", \"success\");    \r\n//   // };\r\n\r\n//   const handleDeletePatient = async (patientId, userId) => {\r\n//     try {\r\n//       await deletePatient(patientId);\r\n//       await deleteUser(userId);\r\n//       Swal.fire(\"Deleted\", \"Patient deleted successfully\", \"success\");\r\n//       fetchPatients();\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting patient:\", error);\r\n//       Swal.fire(\"Error\", \"Failed to delete patient\", \"error\");\r\n//     }\r\n//   };\r\n  \r\n\r\n  // const resetForm = () => {\r\n  //   setFormData({\r\n  //     id: null, \r\n  //     name: \"\", \r\n  //     dateOfBirth: \"\", \r\n  //     emailId: \"\", \r\n  //     phone: \"\", \r\n  //     gender: \"\", \r\n  //     address: \"\",  \r\n  //     height: \"\",\r\n  //     weight: \"\",\r\n  //     bloodGroup: \"\",\r\n  //     bloodPressure: \"\",\r\n  //     sugarLevel: \"\",\r\n  //     password: \"\",\r\n  //     role: \"\",\r\n  //     bloodDonationDate: \"\",\r\n  //     document: null\r\n  //   });\r\n  //   setIsEditing(false);\r\n  //   setSelectedPatient(null);\r\n  // };\r\n\r\n//   return (\r\n//     <div className=\"managepatient\">\r\n//       <Header/>\r\n//         <section className=\"managepatientsection\">\r\n//           <div className=\"container mt-4\">\r\n//             <h2 className=\"text-start\">Manage Patients</h2>\r\n            \r\n//             <div className=\"mt-4\">\r\n//               <h4>{isEditing ? \"Edit Patient\" : \"Add Patient\"}</h4>\r\n//               <hr className=\"border border-3 border-success\" />\r\n//                 <div className=\"row g-3 mt-2\">\r\n                 \r\n                  // <div className=\"col-md-6\">\r\n                  //   <div className=\"form-floating\">\r\n                  //     <input \r\n                  //       type=\"text\"\r\n                  //       id=\"floatingName\"\r\n                  //       name=\"name\"\r\n                  //       value={formData.name}\r\n                  //       onChange={handleChange}\r\n                  //       placeholder=\"Enter Patient Name\"\r\n                  //       required\r\n                  //       autoComplete=\"off\"\r\n                  //       className=\"form-control\"/>\r\n                  //     <label htmlFor=\"floatingName\">Name</label>\r\n                  //   </div>\r\n                  // </div>\r\n\r\n                  // <div className=\"col-md-6\">\r\n                  //   <div className=\"form-floating\">\r\n                  //     <input \r\n                  //       type=\"date\"\r\n                  //       id=\"floatingDob\"\r\n                  //       name=\"dateOfBirth\"\r\n                  //       value={formData.dateOfBirth}\r\n                  //       onChange={handleChange}\r\n                  //       rplaceholder=\"Enter Date of Birth\"\r\n                  //       required\r\n                  //       autoComplete=\"off\"\r\n                  //       className=\"form-control\"/>\r\n                  //     <label htmlFor=\"floatingDob\">Date of Birth</label>\r\n                  //   </div>\r\n                  // </div>\r\n\r\n                  // <div className=\"col-md-6\">\r\n                  //   <div className=\"form-floating\">\r\n                  //     <input \r\n                  //       type=\"email\"\r\n                  //       id=\"floatingEmail\"\r\n                  //       name=\"emailId\"\r\n                  //       value={formData.emailId}\r\n                  //       onChange={handleChange}\r\n                  //       placeholder=\"Enter Email\"\r\n                  //       required\r\n                  //       autoComplete=\"off\"\r\n                  //       className=\"form-control\"/>\r\n                  //     <label htmlFor=\"floatingEmail\">Email</label>\r\n                  //   </div>\r\n                  // </div>\r\n\r\n                  // <div className=\"col-md-6\">\r\n                  //   <div className=\"form-floating\">\r\n                  //     <input \r\n                  //       type=\"text\"\r\n                  //       id=\"floatingPhone\"\r\n                  //       name=\"phone\"\r\n                  //       value={formData.phone}\r\n                  //       onChange={handleChange}\r\n                  //       placeholder=\"Enter Phone Number\"\r\n                  //       required\r\n                  //       autoComplete=\"off\"\r\n                  //       className=\"form-control\"/>\r\n                  //     <label htmlFor=\"floatingPhone\">Phone</label>\r\n                  //   </div>\r\n                  // </div>\r\n\r\n                  // <div className=\"col-md-6\">\r\n                  //   <div className=\"form-floating\">\r\n                  //     <select\r\n                  //         id=\"floatingGender\"\r\n                  //         name=\"gender\"\r\n                  //         value={formData.gender}\r\n                  //         onChange={handleChange}\r\n                  //         placeholder=\"Enter Patient Gender\"\r\n                  //         required\r\n                  //         autoComplete=\"off\"\r\n                  //         className=\"form-select\">\r\n                  //       <option value=\"\">Select Gender</option>\r\n                  //       <option value=\"Male\">Male</option>\r\n                  //       <option value=\"Female\">Female</option>\r\n                  //       <option value=\"Other\">Other</option>\r\n                  //     </select>\r\n                  //     <label htmlFor=\"floatingGender\">Gender</label>\r\n                  //   </div>\r\n                  // </div>\r\n\r\n                  // <div className=\"col-md-6\">\r\n                  //   <div className=\"form-floating\">\r\n                  //     <input \r\n                  //       type=\"text\"\r\n                  //       id=\"floatingAddress\"\r\n                  //       name=\"address\"\r\n                  //       value={formData.address}\r\n                  //       onChange={handleChange}\r\n                  //       placeholder=\"Enter Address\"\r\n                  //       required\r\n                  //       autoComplete=\"off\"\r\n                  //       className=\"form-control\"/>\r\n                  //     <label htmlFor=\"floatingAddress\">Address</label>\r\n                  //   </div>\r\n                  // </div>\r\n\r\n                  // <div className=\"col-md-6\">\r\n                  //   <div className=\"form-floating\">\r\n                  //     <input type=\"text\"\r\n                  //       id=\"floatingRole\"\r\n                  //       name=\"role\"\r\n                  //       value={formData.role}\r\n                  //       onChange={handleChange}\r\n                  //       placeholder=\"Enter Role\"\r\n                  //       required\r\n                  //       autoComplete=\"off\"\r\n                  //       className=\"form-control\" />\r\n                  //     <label htmlFor=\"floatingRole\">Role</label>\r\n                  //   </div>\r\n                  // </div>\r\n\r\n                  // <div className=\"col-md-6\">\r\n                  //   <div className=\"form-floating\">\r\n                  //     <input type=\"password\"\r\n                  //       id=\"floatingPassword\"\r\n                  //       name=\"password\"\r\n                  //       value={formData.password}\r\n                  //       onChange={handleChange}\r\n                  //       placeholder=\"Enter your Password\"\r\n                  //       required\r\n                  //       autoComplete=\"off\"\r\n                  //       className=\"form-control\" />\r\n                  //     <label htmlFor=\"floatingPassword\">Password</label>\r\n                  //   </div>\r\n                  // </div>\r\n\r\n                  // <div className=\"col-md-6\">\r\n                  //   <div className=\"form-floating\">\r\n                  //     <input \r\n                  //       type=\"text\"\r\n                  //       id=\"floatingHeight\"\r\n                  //       name=\"height\"\r\n                  //       value={formData.height}\r\n                  //       onChange={handleChange}\r\n                  //       placeholder=\"Enter Height\"\r\n                  //       required\r\n                  //       autoComplete=\"off\"\r\n                  //       className=\"form-control\"/>\r\n                  //     <label htmlFor=\"floatingHeight\">Height</label>\r\n                  //   </div>\r\n                  // </div>\r\n\r\n                  // <div className=\"col-md-6\">\r\n                  //   <div className=\"form-floating\">\r\n                  //     <input \r\n                  //       type=\"text\"\r\n                  //       id=\"floatingWeight\"\r\n                  //       name=\"weight\"\r\n                  //       value={formData.weight}\r\n                  //       onChange={handleChange}\r\n                  //       placeholder=\"Enter Weight\"\r\n                  //       required\r\n                  //       autoComplete=\"off\"\r\n                  //       className=\"form-control\"\r\n                  //     />\r\n                  //     <label htmlFor=\"floatingWeight\">Weight</label>\r\n                  //   </div>\r\n                  // </div>\r\n\r\n                  // <div className=\"col-md-6\">\r\n                  //   <div className=\"form-floating\">\r\n                  //     <input \r\n                  //       type=\"text\"\r\n                  //       id=\"floatingBloodGroup\"\r\n                  //       name=\"bloodGroup\"\r\n                  //       value={formData.bloodGroup}\r\n                  //       onChange={handleChange}\r\n                  //       placeholder=\"Enter Blood Group\"\r\n                  //       required\r\n                  //       autoComplete=\"off\"\r\n                  //       className=\"form-control\"/>\r\n                  //     <label htmlFor=\"floatingBloodGroup\">Blood Group</label>\r\n                  //   </div>\r\n                  // </div>\r\n\r\n                  // <div className=\"col-md-6\">\r\n                  //   <div className=\"form-floating\">\r\n                  //     <select\r\n                  //         id=\"floatingBloodPressure\"\r\n                  //         name=\"bloodPressure\"\r\n                  //         value={formData.bloodPressure}\r\n                  //         onChange={handleChange}\r\n                  //         className=\"form-select\"\r\n                  //         required>\r\n                  //       <option value=\"\">Select Blood Pressure</option>\r\n                  //       <option value=\"Low\">Low</option>\r\n                  //       <option value=\"Normal\">Normal</option>\r\n                  //       <option value=\"High\">High</option>\r\n                  //     </select>\r\n                  //     <label htmlFor=\"floatingBloodPressure\">Blood Pressure</label>\r\n                  //   </div>\r\n                  // </div>\r\n\r\n                  // <div className=\"col-md-6\">\r\n                  //   <div className=\"form-floating\">\r\n                  //     <select\r\n                  //       id=\"floatingSugarLevel\"\r\n                  //       name=\"sugarLevel\"\r\n                  //       value={formData.sugarLevel}\r\n                  //       onChange={handleChange}\r\n                  //       className=\"form-select\"\r\n                  //       required>\r\n                  //       <option value=\"\">Select Sugar Level</option>\r\n                  //       <option value=\"Low\">Low</option>\r\n                  //       <option value=\"Normal\">Normal</option>\r\n                  //       <option value=\"High\">High</option>\r\n                  //     </select>\r\n                  //     <label htmlFor=\"floatingSugarLevel\">Sugar Level</label>\r\n                  //   </div>\r\n                  // </div>\r\n\r\n                  // <div className=\"col-md-6\">\r\n                  //   <div className=\"form-floating\">\r\n                  //   <input type=\"date\"\r\n                  //       id=\"floatingBloodDonationDate\"\r\n                  //       name=\"bloodDonationDate\"\r\n                  //       value={formData.bloodDonationDate}\r\n                  //       onChange={handleChange}\r\n                  //       placeholder=\"Enter Blood Donation Date\"\r\n                  //       required\r\n                  //       autoComplete=\"off\"\r\n                  //       className=\"form-control\"/>\r\n                  //     <label htmlFor=\"floatingBloodDonationDate\">Blood Donation Date</label>\r\n                  //   </div>\r\n                  // </div>\r\n                  \r\n//                 </div>\r\n\r\n              \r\n//                 {isEditing && (\r\n//                   <div className=\"mt-3\">\r\n//                     <label className=\"form-label\">Upload Document</label>\r\n//                     <input type=\"file\" className=\"form-control\" onChange={handleFileUpload} />\r\n//                   </div>\r\n//                 )}\r\n\r\n//                 <div className=\"mt-3\">\r\n//                   {isEditing ? (\r\n//                     <>\r\n//                       <button className=\"btn btn-success me-2\" onClick={handleUpdatePatient}>Update</button>\r\n//                       <button className=\"btn btn-danger\" onClick={resetForm}>Cancel</button>\r\n//                     </>\r\n//                   ) : (\r\n//                     <button className=\"btn btn-success\" onClick={handleAddPatient}>Add Patient</button>\r\n//                   )}\r\n//                 </div>\r\n//             </div>\r\n\r\n//             <div className=\"mt-5\">\r\n//               <h4>Patients List</h4>\r\n//               <hr className=\"border border-3 border-success\" />\r\n//               {patients.length === 0 ? (\r\n//                 <p className=\"text-muted\">No patients found.</p>\r\n//               ) : (\r\n//                 <ul className=\"list-group\">\r\n//                   {patients.map((patient) => (\r\n//                     <li key={patient.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n//                       <div>\r\n//                         {patient.name} - {patient.emailId} - {patient.phone}\r\n//                       </div>\r\n//                       <div>\r\n//                         <button className=\"btn btn-warning btn-sm me-2\" onClick={() => handleEditPatient(patient)}>Edit</button>\r\n//                         <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeletePatient(patient.id)}>Delete</button>\r\n//                       </div>\r\n//                     </li>\r\n//                   ))}\r\n//                 </ul>\r\n//               )}\r\n//             </div>\r\n\r\n//           </div>\r\n//         </section>\r\n//       <Footer/>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ManagePatient;\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport Swal from \"sweetalert2\";\r\nimport { addPatient,updatePatient,getAllPatients,deletePatient,getPatientId } from \"../api/PatientService\";\r\nimport { registerUser,updateUser,getAllUsers,deleteUser } from \"../api/UserService\";\r\nimport { uploadDocument } from \"../api/DocumentService\";\r\n\r\nconst ManagePatient = () => {\r\n  const [patients, setPatients] = useState([]);\r\n\r\n  const [formData, setFormData] = useState({\r\n    name: \"\", \r\n    dateOfBirth: \"\", \r\n    emailId: \"\", \r\n    phone: \"\", \r\n    gender: \"\", \r\n    address: \"\", \r\n    password: \"\",\r\n    role: \"\", \r\n    height: \"\",\r\n    weight: \"\",\r\n    bloodGroup: \"\",\r\n    bloodPressure: \"\",\r\n    sugarLevel: \"\", \r\n    bloodDonationDate: \"\",\r\n    document: null\r\n  });\r\n\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [selectedPatient, setSelectedPatient] = useState(null);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleFileUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    setFormData({ ...formData, document: file });\r\n  };\r\n\r\n  // const handleAddPatient = () => {\r\n  //   if (!formData.name || !formData.emailId || !formData.phone) {\r\n  //     alert(\"Please fill in all required fields.\");\r\n  //     return;\r\n  //   }\r\n  //   const newPatient = { ...formData, id: patients.length + 1 };\r\n  //   setPatients([...patients, newPatient]);\r\n  //   Swal.fire(\"Success\", \"Patient added Successful!\", \"success\");  \r\n  //   resetForm();\r\n  // };\r\n  const handleAddPatient = async () => {\r\n    if (!formData.name || !formData.emailId || !formData.phone || !formData.password || !formData.role) {\r\n      Swal.fire(\"Error\", \"Please fill in all required fields.\", \"error\");\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const userPayload = {\r\n        name: formData.name,\r\n        emailId: formData.emailId,\r\n        dateOfBirth: formData.dateOfBirth,\r\n        phone: formData.phone,\r\n        gender: formData.gender,\r\n        address: formData.address,\r\n        password: formData.password,\r\n        role: formData.role,\r\n      };\r\n      const userResponse = await registerUser(userPayload);\r\n      const userId = userResponse.data.user_id;\r\n      console.log(userId);\r\n  \r\n      const patient = await getPatientId(userId);\r\n      const patientId = patient.data;\r\n      console.log(patientId); \r\n      const patientPayload = {\r\n        height: formData.height,\r\n        weight: formData.weight,\r\n        bloodGroup: formData.bloodGroup,\r\n        bloodPressure: formData.bloodPressure,\r\n        sugarLevel: formData.sugarLevel,\r\n        bloodDonationDate: formData.bloodDonationDate,\r\n      };\r\n      await addPatient(patientId,patientPayload);\r\n  \r\n      if (formData.document) {\r\n        const formDataObj = new FormData();\r\n        formDataObj.append(\"file\", formData.document);\r\n        // formDataObj.append(\"userId\", userId); \r\n  \r\n        await uploadDocument(patientId,formDataObj);\r\n      }\r\n  \r\n      Swal.fire(\"Success\", \"Patient added successfully!\", \"success\");\r\n      resetForm();\r\n    } catch (error) {\r\n      console.error(\"Error adding patient:\", error);\r\n      Swal.fire(\"Error\", \"Something went wrong while saving patient data.\", \"error\");\r\n    }\r\n  };\r\n\r\n  const handleEditPatient = (patient) => {\r\n    setFormData(patient);\r\n    setIsEditing(true);\r\n    setSelectedPatient(patient);\r\n  };\r\n\r\n  const handleUpdatePatient = () => {\r\n    setPatients(patients.map(pat => (pat.id === formData.id ? formData : pat)));\r\n    Swal.fire(\"Success\", \"Updated Successful!\", \"success\");  \r\n    resetForm();\r\n  };\r\n\r\n  const handleDeletePatient = (id) => {\r\n    setPatients(patients.filter(pat => pat.id !== id));\r\n    Swal.fire(\"Success\", \"Deleted Successful!\", \"success\");    \r\n  };\r\n\r\n  const resetForm = () => {\r\n    setFormData({\r\n      id: null, \r\n      name: \"\", \r\n      dateOfBirth: \"\", \r\n      emailId: \"\", \r\n      phone: \"\", \r\n      gender: \"\", \r\n      address: \"\",  \r\n      height: \"\",\r\n      weight: \"\",\r\n      bloodGroup: \"\",\r\n      bloodPressure: \"\",\r\n      sugarLevel: \"\",\r\n      password: \"\",\r\n      role: \"\",\r\n      bloodDonationDate: \"\",\r\n      document: null\r\n    });\r\n    setIsEditing(false);\r\n    setSelectedPatient(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"managepatient\">\r\n      <Header/>\r\n        <section className=\"managepatientsection\">\r\n          <div className=\"container mt-4\">\r\n            <h2 className=\"text-start\">Manage Patients</h2>\r\n            \r\n            <div className=\"mt-4\">\r\n            <h4>{isEditing ? \"Edit Patient\" : \"Add Patient\"}</h4>\r\n               <hr className=\"border border-3 border-success\" />\r\n               <div className=\"row g-3 mt-2\">\r\n                 \r\n               <div className=\"col-md-6\">\r\n                    <div className=\"form-floating\">\r\n                      <input \r\n                        type=\"text\"\r\n                        id=\"floatingName\"\r\n                        name=\"name\"\r\n                        value={formData.name}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Enter Patient Name\"\r\n                        required\r\n                        autoComplete=\"off\"\r\n                        className=\"form-control\"/>\r\n                      <label htmlFor=\"floatingName\">Name</label>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-floating\">\r\n                      <input \r\n                        type=\"date\"\r\n                        id=\"floatingDob\"\r\n                        name=\"dateOfBirth\"\r\n                        value={formData.dateOfBirth}\r\n                        onChange={handleChange}\r\n                        rplaceholder=\"Enter Date of Birth\"\r\n                        required\r\n                        autoComplete=\"off\"\r\n                        className=\"form-control\"/>\r\n                      <label htmlFor=\"floatingDob\">Date of Birth</label>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-floating\">\r\n                      <input \r\n                        type=\"email\"\r\n                        id=\"floatingEmail\"\r\n                        name=\"emailId\"\r\n                        value={formData.emailId}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Enter Email\"\r\n                        required\r\n                        autoComplete=\"off\"\r\n                        className=\"form-control\"/>\r\n                      <label htmlFor=\"floatingEmail\">Email</label>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-floating\">\r\n                      <input \r\n                        type=\"text\"\r\n                        id=\"floatingPhone\"\r\n                        name=\"phone\"\r\n                        value={formData.phone}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Enter Phone Number\"\r\n                        required\r\n                        autoComplete=\"off\"\r\n                        className=\"form-control\"/>\r\n                      <label htmlFor=\"floatingPhone\">Phone</label>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-floating\">\r\n                      <select\r\n                          id=\"floatingGender\"\r\n                          name=\"gender\"\r\n                          value={formData.gender}\r\n                          onChange={handleChange}\r\n                          placeholder=\"Enter Patient Gender\"\r\n                          required\r\n                          autoComplete=\"off\"\r\n                          className=\"form-select\">\r\n                        <option value=\"\">Select Gender</option>\r\n                        <option value=\"Male\">Male</option>\r\n                        <option value=\"Female\">Female</option>\r\n                        <option value=\"Other\">Other</option>\r\n                      </select>\r\n                      <label htmlFor=\"floatingGender\">Gender</label>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-floating\">\r\n                      <input \r\n                        type=\"text\"\r\n                        id=\"floatingAddress\"\r\n                        name=\"address\"\r\n                        value={formData.address}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Enter Address\"\r\n                        required\r\n                        autoComplete=\"off\"\r\n                        className=\"form-control\"/>\r\n                      <label htmlFor=\"floatingAddress\">Address</label>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-floating\">\r\n                      <input type=\"text\"\r\n                        id=\"floatingRole\"\r\n                        name=\"role\"\r\n                        value={formData.role}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Enter Role\"\r\n                        required\r\n                        autoComplete=\"off\"\r\n                        className=\"form-control\" />\r\n                      <label htmlFor=\"floatingRole\">Role</label>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-floating\">\r\n                      <input type=\"password\"\r\n                        id=\"floatingPassword\"\r\n                        name=\"password\"\r\n                        value={formData.password}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Enter your Password\"\r\n                        required\r\n                        autoComplete=\"off\"\r\n                        className=\"form-control\" />\r\n                      <label htmlFor=\"floatingPassword\">Password</label>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-floating\">\r\n                      <input \r\n                        type=\"text\"\r\n                        id=\"floatingHeight\"\r\n                        name=\"height\"\r\n                        value={formData.height}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Enter Height\"\r\n                        required\r\n                        autoComplete=\"off\"\r\n                        className=\"form-control\"/>\r\n                      <label htmlFor=\"floatingHeight\">Height</label>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-floating\">\r\n                      <input \r\n                        type=\"text\"\r\n                        id=\"floatingWeight\"\r\n                        name=\"weight\"\r\n                        value={formData.weight}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Enter Weight\"\r\n                        required\r\n                        autoComplete=\"off\"\r\n                        className=\"form-control\"\r\n                      />\r\n                      <label htmlFor=\"floatingWeight\">Weight</label>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-floating\">\r\n                      <input \r\n                        type=\"text\"\r\n                        id=\"floatingBloodGroup\"\r\n                        name=\"bloodGroup\"\r\n                        value={formData.bloodGroup}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Enter Blood Group\"\r\n                        required\r\n                        autoComplete=\"off\"\r\n                        className=\"form-control\"/>\r\n                      <label htmlFor=\"floatingBloodGroup\">Blood Group</label>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-floating\">\r\n                      <select\r\n                          id=\"floatingBloodPressure\"\r\n                          name=\"bloodPressure\"\r\n                          value={formData.bloodPressure}\r\n                          onChange={handleChange}\r\n                          className=\"form-select\"\r\n                          required>\r\n                        <option value=\"\">Select Blood Pressure</option>\r\n                        <option value=\"Low\">Low</option>\r\n                        <option value=\"Normal\">Normal</option>\r\n                        <option value=\"High\">High</option>\r\n                      </select>\r\n                      <label htmlFor=\"floatingBloodPressure\">Blood Pressure</label>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-floating\">\r\n                      <select\r\n                        id=\"floatingSugarLevel\"\r\n                        name=\"sugarLevel\"\r\n                        value={formData.sugarLevel}\r\n                        onChange={handleChange}\r\n                        className=\"form-select\"\r\n                        required>\r\n                        <option value=\"\">Select Sugar Level</option>\r\n                        <option value=\"Low\">Low</option>\r\n                        <option value=\"Normal\">Normal</option>\r\n                        <option value=\"High\">High</option>\r\n                      </select>\r\n                      <label htmlFor=\"floatingSugarLevel\">Sugar Level</label>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-floating\">\r\n                    <input type=\"date\"\r\n                        id=\"floatingBloodDonationDate\"\r\n                        name=\"bloodDonationDate\"\r\n                        value={formData.bloodDonationDate}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Enter Blood Donation Date\"\r\n                        required\r\n                        autoComplete=\"off\"\r\n                        className=\"form-control\"/>\r\n                      <label htmlFor=\"floatingBloodDonationDate\">Blood Donation Date</label>\r\n                    </div>\r\n                  </div>\r\n\r\n              </div>\r\n              \r\n              {isEditing && (\r\n                <div className=\"mt-3\">\r\n                  <label className=\"form-label\">Upload Document</label>\r\n                  <input type=\"file\" className=\"form-control\" onChange={handleFileUpload} />\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"mt-3\">\r\n                {isEditing ? (\r\n                  <>\r\n                    <button className=\"btn btn-success me-2\" onClick={handleUpdatePatient}>Update</button>\r\n                    <button className=\"btn btn-danger\" onClick={resetForm}>Cancel</button>\r\n                  </>\r\n                ) : (\r\n                  <button className=\"btn btn-success\" onClick={handleAddPatient}>Add Patient</button>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-5\">\r\n              <h4>Patients List</h4>\r\n              <hr className=\"border border-3 border-success\" />\r\n              {patients.length === 0 ? (\r\n                <p className=\"text-muted\">No patients found.</p>\r\n              ) : (\r\n                <ul className=\"list-group\">\r\n                  {patients.map((patient) => (\r\n                    <li key={patient.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                      <div>\r\n                        {patient.name} - {patient.email} - {patient.phone}\r\n                      </div>\r\n                      <div>\r\n                        <button className=\"btn btn-warning btn-sm me-2\" onClick={() => handleEditPatient(patient)}>Edit</button>\r\n                        <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeletePatient(patient.id)}>Delete</button>\r\n                      </div>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </section>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManagePatient;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEklB;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}