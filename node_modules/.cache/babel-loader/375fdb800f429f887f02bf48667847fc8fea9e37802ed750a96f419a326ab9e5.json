{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kumaran project\\\\medilocker\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import Header from \"../components/Header\";\n// import Footer from \"../components/Footer\";\n\n// const Dashboard = ({ userName = \"Kumaran\" }) => {\n//   const [selectedDoctor, setSelectedDoctor] = useState(\"\");\n//   const [appointmentDate, setAppointmentDate] = useState(\"\");\n//   const [appointmentTime, setAppointmentTime] = useState(\"\");\n//   const [appointments, setAppointments] = useState([]);\n\n//   const doctors = [\n//     { name: \"Dr. John - Cardiologist\", unavailableTimes: [\"10:00\", \"15:00\"] },\n//     { name: \"Dr. Smith - Dermatologist\", unavailableTimes: [\"12:30\", \"16:00\"] },\n//     { name: \"Dr. Sam - Neurologist\", unavailableTimes: [\"09:00\", \"14:00\"] },\n//     { name: \"Dr. Johnson - Orthopedic\", unavailableTimes: [\"11:00\", \"17:30\"] },\n//   ];\n\n//   const handleChange = (e) => {\n//     setSelectedDoctor(e.target.value);\n//   };\n\n//   const handleBookAppointment = () => {\n//     if (selectedDoctor && appointmentDate && appointmentTime) {\n//       const newAppointment = {\n//         doctor: selectedDoctor,\n//         date: appointmentDate,\n//         time: appointmentTime,\n//       };\n\n//       setAppointments([...appointments, newAppointment]);\n//       setSelectedDoctor(\"\");\n//       setAppointmentDate(\"\");\n//       setAppointmentTime(\"\");\n//     }\n//   };\n\n//   const handleCancelAppointment = (index) => {\n//     const updatedAppointments = appointments.filter((_, i) => i !== index);\n//     setAppointments(updatedAppointments);\n//   };\n\n//   const getUnavailableTimes = () => {\n//     const doctor = doctors.find((doc) => doc.name === selectedDoctor);\n//     return doctor ? doctor.unavailableTimes : [];\n//   };\n\n//   return (\n//     <div className=\"dashboard\">\n//       <Header/>\n//         <section className=\"dashboardsection\">\n//           <div className=\"container mt-4\">\n//             <h2 className=\"text-start\">Dashboard</h2>\n//             <h3 className=\"text-start mt-3\">Welcome, {userName}!</h3>\n//             <div className=\"mt-4\">\n//               <h4>Book an Appointment</h4>\n//               <hr className=\"border border-3 border-success\" />\n\n//               <div className=\"row g-3 mt-2\">\n//                 <div className=\"col-md-4\">\n//                   <div className=\"form-floating\">\n//                     <select\n//                       className=\"form-control\"\n//                       id=\"floatingDoctor\"\n//                       value={selectedDoctor}\n//                       onChange={handleChange}\n//                     >\n//                       <option value=\"\">Select a Doctor</option>\n//                       {doctors.map((doctor, index) => (\n//                         <option key={index} value={doctor.name}>\n//                           {doctor.name}\n//                         </option>\n//                       ))}\n//                     </select>\n//                     <label htmlFor=\"floatingDoctor\">Choose a Doctor</label>\n//                   </div>\n//                 </div>\n//                 <div className=\"col-md-4\">\n//                   <div className=\"form-floating\">\n//                     <input\n//                       type=\"date\"\n//                       className=\"form-control\"\n//                       id=\"floatingDate\"\n//                       value={appointmentDate}\n//                       onChange={(e) => setAppointmentDate(e.target.value)}\n//                     />\n//                     <label htmlFor=\"floatingDate\">Select Date</label>\n//                   </div>\n//                 </div>\n//                 <div className=\"col-md-4\">\n//                   <div className=\"form-floating\">\n//                     <input\n//                       type=\"time\"\n//                       className=\"form-control\"\n//                       id=\"floatingTime\"\n//                       value={appointmentTime}\n//                       onChange={(e) => setAppointmentTime(e.target.value)}\n//                       disabled={!selectedDoctor}\n//                     />\n//                     <label htmlFor=\"floatingTime\">Select Time</label>\n//                   </div>\n//                   {selectedDoctor && getUnavailableTimes().includes(appointmentTime) && (\n//                     <p className=\"text-danger mt-2\"> This time slot is unavailable!</p>\n//                   )}\n//                 </div>\n//                 <div className=\"col-md-12 d-flex justify-content-end\">\n//                   <button\n//                     className=\"btn btn-success appointment-btn\"\n//                     onClick={handleBookAppointment}\n//                     disabled={\n//                       !selectedDoctor ||\n//                       !appointmentDate ||\n//                       !appointmentTime ||\n//                       getUnavailableTimes().includes(appointmentTime)\n//                     }\n//                   >\n//                     Book Appointment\n//                   </button>\n//                 </div>\n//               </div>\n//             </div>\n//             <div className=\"mt-5\">\n//               <h4>My Appointments</h4>\n//               <hr className=\"border border-3 border-success\" />\n//               {appointments.length === 0 ? (\n//                 <p className=\"text-muted\">No active appointments.</p>\n//               ) : (\n//                 <ul className=\"list-group\">\n//                   {appointments.map((appointment, index) => (\n//                     <li key={index} className=\"list-group-item d-flex justify-content-between\">\n//                       <span>\n//                         {appointment.date} -  {appointment.time} - {appointment.doctor}\n//                       </span>\n//                       <button\n//                         className=\"btn btn-danger btn-sm\"\n//                         onClick={() => handleCancelAppointment(index)}\n//                       >\n//                         Cancel\n//                       </button>\n//                     </li>\n//                   ))}\n//                 </ul>\n//               )}\n//             </div>\n//           </div>\n//         </section>\n//       <Footer/>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\nimport React, { useState, useEffect } from \"react\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  userName = \"Kumaran\"\n}) => {\n  _s();\n  const [selectedDoctor, setSelectedDoctor] = useState(\"\");\n  const [appointmentDate, setAppointmentDate] = useState(\"\");\n  const [appointmentTime, setAppointmentTime] = useState(\"\");\n  const [appointments, setAppointments] = useState([]);\n  const [sugarData, setSugarData] = useState([]);\n  const [beforeEating, setBeforeEating] = useState(\"\");\n  const [afterEating, setAfterEating] = useState(\"\");\n  const [timeRange, setTimeRange] = useState(\"week\");\n  const doctors = [{\n    name: \"Dr. John - Cardiologist\",\n    unavailableTimes: [\"10:00\", \"15:00\"]\n  }, {\n    name: \"Dr. Smith - Dermatologist\",\n    unavailableTimes: [\"12:30\", \"16:00\"]\n  }, {\n    name: \"Dr. Sam - Neurologist\",\n    unavailableTimes: [\"09:00\", \"14:00\"]\n  }, {\n    name: \"Dr. Johnson - Orthopedic\",\n    unavailableTimes: [\"11:00\", \"17:30\"]\n  }];\n  const handleChange = e => setSelectedDoctor(e.target.value);\n  const handleBookAppointment = () => {\n    if (selectedDoctor && appointmentDate && appointmentTime) {\n      const newAppointment = {\n        doctor: selectedDoctor,\n        date: appointmentDate,\n        time: appointmentTime\n      };\n      setAppointments([...appointments, newAppointment]);\n      setSelectedDoctor(\"\");\n      setAppointmentDate(\"\");\n      setAppointmentTime(\"\");\n    }\n  };\n  const handleCancelAppointment = index => {\n    setAppointments(appointments.filter((_, i) => i !== index));\n  };\n  const isUploadAllowed = () => {\n    const now = new Date();\n    const hours = now.getHours();\n    return hours >= 17 && hours < 19;\n  };\n  const handleSugarUpload = () => {\n    if (beforeEating && afterEating) {\n      const today = new Date().toISOString().split(\"T\")[0];\n      setSugarData([...sugarData, {\n        date: today,\n        beforeEating,\n        afterEating\n      }]);\n      setBeforeEating(\"\");\n      setAfterEating(\"\");\n    }\n  };\n  const getFilteredData = () => {\n    const now = new Date();\n    return sugarData.filter(({\n      date\n    }) => {\n      const dataDate = new Date(date);\n      const diffDays = (now - dataDate) / (1000 * 60 * 60 * 24);\n      return timeRange === \"week\" ? diffDays <= 7 : diffDays <= 30;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"dashboardsection\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Welcome, \", userName, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"mt-4\",\n          children: \"Sugar Level Tracking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row g-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"form-control\",\n              placeholder: \"Before Eating\",\n              value: beforeEating,\n              onChange: e => setBeforeEating(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"form-control\",\n              placeholder: \"After Eating\",\n              value: afterEating,\n              onChange: e => setAfterEating(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: handleSugarUpload,\n              disabled: !isUploadAllowed(),\n              children: \"Upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Sugar Level Graph\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-select\",\n            onChange: e => setTimeRange(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"week\",\n              children: \"Last Week\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"month\",\n              children: \"Last Month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 300,\n            children: /*#__PURE__*/_jsxDEV(LineChart, {\n              data: getFilteredData(),\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"beforeEating\",\n                stroke: \"#8884d8\",\n                name: \"Before Eating\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"afterEating\",\n                stroke: \"#82ca9d\",\n                name: \"After Eating\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"wG8tfZH4HpvWZQOLHsIwPA+2Ac0=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","Header","Footer","jsxDEV","_jsxDEV","Dashboard","userName","_s","selectedDoctor","setSelectedDoctor","appointmentDate","setAppointmentDate","appointmentTime","setAppointmentTime","appointments","setAppointments","sugarData","setSugarData","beforeEating","setBeforeEating","afterEating","setAfterEating","timeRange","setTimeRange","doctors","name","unavailableTimes","handleChange","e","target","value","handleBookAppointment","newAppointment","doctor","date","time","handleCancelAppointment","index","filter","_","i","isUploadAllowed","now","Date","hours","getHours","handleSugarUpload","today","toISOString","split","getFilteredData","dataDate","diffDays","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","disabled","width","height","data","strokeDasharray","dataKey","stroke","_c","$RefreshReg$"],"sources":["D:/Kumaran project/medilocker/src/pages/Dashboard.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import Header from \"../components/Header\";\r\n// import Footer from \"../components/Footer\";\r\n\r\n// const Dashboard = ({ userName = \"Kumaran\" }) => {\r\n//   const [selectedDoctor, setSelectedDoctor] = useState(\"\");\r\n//   const [appointmentDate, setAppointmentDate] = useState(\"\");\r\n//   const [appointmentTime, setAppointmentTime] = useState(\"\");\r\n//   const [appointments, setAppointments] = useState([]);\r\n\r\n//   const doctors = [\r\n//     { name: \"Dr. John - Cardiologist\", unavailableTimes: [\"10:00\", \"15:00\"] },\r\n//     { name: \"Dr. Smith - Dermatologist\", unavailableTimes: [\"12:30\", \"16:00\"] },\r\n//     { name: \"Dr. Sam - Neurologist\", unavailableTimes: [\"09:00\", \"14:00\"] },\r\n//     { name: \"Dr. Johnson - Orthopedic\", unavailableTimes: [\"11:00\", \"17:30\"] },\r\n//   ];\r\n\r\n//   const handleChange = (e) => {\r\n//     setSelectedDoctor(e.target.value);\r\n//   };\r\n\r\n//   const handleBookAppointment = () => {\r\n//     if (selectedDoctor && appointmentDate && appointmentTime) {\r\n//       const newAppointment = {\r\n//         doctor: selectedDoctor,\r\n//         date: appointmentDate,\r\n//         time: appointmentTime,\r\n//       };\r\n\r\n//       setAppointments([...appointments, newAppointment]);\r\n//       setSelectedDoctor(\"\");\r\n//       setAppointmentDate(\"\");\r\n//       setAppointmentTime(\"\");\r\n//     }\r\n//   };\r\n\r\n//   const handleCancelAppointment = (index) => {\r\n//     const updatedAppointments = appointments.filter((_, i) => i !== index);\r\n//     setAppointments(updatedAppointments);\r\n//   };\r\n\r\n//   const getUnavailableTimes = () => {\r\n//     const doctor = doctors.find((doc) => doc.name === selectedDoctor);\r\n//     return doctor ? doctor.unavailableTimes : [];\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"dashboard\">\r\n//       <Header/>\r\n//         <section className=\"dashboardsection\">\r\n//           <div className=\"container mt-4\">\r\n//             <h2 className=\"text-start\">Dashboard</h2>\r\n//             <h3 className=\"text-start mt-3\">Welcome, {userName}!</h3>\r\n//             <div className=\"mt-4\">\r\n//               <h4>Book an Appointment</h4>\r\n//               <hr className=\"border border-3 border-success\" />\r\n\r\n//               <div className=\"row g-3 mt-2\">\r\n//                 <div className=\"col-md-4\">\r\n//                   <div className=\"form-floating\">\r\n//                     <select\r\n//                       className=\"form-control\"\r\n//                       id=\"floatingDoctor\"\r\n//                       value={selectedDoctor}\r\n//                       onChange={handleChange}\r\n//                     >\r\n//                       <option value=\"\">Select a Doctor</option>\r\n//                       {doctors.map((doctor, index) => (\r\n//                         <option key={index} value={doctor.name}>\r\n//                           {doctor.name}\r\n//                         </option>\r\n//                       ))}\r\n//                     </select>\r\n//                     <label htmlFor=\"floatingDoctor\">Choose a Doctor</label>\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"col-md-4\">\r\n//                   <div className=\"form-floating\">\r\n//                     <input\r\n//                       type=\"date\"\r\n//                       className=\"form-control\"\r\n//                       id=\"floatingDate\"\r\n//                       value={appointmentDate}\r\n//                       onChange={(e) => setAppointmentDate(e.target.value)}\r\n//                     />\r\n//                     <label htmlFor=\"floatingDate\">Select Date</label>\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"col-md-4\">\r\n//                   <div className=\"form-floating\">\r\n//                     <input\r\n//                       type=\"time\"\r\n//                       className=\"form-control\"\r\n//                       id=\"floatingTime\"\r\n//                       value={appointmentTime}\r\n//                       onChange={(e) => setAppointmentTime(e.target.value)}\r\n//                       disabled={!selectedDoctor}\r\n//                     />\r\n//                     <label htmlFor=\"floatingTime\">Select Time</label>\r\n//                   </div>\r\n//                   {selectedDoctor && getUnavailableTimes().includes(appointmentTime) && (\r\n//                     <p className=\"text-danger mt-2\"> This time slot is unavailable!</p>\r\n//                   )}\r\n//                 </div>\r\n//                 <div className=\"col-md-12 d-flex justify-content-end\">\r\n//                   <button\r\n//                     className=\"btn btn-success appointment-btn\"\r\n//                     onClick={handleBookAppointment}\r\n//                     disabled={\r\n//                       !selectedDoctor ||\r\n//                       !appointmentDate ||\r\n//                       !appointmentTime ||\r\n//                       getUnavailableTimes().includes(appointmentTime)\r\n//                     }\r\n//                   >\r\n//                     Book Appointment\r\n//                   </button>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//             <div className=\"mt-5\">\r\n//               <h4>My Appointments</h4>\r\n//               <hr className=\"border border-3 border-success\" />\r\n//               {appointments.length === 0 ? (\r\n//                 <p className=\"text-muted\">No active appointments.</p>\r\n//               ) : (\r\n//                 <ul className=\"list-group\">\r\n//                   {appointments.map((appointment, index) => (\r\n//                     <li key={index} className=\"list-group-item d-flex justify-content-between\">\r\n//                       <span>\r\n//                         {appointment.date} -  {appointment.time} - {appointment.doctor}\r\n//                       </span>\r\n//                       <button\r\n//                         className=\"btn btn-danger btn-sm\"\r\n//                         onClick={() => handleCancelAppointment(index)}\r\n//                       >\r\n//                         Cancel\r\n//                       </button>\r\n//                     </li>\r\n//                   ))}\r\n//                 </ul>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//         </section>\r\n//       <Footer/>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Dashboard;\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\n\r\nconst Dashboard = ({ userName = \"Kumaran\" }) => {\r\n  const [selectedDoctor, setSelectedDoctor] = useState(\"\");\r\n  const [appointmentDate, setAppointmentDate] = useState(\"\");\r\n  const [appointmentTime, setAppointmentTime] = useState(\"\");\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [sugarData, setSugarData] = useState([]);\r\n  const [beforeEating, setBeforeEating] = useState(\"\");\r\n  const [afterEating, setAfterEating] = useState(\"\");\r\n  const [timeRange, setTimeRange] = useState(\"week\");\r\n\r\n  const doctors = [\r\n    { name: \"Dr. John - Cardiologist\", unavailableTimes: [\"10:00\", \"15:00\"] },\r\n    { name: \"Dr. Smith - Dermatologist\", unavailableTimes: [\"12:30\", \"16:00\"] },\r\n    { name: \"Dr. Sam - Neurologist\", unavailableTimes: [\"09:00\", \"14:00\"] },\r\n    { name: \"Dr. Johnson - Orthopedic\", unavailableTimes: [\"11:00\", \"17:30\"] },\r\n  ];\r\n\r\n  const handleChange = (e) => setSelectedDoctor(e.target.value);\r\n\r\n  const handleBookAppointment = () => {\r\n    if (selectedDoctor && appointmentDate && appointmentTime) {\r\n      const newAppointment = { doctor: selectedDoctor, date: appointmentDate, time: appointmentTime };\r\n      setAppointments([...appointments, newAppointment]);\r\n      setSelectedDoctor(\"\");\r\n      setAppointmentDate(\"\");\r\n      setAppointmentTime(\"\");\r\n    }\r\n  };\r\n\r\n  const handleCancelAppointment = (index) => {\r\n    setAppointments(appointments.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const isUploadAllowed = () => {\r\n    const now = new Date();\r\n    const hours = now.getHours();\r\n    return hours >= 17 && hours < 19;\r\n  };\r\n\r\n  const handleSugarUpload = () => {\r\n    if (beforeEating && afterEating) {\r\n      const today = new Date().toISOString().split(\"T\")[0];\r\n      setSugarData([...sugarData, { date: today, beforeEating, afterEating }]);\r\n      setBeforeEating(\"\");\r\n      setAfterEating(\"\");\r\n    }\r\n  };\r\n\r\n  const getFilteredData = () => {\r\n    const now = new Date();\r\n    return sugarData.filter(({ date }) => {\r\n      const dataDate = new Date(date);\r\n      const diffDays = (now - dataDate) / (1000 * 60 * 60 * 24);\r\n      return timeRange === \"week\" ? diffDays <= 7 : diffDays <= 30;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <Header />\r\n      <section className=\"dashboardsection\">\r\n        <div className=\"container mt-4\">\r\n          <h2>Dashboard</h2>\r\n          <h3>Welcome, {userName}!</h3>\r\n\r\n          <h4 className=\"mt-4\">Sugar Level Tracking</h4>\r\n          <div className=\"row g-3\">\r\n            <div className=\"col-md-4\">\r\n              <input type=\"number\" className=\"form-control\" placeholder=\"Before Eating\" value={beforeEating} onChange={(e) => setBeforeEating(e.target.value)} />\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <input type=\"number\" className=\"form-control\" placeholder=\"After Eating\" value={afterEating} onChange={(e) => setAfterEating(e.target.value)} />\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <button className=\"btn btn-primary\" onClick={handleSugarUpload} disabled={!isUploadAllowed()}>\r\n                Upload\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mt-4\">\r\n            <h4>Sugar Level Graph</h4>\r\n            <select className=\"form-select\" onChange={(e) => setTimeRange(e.target.value)}>\r\n              <option value=\"week\">Last Week</option>\r\n              <option value=\"month\">Last Month</option>\r\n            </select>\r\n            <ResponsiveContainer width=\"100%\" height={300}>\r\n              <LineChart data={getFilteredData()}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"date\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Line type=\"monotone\" dataKey=\"beforeEating\" stroke=\"#8884d8\" name=\"Before Eating\" />\r\n                <Line type=\"monotone\" dataKey=\"afterEating\" stroke=\"#82ca9d\" name=\"After Eating\" />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}